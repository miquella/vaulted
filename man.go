// Code generated by go-bindata.
// sources:
// doc/man/vaulted-add.1
// doc/man/vaulted-cp.1
// doc/man/vaulted-dump.1
// doc/man/vaulted-edit.1
// doc/man/vaulted-env.1
// doc/man/vaulted-exec.1
// doc/man/vaulted-load.1
// doc/man/vaulted-ls.1
// doc/man/vaulted-passwd.1
// doc/man/vaulted-rm.1
// doc/man/vaulted-shell.1
// doc/man/vaulted-upgrade.1
// doc/man/vaulted.1
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _vaultedAdd1 = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\x41\x4e\xc3\x30\x10\x45\xf7\x39\xc5\x3f\x00\x8d\xc4\x11\xa0\x54\x4a\x16\xa4\x56\x5d\x16\x48\xde\x0c\xf1\x18\x2c\xb5\xe3\x92\x4c\x1d\x71\x7b\x14\xb7\x20\x14\xa1\xae\xdf\x9b\x37\xfa\xf5\xbe\x41\xa6\xf3\x41\xd9\xbb\x15\x79\x8f\xfb\xaa\xb6\x0d\xba\x87\xe7\x4d\x55\x1b\x53\x5d\x19\x66\xe4\x56\x88\xa2\x3c\x50\xaf\x31\xf3\xe1\x0b\xfd\xc0\xa4\x3c\x42\x3f\x18\x7d\x12\x65\x51\xa4\x00\x82\xf0\x74\xa9\x96\x98\x7d\xed\xb6\xc6\xb6\xb6\x04\x5d\x78\x74\x61\xfd\x27\xeb\xc2\x0e\x2e\xb4\x42\x47\x76\xc1\xfc\xe3\x5c\xbe\x2c\xb5\xb7\x61\xa1\x09\x4f\x4b\xc7\x36\x78\xda\xd8\xf5\xae\x35\xfb\x76\xdb\x95\xb4\x3d\xd1\x24\x23\x48\x7e\xa7\x64\xc6\x31\x79\x46\x48\x03\xd8\x47\x8d\xf2\x7e\x63\x50\x5d\x2a\x2f\xa7\x24\xf8\x3c\x47\x9d\xed\xbb\xa2\xcf\xc6\xcf\x49\x1c\x31\x52\x66\x0f\x4d\x85\x5d\x2f\xbf\x03\x00\x00\xff\xff\xb4\x37\x77\xb9\x6c\x01\x00\x00")

func vaultedAdd1Bytes() ([]byte, error) {
	return bindataRead(
		_vaultedAdd1,
		"vaulted-add.1",
	)
}

func vaultedAdd1() (*asset, error) {
	bytes, err := vaultedAdd1Bytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vaulted-add.1", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vaultedCp1 = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x90\xc1\x6a\xeb\x30\x10\x45\xf7\xfe\x8a\xbb\x7a\xab\xc4\xf0\x3e\x21\x4d\x0c\x31\xb4\x8e\x89\xd2\x86\x82\xa0\x28\xf6\x08\x0b\x1c\xc9\x95\x14\x9b\xfc\x7d\x91\xa2\x24\x14\xda\x2e\xda\x9d\xf1\x5c\xdd\x73\x66\xf2\xdd\x1a\xa3\x38\xf5\x9e\x5a\x3e\x6f\x06\xfc\xcf\x72\xb6\x46\xb5\x78\x2a\xb2\xbc\xae\xb3\x34\x42\x33\x80\xcf\xd1\x98\x41\x91\x83\xef\x08\x8d\xd1\x9e\xb4\x87\x91\x10\x97\x02\x08\xdd\xc2\x89\x91\x1c\x94\x87\x70\x10\xd0\x34\xa5\xd9\xa4\x7c\x97\x7e\x0c\xc2\xb9\xc9\xd8\x36\x82\xd8\x6b\xb5\xa9\x59\xc9\x22\x8c\xcb\x07\x2e\x97\x77\x24\x97\x5b\x70\x59\x9a\xbe\xe5\xb2\x0e\x5f\x9a\x26\x2e\xeb\xaf\xb2\x66\x38\x7f\x9b\x66\x6b\xac\x0a\xb6\xdc\x96\xf5\xae\xdc\x54\xf1\xf5\x32\xd9\x2b\x1d\x97\xb9\x85\x93\xad\x72\x68\x2c\x89\xd0\x6c\x2c\x2c\x0d\xbd\x68\xa8\xc5\xe1\x7c\x5b\x5b\x5a\x73\xbc\xd3\xf8\xbf\x3c\xd6\x96\x32\xd5\x05\xb7\x97\xc5\xf3\xe3\xae\x58\xbd\xd5\x0b\xc6\xf6\x9b\xed\x2a\xf8\x91\x1e\x95\x35\xfa\x18\x2a\x46\x61\x95\x38\xf4\x14\x68\x8e\xfc\x2c\x5c\x6d\x52\x7d\x8f\x03\xe1\xe4\xa8\x0d\x27\xf4\x1d\x65\xd7\x7b\x41\x1a\x7b\x47\xce\x60\x7c\x47\x76\x52\x8e\x22\xf3\x96\xba\x56\x58\x7a\x3f\x91\x0b\x2b\x8c\x4a\xc4\x88\xf7\xe7\x1f\x34\xab\x62\xff\x17\xd5\xec\x93\x44\x52\xbd\x1c\xf5\xb7\xaa\x1f\x01\x00\x00\xff\xff\xac\xf1\xb5\x97\x9b\x02\x00\x00")

func vaultedCp1Bytes() ([]byte, error) {
	return bindataRead(
		_vaultedCp1,
		"vaulted-cp.1",
	)
}

func vaultedCp1() (*asset, error) {
	bytes, err := vaultedCp1Bytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vaulted-cp.1", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vaultedDump1 = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\xcd\x41\x8a\x83\x30\x14\xc6\xf1\x7d\x4e\xf1\x5d\xc0\xc0\x1c\x61\x46\x05\x33\x30\x1a\x8c\x9b\x81\x6c\x42\xcd\xa3\x42\x93\x88\xbe\xb4\xd7\x2f\xa6\x5d\x94\x76\xf9\xf8\x78\xbf\xbf\x9c\x3a\x5c\x5d\xbe\xb0\x9f\x6d\x35\xe7\xb0\xe2\x4b\x48\xd3\xa1\xff\xfe\x6b\x85\xd4\x5a\x3c\x47\x94\xcd\x56\xb8\x6d\x0b\xfb\x1d\x7c\xf6\x38\xa5\xc8\x3e\x32\x12\xc1\x3d\x10\x70\xc2\xce\x73\xca\x0c\xb7\xe3\xd7\x0c\x7d\xc1\xcc\x7f\x3f\x68\xa3\x4c\x01\x2d\xfd\x58\xaa\x5f\x59\x4b\x23\x2c\xa9\xe8\x82\xb7\xa4\xcb\x47\xd3\x9a\x7a\x54\x7a\x52\x87\xa0\xb5\x68\x72\x58\x3f\xa2\xc7\xf9\x9e\x5d\x62\xc9\x82\xd2\x16\x1c\x4b\x71\x0f\x00\x00\xff\xff\xbe\x1d\xa8\x5d\xe0\x00\x00\x00")

func vaultedDump1Bytes() ([]byte, error) {
	return bindataRead(
		_vaultedDump1,
		"vaulted-dump.1",
	)
}

func vaultedDump1() (*asset, error) {
	bytes, err := vaultedDump1Bytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vaulted-dump.1", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vaultedEdit1 = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x54\xdb\x6e\xdb\x46\x10\x7d\xdf\xaf\x98\xa7\xc6\x01\x64\x16\xe9\x1f\x28\xb1\x5c\x0b\x89\x6c\x41\x54\x11\x04\xe0\xcb\x90\x3b\x14\xb7\xd9\x8b\xba\x17\x31\xfa\xfb\x62\x86\x94\x2c\x1b\x05\xfa\xba\x33\x73\xf6\x5c\x66\xb7\xda\x3f\xc1\x09\x8b\xcd\xa4\x9b\x7b\xd2\x26\xc3\x27\x55\xd5\x4f\xf0\xbc\xdc\xac\x54\xb5\xdd\xaa\xb9\x08\x52\x6b\xee\xc1\xf8\x4c\x11\xbb\x6c\x4e\x64\xcf\x72\x9a\x20\x0f\x04\x5d\xf0\x99\x7c\x86\xd0\x03\x7a\xa0\x5f\x26\x65\xe3\x0f\x13\xb6\x20\xd6\x3f\x9e\x5f\xb6\xf5\xba\x16\xd4\xa6\xff\xdc\xf4\x5f\x6e\xb1\x9b\x7e\x07\x4d\xbf\xf6\xe8\xa8\xe9\xb7\x32\xf1\xb0\xaa\xbf\xec\xd6\xdb\xfd\xfa\xe5\x59\x86\xea\x23\x8e\x3e\x31\xfc\x85\xc4\x89\xc0\x05\x4d\xd0\x87\x28\x20\x7c\xe3\xff\x91\xa9\x04\xeb\xaf\x63\xf0\xf0\x4f\x31\x99\x0b\x0b\x19\xf2\x34\x5e\x07\x4d\x82\x84\x27\xd2\x90\x83\xd4\x2e\x93\xf5\x13\xfc\xf9\xed\xe5\xf3\xf2\x9b\xaa\x76\xb5\xaa\xd6\x5b\x68\xee\xda\x02\x7f\xa8\x9a\xbd\xa9\x87\x30\xfe\xfe\x64\x34\x41\x4d\x5d\xa4\x9c\x54\xd5\x46\xb5\x0f\x87\x83\xa5\x04\xe3\x40\x79\xa0\x08\x49\x6a\x70\x42\x5b\x28\x01\x46\x02\x6d\xd2\xd1\xe2\x99\x34\xf7\x78\x38\x19\x1a\xaf\x74\x41\x53\x46\x63\x93\x32\x5e\x98\x48\x0e\x8e\x7c\xa9\x60\x3f\x30\x4d\x12\x09\xcc\xf8\x60\x43\x8b\x16\xd0\x6b\xc0\xbe\xa7\x6e\x4e\x86\x7c\x36\x91\x2e\xfe\xa8\x44\x29\x99\xe0\xa5\xcd\x24\x88\x94\x28\xb3\xcc\xc1\x68\x4d\x1e\x08\xbb\x01\xb2\x71\xf4\xaa\x7b\x6a\x0b\x47\xf2\xa4\xd9\x6a\x35\x43\x55\xaa\xda\xad\xc4\x93\xe5\xf7\x1a\xbe\xae\x7e\xbc\x37\xe5\x27\x9b\xf2\x95\xce\x62\xc3\x06\x3d\x1e\x28\xc1\xb2\xeb\x28\x25\x3e\x86\xf5\x83\xb0\x98\xcc\xba\x2d\x74\x91\x34\xd3\x46\x9b\xaa\x5b\x40\xc7\x80\x9b\xc7\xe5\x1b\xc0\xcd\xe3\x12\xee\x5c\xb1\xd9\x34\xf7\x3d\x76\x39\x44\xc0\x92\x07\x9e\xef\x30\x9b\xe0\x3f\xc2\x72\xf7\x0c\x81\x9d\x8f\x06\x2d\xf8\xe2\x5a\x8a\x15\xac\x7b\x20\x8f\xad\x25\xbd\x50\x25\x51\x84\xd1\x58\x0b\x2d\xc1\x31\x06\x77\xcc\x53\xfa\xc4\xab\x26\x77\x74\xbc\x69\x12\x10\x0a\xd3\xd7\x8d\x92\x32\x0f\xab\x48\x0e\x0d\x37\xf0\xfb\x90\xb5\x7c\x75\x51\x97\x28\x74\x2a\x61\xbf\xee\xe1\x1c\x8a\xc4\x5f\x04\xaa\xde\xd7\xb7\xba\x17\x30\x0e\xa6\x1b\x20\x74\x5d\x89\x09\xda\x33\x68\xea\x05\xe7\x2e\xd1\x14\xce\x87\xfc\x41\x85\x23\x43\x42\x4b\x36\x8c\x72\xdf\xbc\x2e\x1f\x17\x02\xef\x4a\xca\x30\xe0\x89\x84\xe2\xac\x96\x65\x19\x7f\x0a\x3f\x09\xd0\x9f\x61\xbd\xdc\x40\x87\xf6\x9d\xd5\x91\xad\xde\x05\x4b\xc2\x56\x0c\xec\x21\x06\x4b\x3c\xdd\x12\x60\x4a\xc5\x5d\x36\xf6\xbd\x21\xea\xbb\x9c\x72\x0b\x1f\xa2\x0c\x4e\xaf\xcc\xe1\x2f\xe3\x8a\xbb\xba\x01\x68\x6d\x18\x49\xb3\x42\x5e\x23\x93\xe0\x13\x0c\xa1\x4c\xf9\x9c\x43\x89\xea\xda\xca\x3b\x1e\x09\x39\x90\x3c\xa0\x9f\x1b\x27\x0a\x97\x77\x70\x7b\xd7\x75\x70\x0e\x56\xa1\xfe\xbb\xa4\x39\xd8\xf9\x96\x5b\xcd\xf2\xc1\xd5\xa5\x4d\xd9\xe4\x92\x09\x46\x93\x07\xc8\xe4\x8e\x21\x62\x7c\xb3\x95\xff\xf9\xb0\x99\xac\x68\xb8\x69\x94\x80\xd3\x15\x52\x4f\x98\xc8\x74\xd9\xd0\x2b\xb8\xba\x5d\x79\x78\x0c\x11\x5c\xe0\x9f\x61\x4a\x13\x02\x3f\x7e\x93\x78\x33\xd9\xe9\x05\x5c\x76\x40\x87\xae\x38\xf2\x79\xd2\xc9\x8f\xf3\xed\xd7\x9a\x06\xb2\xb6\xe9\x77\xcd\x6f\x6f\x94\x3e\xb0\xd2\x07\xb2\x94\xa7\x7c\x77\xe4\xc2\x89\x7f\x23\x6b\x45\xc1\xe5\xde\x94\x43\x24\x0d\xf3\xdf\x73\xf9\x05\x77\x2b\xf5\x6f\x00\x00\x00\xff\xff\xf3\x29\xcb\x6c\x38\x06\x00\x00")

func vaultedEdit1Bytes() ([]byte, error) {
	return bindataRead(
		_vaultedEdit1,
		"vaulted-edit.1",
	)
}

func vaultedEdit1() (*asset, error) {
	bytes, err := vaultedEdit1Bytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vaulted-edit.1", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vaultedEnv1 = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x59\x6d\x6f\xdb\xb8\xb2\xfe\x1c\xfe\x8a\x01\x2e\x70\x9b\x00\x8e\x8a\x74\xf7\x53\xee\xed\x05\x7c\x13\xb7\xf1\x69\x6b\x1b\x96\xb3\x45\x51\x2f\x0a\x5a\x1a\x59\xdc\x50\xa4\x96\xa4\xec\x18\x45\xff\xfb\xc1\x90\xd4\x8b\x13\x67\x5f\x0e\x70\x0e\x50\x14\x88\x24\x3e\x33\x9c\x79\x66\xe6\x21\x9d\xac\xee\x60\xc7\x1b\xe9\x30\x5f\x5f\xa2\xda\xc1\x15\x4b\xd2\x3b\x98\x8d\x3f\x4d\x58\xb2\x58\xb0\xf8\x0e\xe8\xd5\xfa\x12\x74\xe3\xea\xc6\x59\xb0\x25\x4a\x09\x99\xae\x2a\xae\x72\x0b\xae\xe4\x0e\xa4\xe6\x39\x58\xcc\x0c\x3a\x0b\x85\x36\xc0\x03\x32\x08\xe5\x34\xb8\x12\xc3\x2a\x8f\x9f\x7e\x99\xcd\x17\xe9\x34\xf5\x36\xd6\xc5\xff\xaf\x8b\x9b\x81\xa5\x75\xb1\x84\x75\x31\x55\xbc\xc2\x75\xb1\x80\xaf\xeb\x62\x3a\x5f\xac\xa6\xf3\x59\xba\x2e\x16\xbf\xb2\x64\x63\x9e\xaf\x81\xf5\xe5\xfa\x92\x5b\xdb\xd0\x1a\xbf\x9c\x1b\x75\x72\x75\x7a\x07\xb7\x93\xf4\x66\x39\xf5\x0f\xbd\x07\x37\x06\xb9\x43\x0b\x1c\x2c\x5a\x2b\xb4\x82\xc6\x0a\xb5\x85\x1d\x37\x82\x6f\x24\xbd\x51\xb9\xdf\xc2\xf8\x73\x0a\x0f\x78\x00\xeb\xb4\xc1\x1c\x84\xf2\x4f\xbd\x1f\x09\xac\x4a\x64\x06\x6d\x23\x1d\x2d\x46\xb5\x13\x46\xab\x0a\x95\x1b\x02\x19\x84\xc6\x62\x0e\x4e\xc3\x16\x15\x1a\xee\xf0\x64\x38\xf7\x42\x4a\xe6\x63\xea\x43\x17\xe3\xea\x63\xc9\xc3\x82\xc4\xfb\xbe\x6a\x03\x0b\xc2\x02\x6f\x9c\xce\xd1\x61\x46\x51\x29\x8c\xae\xfc\xe2\x10\xac\xf4\x6e\xf2\xf1\x23\xc5\xe6\x94\x63\x23\x10\xc5\x20\x47\xc2\x42\xa3\x1e\x94\xde\x2b\xd0\x06\x1a\x65\x6b\xcc\x44\x21\x30\x1f\x45\x30\x5b\x12\x52\xa6\xab\x9a\x3b\xb1\x91\xd8\x3b\x4f\x1b\xc4\x4a\x38\x87\x79\x12\xd3\x3b\x9d\x69\x87\xd7\x94\x8c\x34\xbd\xa3\xf0\x85\xaf\xc4\x56\xf9\x20\xee\x4b\x54\x6d\x2c\x28\x70\x31\x07\x14\x07\x61\x61\xcf\x0f\x14\x59\x61\x69\x7f\x79\x83\xe0\x34\x23\x47\x85\xe2\x1b\x21\x85\x3b\x50\x24\x9d\xe1\xd9\x83\xf7\x5f\x8a\x02\x9d\xa8\x10\x74\xdc\x4f\x00\x1b\xc1\xbe\x14\x59\x09\x15\x72\x0f\x8c\xde\x15\xbe\x45\xe5\xd8\x5e\x37\x32\x07\x7c\x14\x96\xb8\x9a\x63\x21\x94\x70\x28\x0f\x89\xe7\x4a\xe4\x0e\x4b\x56\x2d\x53\x5f\x60\x1a\x4b\x63\x90\x02\x7e\xd1\x48\x09\xe3\xe5\x8c\x02\x68\x4b\x6d\x1c\x10\x9f\x5b\xb7\x8c\x96\xb4\x13\x08\x38\x09\xa4\x88\x84\x3e\x4e\xd3\xfb\x4f\xd3\xd9\x7b\x18\xc3\x72\xfe\x71\x42\x21\xdb\xa0\xd4\x7b\x5f\x4f\x39\x3a\x2e\xa4\x05\xad\xa0\xd4\x7b\xf8\x25\x92\x3f\x40\x58\x0f\x69\x13\x96\x4c\x17\x6c\x49\xe8\xfe\x79\xed\x88\xcd\x15\x3f\xc0\x06\xa1\x46\x53\x68\x53\x51\xc8\x85\x2b\x75\xe3\x20\xe4\xf5\x40\x51\x6f\xab\xd5\x69\xb0\x35\xdf\x2b\x4f\x9f\x84\x7d\xa6\xe4\x08\xb5\xd3\x0f\xc4\xd9\x98\x90\x11\x64\x06\x73\x54\x4e\x70\x19\x72\x69\x75\x63\xb2\x96\x73\x39\x16\x1e\x4a\xea\x8c\x3b\x9f\xc9\x73\x4c\xb6\x09\x1b\x10\x6f\x04\x99\x56\x85\xd8\x36\xc6\x7f\x01\x85\x90\x68\x47\x20\x94\x75\x5c\x65\x08\xb5\xd1\xf4\x68\x04\xe8\xb2\xe4\x22\x79\x12\x7d\xda\x05\x77\x14\xfd\xff\xf5\x7c\x1d\x15\xc2\x96\x23\x5b\x8e\x7e\xb3\x5a\x8d\xd6\xc5\x34\x6b\xac\xd3\xd5\xba\x58\xfc\x5f\xcc\xca\x01\xf6\x54\x54\x61\x21\xed\xb1\xb1\x38\x6a\x1d\xb5\xf4\xa0\xe5\x35\x4a\x49\xc0\x81\x2e\x54\x84\x83\xa2\x0a\x4f\x59\x28\xb7\x1e\x8b\xe8\x1e\x02\x1f\x40\xc8\x9b\x75\xb1\x1c\xf9\xae\x31\xac\x17\x0f\x47\x5f\xc7\x46\x0a\xb6\x11\x8e\xca\xcf\xe7\x17\x77\x5c\x36\x21\x1c\x7d\xcb\x6c\x0b\x2f\x18\x4d\x22\x1c\xed\xf3\x18\x90\x3e\xae\x78\x4d\xfc\x22\x18\xf4\x7b\xda\x10\xff\x89\xd4\xc0\x5b\x77\x1b\x8b\x45\x23\x41\x28\xa6\x5d\x89\x86\x02\xbd\x35\xbc\xaa\x9e\x74\x2c\x3b\x8a\xc9\x26\x03\x4a\x13\x46\x26\x9b\x1c\xbd\x1d\x6e\x0c\x3f\x04\x4b\xb1\xad\xb1\x60\xcc\x60\xa5\x77\xbe\xee\xa7\x0b\x36\x0d\x4c\x8f\x76\xad\x33\xbe\xb6\x9b\xba\x96\x02\x73\xc8\x35\x5a\x0f\x5c\x71\x97\x95\xa0\x55\x57\x1a\xb5\xc1\xf5\xa5\xaf\x42\xe2\x93\x5f\x6d\x99\x08\x0d\x91\x8c\x08\xe5\xd0\xd4\x06\x03\xf7\x81\x83\xc3\x47\x07\x0e\xab\x5a\x52\x2f\x0d\x9d\x7b\xab\x25\x57\xdb\x57\x16\x36\x8d\x90\x6e\x7d\x29\x54\xcc\x0d\x7d\xfc\xba\xfd\x98\x42\x58\xf3\xec\x81\x6f\xd1\x77\x6f\x8a\x8e\xe9\xa1\x5a\x8b\x9d\xd3\x9c\xb6\xd1\x10\x0f\x84\x2b\xc9\x59\x56\x08\x94\xb9\xa5\x74\x4a\xef\xaf\xaf\xd6\x04\xc6\xd2\x6a\xe0\x3b\x2e\xa4\xcf\x2e\x55\x08\x8f\xa9\x33\x58\x4b\x9e\x79\xd3\x45\xa3\xb2\xc0\x7e\x6d\x60\x6b\x9b\x0d\x48\xf1\x80\x6c\x83\x25\xdf\x09\x1a\xa0\x2a\xef\x96\xb5\x19\xef\xd6\x04\x82\xf2\x2c\xc3\xda\x59\x5f\xbd\xb2\x41\xbf\x84\xf8\x40\x4f\x28\x46\xee\xc0\x6a\x43\x11\xcb\xe1\x1f\xe9\x7c\x16\xd3\x10\x12\x34\xa6\xb1\x06\xf8\xc8\xab\x9a\x2a\xcd\xe9\x96\x95\xbf\x35\xd6\x75\xd3\x6e\x58\xe9\x9e\x48\x1e\x27\xe4\x65\x44\x01\xf3\x71\x08\x05\xd7\x85\xee\x1a\x9e\x16\x2b\xbc\xfa\xfe\x1d\x68\x13\x90\x8c\x3f\xa7\x37\x06\x73\x0b\x3f\x7e\xbc\x5a\x17\x4b\x96\xac\x52\xc6\xa5\xdc\xe8\xc7\xff\x61\xd9\x06\xfc\x3f\x26\x41\x82\xfc\x4b\xff\x27\xec\x1d\x25\x01\x66\xbc\xc2\xb3\xd5\xa1\xc6\x33\x1a\x37\x96\xdd\x84\x89\x74\x16\xb6\x7c\xb6\x6a\x7b\x72\x9c\x54\x40\x09\xeb\x46\x71\xe8\x70\xad\x14\x8a\x6c\x27\x22\x69\xdf\x41\x2d\x6b\x9d\x3e\x0b\x0c\xf0\x70\x14\x1e\x4a\x80\xb5\x5e\x13\x50\x16\xe3\xc8\x11\x5a\x75\x2b\x92\xe9\x6d\xeb\xc3\xf4\xb6\xfb\xe8\x78\x6d\xff\x71\xea\x07\x7d\xbb\x20\xfc\xf5\xa7\x8b\x56\xfa\x01\x55\xbf\x26\x48\x18\x47\x0f\x5f\x58\x0a\xe7\x7e\xe3\x81\xc6\x58\xd5\xda\x70\x73\x18\xa6\xfa\x82\xa5\xe8\xce\x2a\x5e\x7f\x0d\xa8\xbf\x46\xf0\x71\xdb\x64\x4e\xab\x9b\xbe\xe7\x70\xa9\xd5\xb6\xab\x13\x61\x62\x57\x62\xf7\xca\xa2\x3b\xfb\xda\xe3\x59\x29\x32\x3c\x6a\x26\x70\xd4\x4c\x7a\x19\x33\x34\xb9\xc1\x42\x1b\x6f\xc9\x4b\x06\x85\xfb\xd6\x40\xb2\x9a\x3c\x99\x16\x4a\xaf\x2f\xa3\x0c\x20\xba\xdd\x0a\x1b\xcd\x94\xd8\xc9\x0e\xad\x7c\xfb\x39\x15\x0a\x5f\x53\xe6\x78\xa2\x06\xad\x57\xa3\xa9\xb8\x22\x77\x86\x9f\x9f\x90\x86\xbd\xea\xa3\x01\x87\x3c\x3f\x3d\xa6\x33\xae\x8e\xc7\x34\x2f\x1c\x9a\x30\x8e\xc3\x88\x0e\x93\x27\xb4\xb8\x5e\xd9\x1d\x09\x12\xd6\xf2\xbb\x8d\x7d\x10\x21\x03\xd9\x71\xd0\x0d\xec\x85\x2d\x07\xfa\xe3\x49\xc4\x0c\x16\x06\xfd\xc8\x62\xa9\xe3\xc6\x01\xf7\x11\x6e\xc5\xb1\x47\xa6\x07\x2f\xc7\x8b\x43\xc4\x20\x75\xfe\x58\x8b\x10\xe3\xe7\x76\xb6\x21\x29\xa4\xa2\xda\x3f\x16\x6c\xbe\x43\x63\x44\x1c\x36\xe1\x71\xe4\x84\x8f\x21\x51\x7a\xfc\x39\x8d\xaa\xd0\x92\x2c\x1e\x7c\x18\x88\x5d\xa2\x62\x03\x49\x79\xd2\xd1\x90\x04\x2f\x70\x78\xbb\x9a\x84\x2f\x01\x9c\xef\x04\x87\x13\x8e\x8e\x06\x49\x15\xce\xa2\x2c\x46\x10\x2b\x0c\x55\x26\x35\x65\x66\xa8\x73\x5e\xd9\x88\x32\xfe\x9c\x7e\x5b\x4e\xde\x4f\xe7\x33\xda\xae\x36\x83\xc7\xb7\x93\x77\xe3\xfb\x8f\xab\xc1\xeb\xae\x14\x2e\x46\x21\xfb\x98\x0f\x41\xe3\x58\x1e\x8e\xe4\x53\x46\x7a\xf5\x71\xd2\x0a\x7b\xb1\x84\x85\xca\x45\x46\x03\xd0\x0f\xfb\xcc\x89\x5d\x1b\xdd\x20\x89\xa9\x97\x7c\x98\x7c\xf1\xea\xfe\x2b\xd1\x0d\x95\xfb\xf5\x1a\xfe\x0b\xce\x3f\xdf\x4d\x66\xf0\x69\x7e\x3b\x7d\xf7\x85\x54\xec\xea\x6e\x92\x4e\xe0\x76\x7e\x93\x8e\x60\xfc\x31\x9d\xc3\xfd\xe2\x76\xbc\x9a\x5c\xf7\x47\xce\xa0\x6a\xae\x92\x2a\x27\x77\x59\x7f\x14\x7d\xc4\xcc\x3f\xbe\xf0\x56\x5a\xad\xdb\x58\xb4\xf0\xd7\xcb\x6e\x78\xc6\xea\x28\xc0\x86\xab\x42\x29\xd1\x86\xd2\x55\x1a\x34\x40\x7f\x82\x7b\x2a\x72\x5b\xc9\x1a\x46\x86\xe4\xd6\x77\x66\x7f\x1a\xc9\x9b\x41\x17\xe9\xec\xb7\x05\x73\x3e\x58\xd9\x13\xab\x3b\xbd\xe6\x82\xb4\xec\x45\x3c\xcf\x9d\xac\xa9\x8a\x46\xf2\xa6\x6b\x22\xa0\x4d\x4e\x4a\xa5\x2d\x60\x22\xb0\x96\xf8\xfc\xc0\xb5\xc1\x8c\xd3\x8c\x6e\x03\x38\x54\xbc\xb6\xd9\x58\x27\x5c\xe3\xf7\x7a\x3a\xa8\x54\xe9\xec\x64\xf1\x84\x42\x18\x7e\x4b\x6d\xa5\x36\x7a\xe7\x0b\x57\x77\x16\xe9\xec\xd1\xe9\x3c\xe6\x4a\x6d\x31\xe8\x88\x48\xec\x36\x48\xc9\xf3\x44\x53\x5a\xe8\x3c\x90\x73\x93\xbf\x30\x70\xa8\x17\x0c\x9c\xb8\x66\xc9\x32\xa5\xb2\x86\xf5\xf9\xa6\x81\x37\xac\xe7\xff\xf8\xe6\x66\x92\xa6\xdf\x3e\x4c\xbe\x7c\x9b\xde\x7a\xd9\xb1\x31\x6c\xac\x40\xf8\xb5\x85\x40\xd3\xcd\xca\x7e\x4e\x26\x70\xaf\xc4\xef\xfe\xd0\x09\xc8\xb3\xd2\x8f\x36\x5d\x0c\xa2\x45\xf9\x7f\xb1\xb9\x3c\xf7\x22\x9d\xdc\x2c\x27\xab\x81\x33\xad\x27\xab\xee\x90\xdf\x69\x12\x2b\xb6\x0a\x0c\xfe\xde\xa0\x75\xf6\xdf\xe0\x49\x9a\x4e\xe7\xb3\x6f\xab\xf9\x87\x89\x6f\x17\xaf\xe1\xc8\xcd\xfb\xe5\x74\xf5\xa5\x7b\xeb\x7d\x5c\x84\xec\xc6\x13\x7b\x9c\x42\x27\x4d\xfe\x11\x14\xf5\xd8\xc8\x93\x9c\x79\x1a\xd6\x35\x1d\x8f\x25\x6e\x79\x76\x80\xf4\xf6\x03\xb9\xbc\x9c\x84\x56\x73\x7c\x20\xfe\x0f\xb6\x9c\xf1\x93\x33\x7a\x3b\x9d\xbb\x13\x19\xa0\xf0\x27\x28\x4f\x66\x8f\xf2\xca\x3e\x39\xd5\xd2\x14\x79\x7a\x55\x15\x8b\xdd\x5f\x0b\x74\x50\xd4\x14\x5e\x98\xe7\x51\x81\x1e\x97\x47\x21\x8c\x75\x5d\x6f\x0b\x23\x37\xe3\x59\x79\x74\x87\xd5\xd2\x39\xf4\xa2\x73\x8f\x38\x38\xe9\xb3\xc1\x15\xdb\x9e\xdb\xde\x9b\x0b\x0f\xe7\x2b\xd0\x1d\xf5\x43\xdb\x29\xcb\x56\xa3\x84\x72\x09\xf1\xa1\x70\xb1\x8c\xd3\x21\xd5\x0f\x66\x2e\xa5\xde\xdb\xe1\x25\x4c\x1c\xe2\xde\xd1\x3c\x5e\x11\x92\x4c\x44\xd3\xf7\x4f\x57\x72\x35\x40\x65\x46\x93\x64\xe7\x52\xc6\xb3\x38\x81\xc2\x79\xc5\x1f\x45\xd5\x54\x54\x00\x57\x50\xea\xc6\x5c\x74\x46\xad\xee\x2e\x79\xb8\x3b\xe9\x9f\x27\x60\xa7\xb1\x7c\x31\xf9\x1b\xa3\x20\x72\x86\x7d\x86\xe4\x45\xec\x52\x9d\x0a\x3d\x6a\x57\x5f\x74\xe3\x79\xe1\xcd\xc6\xcb\x94\xd8\x8b\xc3\x75\x0f\x45\xb2\x4d\x5a\xd8\x80\xa3\x8a\xf1\xa3\x29\xf3\xb7\x8e\x47\x97\x45\xcc\x9b\x11\x6e\xe4\x4f\x82\x60\xf5\xb5\x37\xe3\x9b\x9a\x2a\xd8\xe9\xfb\x4e\x48\x9b\x1a\x0d\x89\x49\x96\x14\x22\x94\xce\x62\xc1\xe2\x0d\x86\xbf\xdc\x32\x68\xb5\xdc\x79\x36\x77\xe6\xb8\x51\x91\x6f\xdc\xa8\x6b\xbe\xb7\xd7\x82\x57\xd7\xd7\x57\x57\x57\x6f\xde\xbc\xf9\xe9\xa7\x9f\x7e\xfe\xf9\xe7\x6b\xda\xc8\xeb\x0e\x7e\x5d\x2c\xd7\xff\x1d\x36\x1e\x54\x53\xcf\x28\xfa\x70\x14\x2f\x21\x42\x6a\x9e\x4e\xc4\xd3\x63\x55\x58\xb8\x62\x94\xc0\x11\x29\x0c\x6e\x72\x49\x9d\x37\x2e\xe9\x20\xfa\x42\x19\x8e\xf7\xa7\xe5\x16\x3c\x9b\x2a\xe0\x79\x2e\x5c\xe4\x5b\xf8\xba\x1d\x17\x3d\x10\xdf\xe8\x1d\x8e\xba\xdc\xc4\x86\x64\xbb\xb5\x5c\xbe\xa0\x8f\xbc\xf8\x15\x2a\x9c\x6a\xc9\x08\xdf\xe8\xc6\x75\xea\xfa\x85\x09\xf4\x0b\x69\xaf\xc9\xed\xb7\xc9\xec\x97\x6f\xd4\xc8\x68\x02\xcc\xef\x67\xab\xc1\x2c\x5a\x85\xc9\xa3\x1b\xe5\x60\x7a\x7b\xa4\xd8\x43\x9e\xf3\x13\x9d\xfc\x39\xee\x72\x36\x04\xec\x6f\x21\xff\x35\xb8\xd9\xf8\xd3\x64\x88\xf7\xec\x0e\xf3\x6f\x60\x2d\xc6\xcb\xd5\x74\x15\xc5\x67\x0b\x48\x33\xbe\xe6\xc6\x89\x23\xae\xfc\x6d\xe4\xd5\xdd\x10\xb4\xe6\xae\x7c\x01\x2b\x16\xc7\x3b\x6d\xda\x9b\x8f\xbf\x54\x62\x7f\x52\x22\x64\xf0\xf5\x0b\x65\xd8\x16\x60\xf8\x29\x24\xde\x89\x51\x1b\x3b\xfe\x85\x61\x83\xbe\x92\xba\x3b\x23\xa1\xe0\xfb\xf7\x24\x45\xf7\xe3\xc7\xb1\x87\x7f\x40\xa5\xb7\x43\xcf\x4e\x7c\xb8\x9c\xbd\xfd\x7b\x1b\x39\xc9\x87\xb7\x7f\xf0\xbe\xcb\xf1\x5b\xbe\xb7\xa7\x5e\xaf\xee\xde\x06\x23\x7d\x90\xd2\x3b\x78\x7f\x3f\x85\x05\xb7\x76\xaf\x4d\x0e\x0b\xa3\xab\xda\x59\xbf\xe9\xf7\xf7\xd3\xf5\xe5\x86\x93\x22\xaa\xdb\xf7\x75\x78\xdf\x0e\x64\x2f\x97\x36\x87\xee\x2e\xa0\x9f\xa3\xad\xf9\x71\xfa\x61\x31\x4e\x53\x62\x48\x1b\x6f\x7f\xe3\x7e\xac\xc3\xcf\xaf\x2e\xfc\x05\x9b\x36\x50\x69\x83\xed\x75\x7b\xc2\xfe\x19\x00\x00\xff\xff\x5e\x84\x9c\x6a\x24\x1b\x00\x00")

func vaultedEnv1Bytes() ([]byte, error) {
	return bindataRead(
		_vaultedEnv1,
		"vaulted-env.1",
	)
}

func vaultedEnv1() (*asset, error) {
	bytes, err := vaultedEnv1Bytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vaulted-env.1", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vaultedExec1 = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x58\xdf\x6f\xdb\x38\x12\x7e\xd7\x5f\x31\xc0\x01\xb7\x29\x60\xab\x48\xdb\x27\x03\x79\xf0\xd9\xda\xda\x48\x6b\x0b\x96\xd3\x22\x58\x2d\x02\x5a\x1a\x59\x44\x24\x52\x4b\x52\x76\xfc\xdf\x1f\x86\x94\x64\xd9\x55\xfa\x63\x0f\xb7\x4f\x49\x28\xf2\x9b\xe1\xcc\x37\xdf\x0c\xe3\x6f\x17\x70\x60\x75\x61\x30\x8d\xc7\xf8\x82\x09\xdc\x7a\x7e\xb4\x80\xd5\xf4\x73\xe0\xf9\x61\xe8\x35\x1f\xc1\x7e\x8b\xc7\xf6\x67\x6d\x50\x83\xce\xb1\x28\x20\x91\x65\xc9\x44\xaa\xe1\xc8\x4d\x0e\x0c\xf6\xfc\x80\xc2\x21\x82\x54\xa0\x64\x81\x16\x2f\x7a\x5c\xad\xc3\x68\x19\x59\xcc\x38\xfb\x4f\x9c\xcd\xfa\xc8\x71\xb6\x81\x3f\xe2\x6c\xb9\x0e\xb7\xcb\xf5\x2a\x8a\xb3\xf0\x4f\x88\xb3\xa5\x60\x25\xc6\x59\x48\xbf\xb6\x86\xe2\x2c\xf4\xfc\x9d\xfa\x3b\x18\x74\x20\x1e\xc7\x63\xda\xf8\x3f\x20\xb6\x30\x4c\xeb\x9a\xa0\x2d\x18\x53\xe2\xc7\x46\xa2\x05\xcc\x83\x68\xb6\x59\x5a\x3c\x1b\x8a\xe0\x97\xc3\xe9\x03\x9d\xa1\x9d\x3b\x2e\x50\x83\xc9\x11\x32\x64\xa6\x56\xa8\xbd\x4c\xc9\x12\x2e\x2f\x62\x81\xc9\x1b\x0b\x49\xbb\x1b\x23\x4d\x2a\xb9\x14\x20\xb3\xab\x43\xf1\x58\xc4\xd9\x26\xfe\xb7\x6f\x9d\x6e\xee\xef\xf9\xdb\x36\x77\xaf\xdc\xdf\x8b\x2a\x4c\x78\xc6\x5b\xb7\xea\xa2\x80\xe9\x66\x45\xae\xd3\xdf\xe4\x3e\x50\x3e\xc8\x60\xb7\x60\x24\x38\x28\x1f\x22\x44\x32\x30\x8d\xa2\x87\xcf\xcb\xd5\x47\x98\xc2\x66\xfd\x29\xa0\xc0\xee\xb0\x90\x47\xc8\xa4\x82\x14\x0d\xe3\x85\x06\x29\x20\x97\x47\xf8\xd2\x78\xec\x20\xb4\x85\xd4\xbe\xe7\x2f\x43\x6f\x43\xe8\x76\xbd\xb2\xb7\x2c\xd9\x09\x76\x08\x15\xaa\x4c\xaa\x12\x53\x1b\x11\x59\x1b\xd0\xd6\xeb\x13\x17\x7b\x60\x4d\xb0\x8d\x04\x5d\xb1\xa3\x00\x8a\xa8\xef\x7d\xcd\x51\x00\x17\x07\xf9\x8c\x29\x98\x9c\x6b\x38\xb2\xd3\x08\x12\x85\x29\x0a\xc3\x59\xa1\x81\x29\x04\x2d\x6b\x95\x60\x6a\x0f\x41\x8a\x99\x85\x2a\x64\xc2\xc8\xbe\x86\x1b\xf4\xf7\xbe\x87\xe2\xc0\x95\x14\x25\x0a\x33\x82\x44\x8a\x8c\xef\x6b\x65\x77\x40\xc6\x0b\xd4\x23\xe0\x42\x1b\x26\x12\x84\x4a\x49\x5a\x1a\x01\x9a\xc4\x7f\xe3\x5f\x25\x40\xc8\x78\xac\x51\x6b\x2e\x29\x59\xde\x9c\x6b\xb6\x2b\x9a\xd0\xef\x51\x60\x03\x4a\xb1\xc6\xb2\x92\x8a\xa9\xd3\xa5\xc7\x22\x75\x19\x38\xc7\xc8\x87\x6d\x8e\x5e\x85\xaa\x64\x02\x85\xb9\xd8\xae\x8d\x54\x98\x02\x17\xd6\x80\x0b\x13\x5d\xba\xd6\x76\x55\x1b\x64\xe9\x70\xe0\x13\x26\x2e\x03\xcf\x32\x83\xca\x05\xd8\x05\xdd\xb1\xbf\xd6\xf4\x17\xa1\x0f\xb0\xcc\x6b\x69\xdb\xf1\xd8\x32\xab\x47\xa4\x93\xac\xe1\xc8\x75\xde\x63\xd4\x55\xc4\x14\x66\x0a\x75\x4e\x68\x91\x61\xca\x00\x03\x81\x47\x68\x82\xe8\x90\x69\xe1\xf5\x78\x31\x68\x30\xac\x44\x54\xdc\xc5\xf8\xda\x8e\xd6\x79\x3c\x6e\x52\x80\xf1\xf8\x19\x4f\x64\xf2\x63\xb3\x60\x81\x0a\xc9\x52\x60\x02\x36\xd1\x14\x9e\xf1\x04\x5c\x18\x69\xaf\x62\xa3\x42\x75\xeb\x9c\xfa\x4d\x43\x14\x2d\x80\xed\x51\x98\x41\x33\x95\x92\x2f\xa7\x78\x6c\x37\x90\x95\xe0\xa5\x92\xba\x61\x01\xbe\x18\x54\x82\x15\x67\x08\x18\xb6\x32\x88\xac\xf9\x9e\xd2\x13\x8f\x6b\x45\x02\xe2\xcd\x1a\xae\xb6\xe0\x22\xad\x24\x77\x90\xb5\x46\x5b\x9c\x64\x87\x6e\xd3\x1c\xf5\x61\x56\x2b\x85\xc2\x14\x27\x90\xa2\x38\x75\x74\xc7\xd4\x33\x12\x8e\x52\x3d\xbb\xa0\x2f\x98\xce\xf9\x4c\xaa\xca\xd5\x73\x87\xad\x7f\xe0\x98\x46\xa5\x07\x5c\xb3\xeb\xb6\x86\xf9\x5e\xb4\x4e\x69\xeb\xe1\x91\x2a\xb9\xe7\x22\x70\x0d\x28\xa8\x70\x52\x27\x76\xd3\xaf\x11\xdc\x07\x8f\x56\x9d\xff\x20\xce\xa1\x30\x7f\x4e\xe0\x5f\x70\xf3\x75\x11\xac\xe0\xf3\x7a\xbe\xfc\xfd\x91\xc4\x69\xbb\x08\xa2\x00\xe6\xeb\x59\x34\x82\xe9\xa7\x68\x0d\x0f\xe1\x7c\xba\x0d\x26\xbd\x7e\x2a\x0e\xfe\xad\x5f\x52\x9e\x53\xaf\x5b\xb5\x5c\xb7\xeb\x6f\xac\x91\x56\xc1\x6a\xca\xda\xcf\x97\x9e\x91\x6d\x91\xe3\x99\xaf\x5e\xff\x94\x2b\x27\xba\x4f\xb4\x8d\x6c\x65\x83\x42\x5d\x17\x86\x96\xaf\xa5\xeb\x9c\x19\x42\x2e\x98\x36\x14\x2e\x8f\xec\xa5\x75\x4f\x49\x3a\xfb\x6d\xd1\xdc\xf4\x4e\x1e\x38\xbb\x6a\x24\x98\x72\x62\x25\x69\x57\x18\x7a\xdb\xc1\xba\x2a\x6b\x6d\x48\x1f\x1a\x21\x01\xa9\x52\x54\xe7\x22\xa6\x9a\xa3\xbe\xd7\x8c\x0e\xcb\x95\x34\x38\x71\x3d\x21\x61\x44\xbc\x36\x80\x8d\xe0\xba\xc4\xd7\x3b\x6d\xb8\xa9\xed\x5d\x87\x83\x4a\xc4\xf3\x06\x2b\x7d\xe4\xda\x64\x6f\x2f\x49\x4b\xa5\xe4\x81\xa7\xb6\x5f\xb5\x16\xa9\xa3\x08\x69\xa0\x64\x26\xc9\x3d\x93\x4b\x8d\x74\x01\x36\x50\x5e\xd7\x89\xa6\xb4\x90\xca\xa7\x4c\xa5\xd0\x6b\x09\x70\x60\x8a\x3b\x1d\x27\xba\xf6\x9c\x98\x78\xfe\x26\x22\x7d\x85\xf8\x66\x57\xc3\xbb\xa6\x2a\xa6\x5f\xa3\xa7\xe9\x6c\x16\x44\xd1\xd3\x7d\xf0\xf8\xb4\x9c\x53\x3d\xd0\x3c\x33\x15\xc0\xed\xd9\x8c\xa3\xb2\x60\x74\x2b\x96\x24\xa8\x35\x55\x80\x0f\x0f\x82\xff\x55\xdb\x0b\x21\x4b\x72\xd0\x68\x28\xc5\xe7\x68\x51\xfe\x87\xe2\xe3\x0f\x7b\x11\x05\xb3\x4d\xb0\xed\x39\xd3\x7a\x42\xcc\xd3\x98\x28\x34\x2e\xc7\x6d\x61\x2a\xfc\xab\x46\x6d\xf4\xff\xc1\x93\x28\x5a\xae\x57\x4f\xdb\xf5\x7d\xb0\xa2\x09\xe5\x2d\x5c\xb8\xf9\xb0\x59\x6e\x1f\xbb\xaf\xd6\xc7\xd0\x65\x37\x75\x02\xd1\x74\xa2\x41\x93\xdf\x83\x22\x35\x69\x78\x62\x15\x4e\xd7\x55\x25\x95\x81\x02\xf7\x2c\x39\x41\x34\xbf\x27\x97\x37\x81\x53\x9a\xcb\x31\xe7\x9f\x53\x9c\xe9\xd5\xe0\xd5\x36\x68\xdd\x4c\x6f\x29\x20\x37\x39\x2a\xc7\x65\x0b\xf3\x9b\xbe\x1a\x55\x6e\x0e\x9c\x5d\x8f\xcc\x4d\xad\xd3\xb8\x77\x86\x22\x4d\x78\xa5\xa5\x83\xac\xcc\x37\xd5\x91\x71\xa5\x4d\x27\x6d\xae\xeb\x26\x2c\xc9\xe9\xd7\x4e\x74\x5a\x36\x3b\x29\xba\xb1\x88\xbd\xf1\xcd\xeb\xcd\xfd\x47\xa6\xcf\xde\xbc\xb1\x70\x75\xdb\x1f\xcf\x72\xd8\x02\x1b\xd9\x8e\x29\xae\x5a\x5c\x7c\xec\x33\x26\x61\x45\x41\x2a\xca\x35\xb0\xa2\x90\x47\x07\xd1\x3b\xb8\x43\xe7\x68\x6a\xdd\x63\x50\x48\xb1\x47\x75\x96\x4f\x93\x33\xd1\x43\xf5\x94\xa4\x89\x9f\x15\x05\x1c\x79\x51\x38\x50\xb8\x29\xd9\x0b\x2f\xeb\x92\xf8\x7f\x0b\xb9\xac\xd5\x9b\xce\xa8\x96\x50\x22\x13\x64\x98\x99\x41\xff\x2c\xff\xba\x31\xcb\xd6\x92\xe1\x56\x42\x69\xac\xe9\xcb\x0c\xd7\x9d\x48\xd9\x69\xb5\x77\x17\x97\x8f\x47\x59\x5b\x5e\x58\xb3\xcd\x84\xdc\x48\xb1\x9b\xe1\x29\x92\x6d\xd2\xdc\x05\x0c\x15\x8c\x21\xde\x27\x0a\x6d\x5f\xea\x3f\x02\xac\x19\x6e\x46\x50\xf0\x67\x1a\x95\x27\xd6\x8c\xd5\x34\x91\x5d\xbf\x33\x5b\x96\x40\x54\x57\xa8\xec\x40\x49\x8b\xed\xdb\xc5\xf3\x33\xee\xea\x28\x0c\xbd\x63\xce\x93\x1c\x8e\xb2\x2e\x52\xca\xa8\x2c\x0e\xd8\x8e\x39\xd6\x38\x53\xa2\x61\x1f\x53\x62\xc2\x8e\x7a\xc2\x59\x39\x99\xdc\xde\xde\xbe\x7b\xf7\xee\xfd\xfb\xf7\x1f\x3e\x7c\x98\xd0\xb5\xde\x76\xb6\xda\xb7\x4f\x18\xba\xc9\xbf\xc7\x2f\xda\xe8\xfa\x43\x9b\xa8\xeb\xf6\x38\xdc\x63\xb9\x86\x5b\x8f\xd2\x39\x02\x85\x7b\xa6\xd2\x82\x64\xb8\x39\xd2\x41\x9c\xcb\xa6\xdf\xeb\xaf\x8b\xcf\x79\xb6\x14\xc0\xd2\x94\x9b\x86\x7d\x6e\x77\xdb\x3b\xce\x40\x6c\x27\x0f\x38\xea\x32\xd5\xa8\x93\xee\xce\xb2\xc2\x1b\x6e\x3f\x76\x30\xe3\x82\xb8\xe4\x9c\x63\x3b\x7a\x2c\xb5\xe3\xf6\x2b\xed\xe8\xcb\xf4\xe1\xd3\x36\x98\x3f\x05\xab\x2f\x4f\xa4\x6a\xd4\x0e\xd6\x0f\xab\x6d\xaf\x31\x6d\x5d\x1b\x92\xb5\x30\xb0\x9c\x5f\x8c\xf0\x2e\xe9\xe9\x80\xac\x7f\x8b\xbb\x59\xf5\x01\xcf\x6f\xcd\xbf\x07\xb7\x9a\x7e\x0e\xfa\x78\xdf\x3c\x53\x7f\x01\x2b\x9c\x6e\xb6\x4b\x7a\x32\xf7\x01\xa9\xe1\x57\x4c\x19\x7e\xc1\x95\x5f\x46\xde\x2e\xfa\xa0\x15\x33\xf9\x2b\x58\x4d\x71\xfc\x2e\x15\xe0\x0b\x2b\x2b\x9b\xb1\x9f\x28\xb8\x1f\xd4\x08\x59\x7c\xfb\x33\x45\xd9\x96\x23\x09\x74\x43\xe6\x4c\x92\xc4\x51\x65\x9c\x59\xb6\x43\x27\xbf\xe6\xd2\xbb\xef\xd0\xe8\xae\xef\xd4\xc0\xc6\xcd\xea\xee\x97\xee\xf0\x2d\x04\x71\xe1\xee\x3b\xdf\xbb\xfc\xde\xb1\xa3\x1e\xfa\xbc\x5d\xdc\x39\x23\xe7\x90\x44\x0b\xf8\xf8\xb0\x84\x90\x69\x7d\x94\x2a\x85\x50\xc9\xb2\x32\xda\x5e\xfa\xe3\xc3\x32\x1e\xef\x18\x8d\x46\x55\xfb\xbd\x72\xdf\xdb\xd6\x6c\xe7\xa6\xdd\x89\x02\x65\x2e\x1f\xc9\xad\xf9\x69\x74\x1f\x4e\xa3\x88\xd8\xd1\x46\xd7\xfe\x43\xe5\x72\x20\xbf\xb9\x7d\x43\x8d\x97\x1a\x54\x29\x15\xb6\xff\x4d\xf1\xbd\xff\x06\x00\x00\xff\xff\x55\xe4\xd0\x71\x09\x14\x00\x00")

func vaultedExec1Bytes() ([]byte, error) {
	return bindataRead(
		_vaultedExec1,
		"vaulted-exec.1",
	)
}

func vaultedExec1() (*asset, error) {
	bytes, err := vaultedExec1Bytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vaulted-exec.1", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vaultedLoad1 = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xce\x5f\x6a\x03\x21\x18\x04\xf0\x77\x4f\x31\x17\x88\xd0\x23\xb4\x69\x20\x16\xea\xca\x9a\x97\x82\x2f\xb2\x7e\x12\x61\xab\x41\xbf\xdd\x5e\xbf\x54\xfb\x8f\xbc\x0d\x0c\xc3\x6f\xe4\xe5\x8c\xdd\x6f\x2b\x53\x70\x87\xb5\xf8\x80\x07\x21\xed\x19\xfa\xf1\xf5\x24\xa4\x31\xe2\xbb\x44\xef\xdc\x01\x5b\xa3\x86\x17\x3b\x69\xdc\x6a\xd9\x53\xa0\x00\x2e\x68\x1c\x52\xfe\x0a\x4b\x25\xcf\x84\x52\x51\xe9\xb6\xfa\x85\xc0\x57\xc2\x52\x32\x53\x66\x94\x08\x3f\xb8\x8e\xd8\x37\x3d\x19\xab\x6c\x87\x5c\x7c\x72\xf1\xf8\x9f\x73\x71\x86\x8b\x2a\xfb\x77\x72\xd1\xf4\xc5\xf3\xc9\x1e\x67\x65\x2e\x6a\xd2\x7d\x34\x0f\xa4\xdd\x2b\x7f\x33\x7c\x24\xbe\x8e\xc3\x3f\xfd\xef\xf1\x3d\xf9\xf1\x5c\x8a\xcf\x00\x00\x00\xff\xff\x29\xac\xab\x44\x08\x01\x00\x00")

func vaultedLoad1Bytes() ([]byte, error) {
	return bindataRead(
		_vaultedLoad1,
		"vaulted-load.1",
	)
}

func vaultedLoad1() (*asset, error) {
	bytes, err := vaultedLoad1Bytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vaulted-load.1", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vaultedLs1 = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8d\x41\x0a\xc2\x30\x10\x45\xf7\x39\xc5\x3f\x40\x1b\xf0\x08\x5a\x0b\x2d\x68\x1b\x3a\xdd\x08\xd9\x14\x9a\x40\x60\x68\xc4\x99\x7a\x7e\x21\x0a\x82\xb8\xfd\xef\x3d\xbe\x9d\x3b\x3c\x97\x9d\x35\xac\xbe\x66\xc1\xc1\x58\xea\x30\x1c\xaf\xad\xb1\xce\x99\x0f\x02\x0b\x7c\x0d\x4e\xa2\x82\x85\xf9\x9d\x48\x71\xe9\x36\x8c\x8e\x7a\x2a\xbe\x8f\x27\x1f\x9b\x6f\xe5\xe3\xf4\x6f\x4f\xa2\x85\x50\x87\x73\x4b\xcd\xd4\xbb\xb9\x1f\x87\x62\x5e\x7e\x3e\x2a\xe4\x2d\xe0\x1e\x1e\xe0\xb4\x85\x0a\x9a\x21\xba\xe6\x5d\xad\x79\x05\x00\x00\xff\xff\x8d\xa8\x1b\x0a\xbc\x00\x00\x00")

func vaultedLs1Bytes() ([]byte, error) {
	return bindataRead(
		_vaultedLs1,
		"vaulted-ls.1",
	)
}

func vaultedLs1() (*asset, error) {
	bytes, err := vaultedLs1Bytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vaulted-ls.1", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vaultedPasswd1 = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x90\x5d\x6a\xeb\x30\x10\x85\xdf\xbd\x8a\x59\x40\x62\xb8\x4b\xc8\x4d\x0c\x31\xb4\x8e\xb0\xdc\x86\x82\xa0\x28\xd6\xa8\x16\xd8\x92\xd1\x8f\x4d\x77\x5f\x24\xbb\x69\x43\x69\x5f\xda\x57\xcd\x99\xef\x7c\x9a\xbc\x39\xc2\xc4\x43\xef\x51\xb0\xed\xc8\x9d\x9b\x05\xfc\xcb\x72\x7a\x84\x6a\x77\x5f\x64\x39\x21\xd9\x3a\x86\x75\xca\xb6\xd0\x76\x5c\xbf\xa0\x03\xdf\xe1\xf2\x6a\xac\x00\x23\x81\x2f\xa8\xb4\x4e\x9f\xaa\x13\xa1\x25\x4d\x08\x26\xff\x33\xb9\xbf\x05\x31\x59\x03\x93\xa5\xe6\x03\x32\x49\xbe\x8b\x19\xfb\x25\x48\x8f\x70\x28\xe8\xbe\x2e\x49\x53\x9e\xaa\xb4\xb8\x37\xda\xa3\xf6\xa0\x74\x72\xfa\x48\x2f\x42\xa0\x1c\x04\xed\x4d\x68\x3b\x14\x1b\x30\xba\x7f\xbd\x75\x57\x6e\xfd\x93\xc8\x13\xaf\x94\x2b\x27\xfa\x3c\xee\x1e\xee\x9a\xe2\xf0\x4c\x76\x94\x9e\x4f\xf5\x21\xfa\xa0\x9e\x94\x35\x7a\x88\xa5\x13\xb7\x8a\x5f\x7a\x8c\x14\x87\x7e\x03\xca\xc3\xac\xfa\x1e\x2e\x08\xc1\xa1\x00\x9e\x2e\x95\xb5\xc1\xda\x98\xbf\xb6\x4a\x63\x3f\xa9\x6e\xc0\xf8\x0e\xed\xac\x1c\xa6\xf2\xe0\xd0\x5e\x39\xa3\x35\xc3\x18\x8f\x12\x77\x22\xec\x1d\xf2\x83\x6f\x55\x9c\x7f\xe3\x9c\x45\xa2\xc6\xf9\xaf\x7d\xdf\x02\x00\x00\xff\xff\xf1\x83\xc8\xb9\x72\x02\x00\x00")

func vaultedPasswd1Bytes() ([]byte, error) {
	return bindataRead(
		_vaultedPasswd1,
		"vaulted-passwd.1",
	)
}

func vaultedPasswd1() (*asset, error) {
	bytes, err := vaultedPasswd1Bytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vaulted-passwd.1", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vaultedRm1 = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\xcd\x6a\xc4\x20\x14\x85\xf7\x79\x8a\xb3\x9a\x55\x47\xe8\x23\xb4\xd3\x81\x64\xd1\x8c\xc4\x6c\x0a\x6e\x4c\xbc\x36\x42\xa2\x53\x35\x43\xe7\xed\x4b\x1c\xa1\x3f\x94\xd9\x09\x9e\xef\x7c\xf7\xb0\xbe\xc6\x45\xad\x73\x22\x2d\xf7\x61\xc1\x63\xc5\x44\x8d\xf6\xe9\xf5\x58\x31\xce\xab\xf2\x85\xb0\x40\xee\x11\x68\xf1\x17\x8a\xa0\x4f\x1b\x93\x75\xef\x37\x32\x66\x44\xbc\xb5\x27\x2e\x1a\x91\x31\x69\x9e\xa5\x39\x7c\xc3\xd2\x74\x90\xa6\x71\x6a\x21\x69\xf8\xf6\x94\x3b\xc6\x98\x34\xfc\x9f\xb8\xa6\x99\x12\xdd\x43\x86\xf0\xd7\x90\x0f\xbb\x87\x88\x1a\x2f\x47\x71\xe8\x1a\xde\x37\xa7\x36\x5b\xbb\xb2\x26\x4d\x54\x86\x20\x9e\x69\xb4\xc6\x92\xc6\x70\xfd\x51\x25\x77\x0c\xfd\x44\xdb\xee\x84\xd1\x6b\x82\x8d\xa0\x8f\x55\xcd\x48\x3e\xf3\x6e\x5d\x06\x0a\xf0\xa6\x2a\x4d\x69\x52\x5b\x74\x9d\x35\x9c\x4f\x18\xa8\xdc\xa8\x59\x76\x37\x06\xea\x26\xc5\xa8\xdc\xef\xc4\x43\x6e\xa4\x10\x7c\xd8\x3c\xda\xc6\xf3\xac\xae\xa4\xe1\x1d\x62\xd2\x7e\x4d\xac\xfa\x0a\x00\x00\xff\xff\xe6\x20\x08\x4c\xb7\x01\x00\x00")

func vaultedRm1Bytes() ([]byte, error) {
	return bindataRead(
		_vaultedRm1,
		"vaulted-rm.1",
	)
}

func vaultedRm1() (*asset, error) {
	bytes, err := vaultedRm1Bytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vaulted-rm.1", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vaultedShell1 = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x58\x4d\x6f\xe3\x38\x12\xbd\xeb\x57\x14\xb0\xc0\x4e\x02\xd8\x6a\xa4\xbb\x4f\x5e\xf4\xc1\x1b\xab\x63\x23\x69\xdb\xb0\x9c\x0e\x82\xd1\x20\xa0\xa5\x92\x45\x44\x22\x35\x24\x65\xc7\xff\x7e\x51\xa4\xbe\x9c\x28\x99\xe9\x05\x76\x6f\x09\x45\xbe\x2a\xd6\xc7\xab\x47\xfb\xdb\x39\x1c\x58\x95\x1b\x4c\xa2\xb1\xce\x30\xcf\xe1\xca\xf3\xc3\x39\x2c\xa7\x3f\x02\xcf\x5f\xaf\xbd\xfa\x2b\xb8\x8f\xd1\x18\xb4\x61\xca\x68\x60\x02\xb8\x30\xa8\x58\x6c\xf8\x01\xeb\xcf\x47\x6e\x32\x30\x19\x82\xc6\x58\xa1\xd1\x90\x4a\x65\xff\xb7\x28\x90\x4b\x96\x60\x42\xe7\xa4\xdb\x45\x87\xac\xb9\xf0\x71\xb9\x5a\x87\x8b\xd0\x9a\x8c\xd2\x7f\x47\xe9\xf5\x99\xe1\x28\xdd\x40\x94\x2e\x04\x2b\x30\x4a\xd7\xf0\x7b\x94\x2e\x56\xeb\xed\x62\xb5\x0c\xa3\x74\xfd\x87\xe7\xef\xd4\xd0\x29\x88\xc6\xd1\x98\x69\x5d\xd1\x29\x0b\xc0\x94\x18\x3c\x1f\xce\x61\x16\x84\xd7\x9b\x85\x5d\xb4\x5e\x84\x1f\xdc\xf3\xa2\xd2\xa8\xed\x15\x9c\xd5\x70\x1e\xdc\xdd\x91\x09\x14\x07\xae\xa4\x28\x50\x18\x38\x30\xc5\xd9\x2e\xc7\x11\xf0\x14\x34\x9a\x7f\x79\xd2\x64\xa8\x8e\x5c\x23\x24\x98\x92\xa3\x1a\x8c\xac\x21\x3e\xed\xb8\xf8\xa4\xb3\x28\xdd\x5c\xfa\xd6\x9f\xda\x3f\xcf\xdf\x36\x11\x79\xe7\x36\x5e\x58\x62\xcc\x53\x5e\x7b\x94\x56\x79\x0e\xd3\xcd\x12\xea\xd0\x2b\x99\x23\x50\xe0\x40\xa6\xdd\x82\x91\xe0\xa0\x7c\x08\x11\xc9\xc0\x34\x0c\xef\x7f\x2c\x96\x37\x30\x85\xcd\xea\x2e\xa0\x30\xed\x30\x97\x47\x9b\xc3\x04\x0d\xe3\xb9\x06\x29\x20\x93\x47\xf8\x59\x47\xd9\x41\x68\x0b\xa9\x7d\xcf\x5f\xac\xbd\x0d\xa1\xdb\xf5\xd2\x70\x29\xa0\x60\x27\xd8\x21\x94\xa8\x52\xa9\x0a\x4c\x6c\x8d\xc8\xca\x80\xb6\x5e\x9f\xb8\xd8\x03\xab\xeb\xc3\x48\xd0\x25\x3b\x0a\x48\x95\x2c\x7c\xef\x21\x43\x0a\xfe\x41\x3e\x63\x02\x26\xe3\x1a\x8e\xec\x34\x82\x58\x61\x82\xc2\x70\x96\x6b\x60\x0a\x41\xcb\x4a\xc5\x98\xd8\x43\x4d\x60\x21\x97\x31\x23\xfb\x1a\x2e\xd0\xdf\xfb\x5e\x2f\x31\x23\x88\xa5\x48\xf9\xbe\x52\x76\x07\xa4\x3c\x47\x3d\x02\x2e\xb4\x61\x22\x46\x28\x95\xa4\xa5\x11\xa0\x89\x7d\x4a\xc6\x59\x02\x84\x8c\xc6\x1a\xb5\xe6\x52\x44\xe9\xc6\x9b\x71\x4d\x39\x76\xa1\xdf\xa3\xc0\x1a\x94\x62\x8d\x45\x29\x15\x53\xa7\x73\x8f\x45\xe2\x32\xd0\xc5\xc8\x87\x6d\x86\x5e\x89\xaa\x60\x82\x0a\xa7\xbf\x5d\x1b\xa9\x6c\xcb\xf4\xda\x88\x2e\x5d\x69\xbb\xaa\x0d\xb2\x64\x38\xf0\x31\x13\xe7\x81\x67\xa9\x41\xe5\x02\xec\x82\xee\x6a\xb9\xd2\xf4\x5f\x57\xcb\x67\x55\xe6\xc5\xb2\x28\xc8\xe5\xb6\xb3\x6d\x65\xf5\x0a\xe9\x24\x2b\x38\x72\x9d\xf5\x2a\xea\x55\xc4\x14\xa6\x0a\x6d\x65\xbb\x9e\x02\x06\x02\x8f\x50\x07\xd1\x21\xd3\xc2\xfb\xf1\x62\x50\x63\x60\x02\xf8\x52\x72\x17\xe3\xb7\x76\xf6\x2e\x29\xd4\x1a\xcd\x3f\x6b\x6f\x75\x40\xa5\x78\x82\xce\x65\xbb\x4c\xbe\xee\xea\x18\x52\x75\x4f\x1f\x42\xca\x01\xd7\xd4\xa6\xba\xbf\xd1\x6e\x39\x66\x28\xbc\x26\xb7\x14\xab\x21\x47\x5d\x12\x6c\xc9\xb2\xe6\x34\xd7\x0e\xe0\xe2\xc0\x19\x0c\x38\x3a\xea\x25\x95\x1b\x8d\x79\x3a\x6a\xba\x16\x45\x9c\x4b\xca\x4c\xbf\x72\x7f\xd3\x35\xca\xf4\x21\x7c\xda\x04\x37\x8b\xd5\x92\xae\x2b\x55\x6f\x79\x16\x7c\x9f\xde\xdf\x6d\x7b\x9f\x1b\x1e\xd2\x97\x23\x97\x7d\x4c\xfa\xa0\x1a\x8e\x3c\xcf\x81\x8b\x38\xaf\xea\x28\x0d\x19\xa1\x3c\x7c\x60\xc5\x1b\x62\x3e\x4b\x6f\x5c\x24\x3c\x66\xc6\x21\xd7\x2c\xea\x22\xf0\x3a\x81\x5a\x67\xd1\xb8\x8e\x33\x46\xe3\x67\x3c\x11\xf0\x4d\xbd\x60\x3d\xa0\x09\x42\x94\xbc\x09\xa7\xf0\x8c\xa7\xde\x28\x71\x17\x6b\xaa\xea\x37\x0d\x61\x38\x07\xb6\x47\x61\x06\xcd\x94\x4a\xbe\x9c\xa2\xb1\xdd\x40\x56\x82\x97\x52\x36\x9c\x8e\x2f\x06\x95\x60\x79\x07\x01\xc3\x56\x06\x91\x35\xdf\x53\x7f\x45\xe3\x4a\xd1\xd8\xf2\xae\x6b\xb2\x69\xc0\x45\x52\x4a\xee\x20\x2b\x8d\xb6\xfe\xc8\x0e\xdd\xa6\x3e\xea\xc3\x75\xa5\x14\x0a\x93\x9f\x40\x8a\xfc\xd4\xf2\x15\x26\x9e\x91\x70\x94\xea\xd9\x75\xcd\x9c\xe9\x8c\x5f\x4b\x55\x3a\x42\x6e\xb1\xf5\x5f\x38\xa6\x51\xe9\x01\xd7\xec\xba\x25\x61\xbe\x17\x8d\x53\x6e\x86\x53\x0b\xf4\x5d\xa4\xd2\x46\x41\x39\x4e\xdc\xb4\x9a\x3e\x84\x70\x1b\x3c\xda\xc9\xf9\x3b\x91\x06\x0a\xf3\xc7\x04\xfe\x01\x17\x0f\xf3\x60\x09\x3f\x56\xb3\xc5\xf7\x47\x9a\x2e\xdb\x79\x10\x06\x30\x5b\x5d\x87\x23\x98\xde\x85\x2b\xb8\x5f\xcf\xa6\xdb\x60\xd2\xc9\x10\x14\x07\xff\xca\x2f\x28\xcf\x89\xd7\xad\xbe\x60\x6c\x97\x2f\xad\x8d\x66\x02\xd9\x41\xfc\xf7\xa9\xd3\xc8\x86\xa4\xb1\x6b\x63\xaf\x7f\xca\xd1\x21\x5d\x27\xdc\x5a\x56\xa0\x6a\xd5\x55\x6e\x3b\xff\xf5\xe8\xe9\x12\x43\xc8\x39\xd3\x86\xa2\xe5\x91\xbd\xa4\xea\x4d\x82\xd6\x7e\x43\x7a\x17\xbd\x93\x1d\x39\x34\xe2\x05\x13\x6e\x6a\x21\xb0\x5e\x7b\xdb\x41\x5e\x2c\x2a\x6d\x5a\x12\xe3\x02\xa4\x4a\x50\x75\x24\x4c\x24\x24\x73\xf4\x6b\x41\xb5\x58\x4a\x83\x13\x37\xd3\x63\x46\x75\xd7\x04\xb0\xaf\x44\x74\xb5\xd3\x86\x9b\xca\xde\x75\x38\xa8\x54\x77\xde\x20\x01\x3a\x32\xeb\xef\xa5\xd1\x50\x2a\x79\xb0\xe4\x2b\x5b\x8b\xa4\x08\x84\x34\x50\x30\x13\x67\x9e\xc9\xa4\x46\xba\x00\x1b\xe8\xae\xd7\x89\xa6\xb4\xd0\x94\x4e\x98\x4a\x06\xb5\x96\xab\xd6\x9e\x13\x13\xcf\xdf\x84\x44\xcd\x10\x5d\xec\x2a\xf8\xec\x75\x1c\x36\xbd\xbe\x0e\xc2\xf0\xe9\x36\x78\x7c\x5a\xcc\xa8\x1d\x48\x45\x4e\x05\x70\x7b\x36\xe5\xa8\x5a\xf9\xca\xe2\x18\xb5\xa6\x06\xf0\xe1\x5e\xf0\x3f\x2b\x7b\x21\x64\x71\x46\x13\x83\x52\xdc\x45\x8b\xf2\xff\xee\x80\x78\xeb\x45\x18\x5c\x6f\x82\x6d\xcf\x99\xc6\x93\x6d\x2b\xa3\x5d\x8e\x9b\xbe\x54\xf8\x67\x85\xda\xe8\xff\x81\x27\x61\xb8\x58\x2d\x9f\xb6\xab\xdb\xc0\x52\xfe\x27\x38\x73\xf3\x7e\xb3\xd8\x3e\xb6\x5f\xad\x8f\x6b\x97\x5d\x37\x22\x1b\x25\x31\x68\xf2\x23\x28\x22\x93\xba\x4e\x2c\xc1\xe9\xaa\x2c\xa5\x32\x90\xe3\x9e\xc5\x27\x08\x67\xb7\xe4\xf2\x26\x70\x44\x73\x2e\x53\xff\x6f\x84\x33\x7d\xa5\x9b\x1b\x7d\xa5\x6b\xf1\x9d\x00\x72\x92\xf7\xae\x94\x2d\xca\x6f\xfa\x95\xd2\x24\x1d\xe0\x0d\xb7\x3a\x0d\xf1\x0e\x8a\x28\xe1\x1d\x45\x06\xb2\x34\x6f\x9a\x23\xe5\x4a\x9b\x96\xd9\x9c\x68\x8a\x59\x9c\xd1\x9f\x2d\xe7\x9c\xbf\xc5\x2e\x2c\x62\x4f\x7d\x7b\xbd\xf7\xd5\x91\xe9\xce\x9b\x4b\x0b\xd7\xbe\x78\x3a\x36\x6c\x80\x8d\x6c\x54\xa6\x6b\x16\x17\x1f\x0a\x97\x17\xb3\x3c\xaf\xa5\x15\xcb\x73\x79\xd4\xf5\xeb\xb0\x3d\xb8\x43\xe7\xa8\x13\x62\x0c\x72\x29\xf6\xa8\x3a\xf6\x34\x19\x13\x3d\x54\x4f\xc9\x3c\x07\x42\x75\xaa\xc5\x82\xc2\x45\xc1\x5e\x78\x51\x15\x54\xfe\x57\x90\xc9\x4a\x5d\xb6\x46\xb5\x84\x02\x99\x20\xc3\xcc\x0c\xfa\x67\xcb\xaf\x55\xc9\xb6\x95\x0c\xb7\x0c\x4a\xaa\xb4\xcf\x32\x24\x10\x6b\x8e\xb2\x8f\x8d\xde\x5d\x5c\x3e\x1e\x65\x65\xeb\xc2\x9a\xad\x1f\x38\x35\x13\xbb\x27\x18\x45\xb2\x49\x9a\xbb\x80\xa1\x7e\x31\x54\xf6\xb1\xc2\x46\x26\xb5\x6f\x38\x6b\x86\x9b\x11\xe4\xfc\x99\x5e\x3a\x13\x6b\xc6\x52\x9a\x48\xdf\xbc\xcd\x9b\x32\x81\xb0\x2a\x51\xd1\x83\xc0\xf3\x53\xee\x5a\x67\xbd\xf6\x8e\x19\x8f\x33\x38\xca\x2a\x4f\x28\x8b\x32\x3f\x60\x23\x6c\xac\x41\xa6\x44\x5d\x71\x4c\x89\x09\x3b\xea\x09\x67\xc5\x64\x72\x75\x75\xf5\xf9\xf3\xe7\x2f\x5f\xbe\x7c\xfd\xfa\x75\x42\x57\xf9\xd4\xc2\x47\xe9\x26\xfa\xa7\xbb\xba\x53\xbe\x5d\x4d\xd1\x46\x37\x12\x9a\xe4\xbc\x9e\x88\xc3\x63\x95\x6b\xb8\xf2\x28\x85\x23\x52\x89\x4c\x25\x39\x31\x6f\x7d\xa4\x85\xe8\x5a\xa5\x3f\xde\x5f\x37\x9c\xf3\x6c\x21\x80\x25\x09\x37\x75\xc5\xb9\xdd\xcd\xb8\xe8\x80\xd8\x4e\x1e\x70\xd4\x66\xa7\x26\x24\xdd\x9e\x65\xf9\x3b\x1a\xd7\x4a\x31\x2e\xa8\x7e\x9c\x73\x6c\x47\xef\xdb\xe6\x85\xf4\xce\x04\xfa\x49\xfa\x39\x98\x3d\x05\xcb\x9f\x4f\x44\x64\x34\x01\x56\xf7\xcb\x6d\x6f\x16\x6d\xdd\xe4\x91\x95\x30\xb0\x98\x9d\xbd\xba\x5c\x9e\x93\x01\x26\x7f\x8b\xbb\x59\xf6\x01\xbb\x9f\x07\xfe\x3b\xb8\xe5\xf4\x47\xd0\xc7\x7b\xf3\xcb\xc2\x2f\x60\xad\xa7\x9b\xed\x62\x5b\x3f\x20\x1a\x40\x9a\xf1\x25\x53\x86\x9f\xd5\xca\x2f\x23\x6f\xe7\x7d\xd0\x92\x99\xec\x1d\xac\xba\x39\xbe\x4b\x05\xf8\xc2\x8a\xd2\x66\xec\xef\x34\xd9\x5f\x34\x09\x99\xfc\xf4\x4e\x23\x36\x2d\x68\x1f\x7e\xae\x80\x53\x49\x54\x46\xdd\xd0\x55\xd6\x0e\x1d\xcd\x9a\x73\x8f\x3e\x28\x9d\x6f\x7d\x3f\x06\x36\x6e\x96\xdf\x7e\xcd\xed\xc1\xfc\x7f\xfb\xe0\x7b\x9b\xd3\x6f\xec\xa8\x87\x3e\x6f\xe7\xdf\x9c\x91\x2e\x24\xe1\x1c\x6e\xee\x17\xb0\x66\x5a\x1f\xa5\x4a\x60\xad\x64\x51\x1a\x6d\x2f\x7d\x73\xbf\x88\xc6\x3b\x46\x0a\xa8\x6c\xbe\x97\xee\x7b\x33\x82\xad\x3c\xda\x9d\x28\x50\xe6\xfc\xb7\x8c\xc6\xfc\x34\xbc\x5d\x4f\xc3\x90\x2a\xa2\x89\xae\xfd\xdd\xeb\x5c\x77\x5f\x5c\x5d\xd2\x80\xa5\x41\x54\x48\x85\xcd\x8f\x5e\xbe\xf7\x9f\x00\x00\x00\xff\xff\xf6\x74\xdf\xb5\x26\x15\x00\x00")

func vaultedShell1Bytes() ([]byte, error) {
	return bindataRead(
		_vaultedShell1,
		"vaulted-shell.1",
	)
}

func vaultedShell1() (*asset, error) {
	bytes, err := vaultedShell1Bytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vaulted-shell.1", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vaultedUpgrade1 = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\x4d\x6e\xc3\x20\x10\x85\xf7\x9c\x62\x2e\x10\xa4\x1e\xa1\x4d\x23\xc5\x8b\x3a\x96\xf1\xa6\x12\x9b\x89\x67\x88\x23\xd9\x90\xf2\x93\xb6\xb7\xaf\xc0\xa1\x0b\x2f\xb2\x43\xbc\xf7\xbe\x4f\x20\x87\x23\xdc\x31\xcd\x91\x49\xef\xd2\xed\xe2\x91\x18\x5e\x84\x54\x47\x68\x5f\x3f\x0e\x42\x76\x9d\x78\xe4\x50\x63\xbd\xab\xc7\x00\x33\x5f\x70\xfc\x5d\x11\x01\xa2\x83\x38\x31\x8c\xc9\x7b\xb6\x71\xbd\x05\xe3\xfc\x82\xb1\x20\xd5\x67\x7b\xea\x54\xa3\x0a\x56\x9b\x37\x6d\xf6\x1b\xb8\x36\x7d\x69\xbe\x1f\xd4\xbe\x6f\xba\xa1\x39\xb5\xa5\xdc\x33\xd2\xd6\x86\x96\x60\x74\xf6\xce\x3e\xab\x27\x5e\x9e\xf9\x25\x0c\x13\x43\xc0\x85\xc5\x0d\x43\xf8\x76\x9e\xe0\x1a\x20\x05\xa6\xdc\x58\x77\x2b\x8c\xe9\x61\x90\x45\x9d\x77\xfc\x73\x8d\x30\x3a\xe2\xbc\xe1\xaf\x84\x73\x75\xd9\xb4\x9c\xd9\x83\x33\xff\x7f\x30\x61\xae\xa6\x99\xc0\xba\x08\x67\xae\x4f\x23\x29\xfe\x02\x00\x00\xff\xff\x93\xa5\x62\x52\x6e\x01\x00\x00")

func vaultedUpgrade1Bytes() ([]byte, error) {
	return bindataRead(
		_vaultedUpgrade1,
		"vaulted-upgrade.1",
	)
}

func vaultedUpgrade1() (*asset, error) {
	bytes, err := vaultedUpgrade1Bytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vaulted-upgrade.1", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vaulted1 = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x57\x7f\x6f\xdb\xbc\x11\xfe\xbb\xfc\x14\xb7\x6c\xe8\x9b\x00\x8d\xdc\x0e\x5b\x87\xb7\x03\x06\xb8\xb1\xdf\xc6\x5b\x53\x1b\x91\xdb\x75\xa8\x8a\x82\x16\x4f\x36\x51\x8a\xd4\x78\x94\x1d\xff\xb3\xcf\x3e\x1c\x29\x29\x8e\xe3\xa0\xc5\x1b\x20\x80\x45\xf1\x9e\xe7\x7e\x3c\x3c\x9e\xb2\xe5\x35\x6c\x65\x6b\x02\x2a\x78\x25\xb2\xfc\x1a\x3e\x8c\x6f\xa6\x22\x5b\x2c\x44\xbf\x5c\x5c\x02\x35\x72\x67\x81\x90\x48\x3b\x4b\x50\x79\x57\x03\x61\xd9\x7a\x34\x7b\xa0\xe0\x3c\x2a\x7e\xf6\x18\x28\x62\xe4\xff\xf9\x30\x5f\xe4\xb3\x3c\xe2\x14\xd5\xdb\xa2\xba\xea\xd0\x8a\xea\x16\xd2\x42\x71\x69\xd3\xc3\xcc\xca\x1a\x8b\x6a\x01\x5f\xfa\x17\xba\xa8\x6e\xbf\x8a\x6c\xe5\x7f\x87\x6d\x71\xc9\xc6\xfc\xea\xea\x66\x52\x54\x8b\xa7\x5c\x98\x5d\xcd\x6f\x6e\xc6\x1f\x26\x9d\xf1\x4c\xfa\x35\x65\x59\x56\x54\x8b\xaf\x31\x84\xc9\x34\xbf\xba\x9d\x2d\x96\xb3\xf9\x87\x08\x31\xab\xc0\xba\x23\x3b\x4d\xd0\x78\xb7\xd5\x0a\xd5\x0b\x78\xc4\x81\x3a\x6c\xd0\xa7\xdc\xd1\xbd\x43\x70\xae\xab\xc1\xec\x02\x9c\x17\xdd\x0e\x69\x41\xdb\x80\x5e\x96\x41\x6f\x11\x68\x83\xc6\x64\x07\xee\x77\xb1\x41\x2d\xf7\xb0\x42\x68\x09\x15\x04\x07\x4a\x57\x15\x7a\xb4\x41\xcb\x80\x10\x36\x78\x40\x15\x0b\x75\xec\x58\xf1\xfc\x17\x02\xb7\xb3\x20\xfd\xba\xad\xd1\x06\xca\x62\xc4\x5d\x60\xb9\xc8\x96\x3d\xa5\x54\x31\x92\x51\x87\x51\x7a\x94\x01\x0f\x57\x2c\xee\x8a\xea\x56\xcc\xee\xfd\x36\x7b\x48\xdb\x28\xfa\x52\x3a\x1b\xd0\x06\x70\x15\x48\xb0\xb8\x4b\x62\xcb\x20\x47\x04\x91\xbd\xbd\xed\xc5\x77\x29\x95\x82\xf3\x57\x17\xd9\x01\x7b\xd9\x3c\x20\x77\xcd\x9e\xb9\xae\x5c\xa3\x4f\x81\x47\x20\x90\x56\x01\xc9\x2d\x12\xe8\x00\x92\x0e\x49\x61\xa7\xc3\xa6\x5b\x68\x24\xd1\xce\x79\x75\xc2\x91\xb2\x39\xf6\x43\xb5\x35\x7b\x22\xfe\xed\xf5\xc9\xb0\x12\x7a\x70\x40\x41\xb9\x36\xd2\xfe\x33\x9f\x7f\x38\x81\xcd\x48\xc7\xe8\xa8\x74\x78\x9c\x43\x5e\x7d\x4c\x65\x01\xef\x34\x05\x6d\xd7\x4f\xe6\x91\x0d\x1f\x51\xd8\x2d\x33\xcc\xdb\xd0\xb4\x81\x92\xb2\xa0\x74\x75\x2d\xad\x62\x12\x19\xc0\x38\x39\x1c\x61\xa8\x9c\x1f\xc2\xd2\x36\xb8\xe8\x47\xd2\xe3\x09\x42\xbb\x7d\xc4\x77\x87\x25\x13\x4e\xef\xb0\x6c\x39\x65\x47\x8c\x5d\x21\xd6\x7a\x8b\xb6\xa3\x71\x1e\xbc\x33\x78\x0a\xff\x0e\xcb\x63\x02\xf6\x96\x09\x3e\x12\xa6\x5c\x0f\x07\xaa\x2b\x83\xb6\xfc\x23\x09\x31\x62\x63\x63\x64\x89\x4f\xd4\xee\x04\x6b\xcc\xc7\x31\x2b\x1d\xea\xd1\x68\x8a\x75\x7b\xaf\x29\x10\x48\x63\x92\x2d\x9d\x02\xa3\x63\xa8\xa8\xbf\x07\x67\xab\x57\x64\x94\xf8\x46\xda\x75\xa7\xb4\x7e\x3d\x15\xe5\x27\x04\x90\xa0\x8f\x09\x7d\x7d\x48\xa6\xd0\xe0\xc3\x83\xec\xb1\x76\x5b\x5e\x11\xb7\xf1\x17\x1d\x11\x9d\x0a\xcb\xd7\xc7\x2c\xb1\xce\x0c\x92\x07\xe9\xc3\xe9\x96\x96\xaa\x1f\x15\x75\x20\x37\x7e\x4e\x4a\xe0\xcc\xa3\xfa\xb1\xee\x12\xd8\x91\x03\x6d\xb3\xf6\x52\xc5\x38\x3e\xa6\x9f\x04\x06\xd7\xb2\xdc\x77\x61\x40\x87\x5a\xb6\x9e\x7b\x66\xc7\x59\x39\x5f\xcb\x53\xc9\xec\xf0\x3a\x9a\xfc\x1a\x7e\x9b\xbd\x9f\xc2\xfb\xf9\xd5\x98\x2f\x86\x74\xbf\x7d\x4a\xc0\xdc\x79\x4a\x59\x6e\xe2\x55\xd8\x5d\x94\xd2\x63\x7f\x3d\xca\xb2\x74\x5e\x71\x3e\x3b\x0f\x3e\x4f\xde\xc1\x5b\x49\x08\x13\xed\xb1\x0c\xce\xef\x21\x6f\xb0\xd4\x95\x2e\x65\xd0\xce\x42\xf1\xc5\xc8\xaf\x9b\x10\x1a\x7a\x33\x1a\x51\x90\x56\x49\xaf\x28\xab\x3c\xa2\x42\xfa\x1e\x5c\x93\x39\xbf\x1e\xad\x24\xa1\xd2\xfe\x92\x1a\x2c\x1f\x3c\x5c\x1a\xee\xc2\x21\xdb\x84\xda\x14\x5f\xbc\xfc\x5a\x3c\x1f\xae\x93\xe8\x73\xbc\x21\xb4\xc1\x07\x7e\x6a\xfb\x46\x64\xb7\xb9\xc8\x66\x0b\x28\xce\x57\x2d\xfc\xb9\x4b\xed\x9f\x3e\x4f\xde\x7d\x9b\x8c\x97\xe3\x6f\xd7\xf3\x9b\xe9\xa8\xcb\xd0\xa8\xbb\x4d\xcf\xc3\xbe\xd1\xa5\x34\x66\xdf\x09\xea\x7f\xa3\xcc\xb8\x52\x9a\x11\x6d\xa4\xc7\xc3\xed\x17\xf1\x56\x7e\x1a\x7e\x32\xbb\xcd\x7f\x08\x3f\x6a\xc9\x8f\x0e\x08\x78\x1f\x57\xe0\xe0\x6d\xbf\x9e\xf8\x6e\xa7\xf7\xc5\x3a\x88\x7a\xe7\x75\x08\x18\xbb\xc5\x8f\xc2\x2c\x9e\x67\xb0\x74\xb0\x92\xe5\xf7\xb6\x81\xbd\x6b\x3d\x7c\xea\x46\x24\x25\x83\x7c\x11\x7b\x40\x42\xd6\x56\x84\x8d\x26\x50\x43\x69\x69\xe3\x5a\xa3\xf8\xde\x66\x7b\x54\xd0\x36\x2c\xb7\xa8\x93\x24\x9b\xce\x54\x39\xb0\x2e\x80\xc5\xd4\xcb\x56\x08\x1e\x83\xd4\x16\xd5\x50\xbc\xce\x8c\xcb\x77\x68\xf9\xd3\x45\xbc\x1a\x5f\x5d\x4f\x7f\xba\x8a\x91\xe2\x71\xfd\x38\x9f\xf9\x35\x4c\x3f\xcf\x96\x70\x35\x9f\x4c\x79\x6c\xc8\x85\x34\x66\xe5\xee\xfe\x2e\xca\x15\x94\x2b\x51\x82\x79\xf4\x9f\x89\xe9\x9d\x0e\x50\x3a\x85\xcf\x6e\x50\x5a\x6d\xd7\xe2\xe5\xb3\xbc\x2d\x4b\x24\xca\xc4\xeb\xbf\x3c\x9b\xd9\xad\x34\x5a\xc1\xd5\xfb\x19\xb4\x24\xd7\x08\xe7\x84\x08\x35\x52\x7c\xe0\x6e\x51\x3b\x8f\xa0\x38\x2f\x86\x2e\x32\xf1\xfa\xaf\xcf\x96\x1b\xe4\x6a\xca\xd8\x73\x5a\xeb\xb1\x74\x5b\xf4\x72\x65\x90\xaf\x86\x95\xc1\xfa\xbe\xef\x6c\x07\x0d\x64\xe2\xf5\xaf\xcf\xc6\xe0\xf1\xbf\xad\x4e\x33\xac\xdf\xea\x12\xd3\x60\x87\x84\x36\x98\x3d\xb4\x56\x6e\xa5\x36\x11\xeb\x1c\xb3\x75\x06\x92\xbe\x73\x97\xbd\xc8\xc4\xdf\x7e\x1d\xdc\x1d\x1a\x35\xb5\x4d\x63\x74\xac\xd7\x32\x25\xe9\xdd\xc7\x19\x2c\xfa\xd7\x0b\xef\xea\x86\xe7\xe4\xc5\x42\x8c\x4d\xd8\xb8\x76\xbd\x19\x84\x14\x7c\x9c\x6d\x1c\xd4\xf2\x3b\x02\xb5\x1e\x59\x68\x50\x4a\x0b\x1e\x93\x9a\xba\xca\xc4\x4b\xae\x57\x7d\xe5\x35\x5a\x45\x2f\x04\xb9\x1a\x83\xae\xd3\xf8\xa3\x09\x28\x68\x63\x38\x96\xaa\x4b\x46\x70\x3c\x38\x82\x64\x9f\x8a\xcb\xd8\x2e\xee\x3d\x6f\xa2\x6b\x19\xfc\x16\x1b\xb2\x26\xe1\x51\x92\xb3\x2f\x06\xf7\xd8\x8f\x55\xbc\x41\x2b\xbd\x6e\x7d\x92\x68\xc4\xb3\x7d\x52\x40\xd7\x8d\x41\x1e\x2b\x63\x17\xcb\x7a\xdb\x5f\x48\x0c\x3b\x6c\xc0\xb5\x4f\x4d\x4e\x13\xc7\xbc\x5e\x23\x83\xed\x36\x7c\x12\xe3\x04\xcb\x21\x7e\x1a\x7f\x7c\xbf\x9c\x4e\xbe\x8d\xf3\x7f\x2d\xc6\x79\xce\xc1\x6e\xa5\xd7\x31\x0e\x8e\x0d\x43\x3a\x12\x0b\xa7\x6d\xbc\xa9\x9e\x34\x0b\x2e\x5d\x9d\x3c\x8e\x44\x73\x2e\x7e\x1a\x7c\x06\x77\x69\x88\x60\xa7\x8d\x11\xa5\xe4\xb8\x86\xba\xa4\x30\x13\x42\x1a\x23\x22\x04\xa5\x8e\x9d\x76\xa4\xf4\xc5\x97\x2d\xa1\x67\xa5\x8a\x3e\xb7\x94\xc1\x32\x1a\x79\x0a\xd0\x48\x2f\x6b\x0c\xe8\x1f\x8c\x2d\x6c\x77\xe0\x62\xfa\xb8\x88\x80\x78\x17\x04\x27\xcd\xaa\xa1\x29\xd0\x86\x27\xf8\xce\x8a\xd9\x12\xfe\xe9\x22\xf0\x26\x1b\x5b\x5d\x1a\x2a\x06\xaf\xee\xdb\x5e\x1a\x5d\x7b\x3d\x79\x0c\xad\xe7\xfb\x0b\x28\x1d\xcc\x78\x5e\xe1\xfc\xe5\x45\x06\x33\x1e\x9b\x2a\xa9\x0d\x8b\x33\x2d\x5b\x67\x8b\xcb\x97\x17\x42\x53\x67\xc9\xdf\x43\x0f\x86\x17\x6d\x9b\x36\x0a\x52\xae\x9c\x0f\x7d\x2f\xeb\xb3\xab\x93\x26\xfa\xf0\x7a\x7d\xf0\x84\x20\x6b\x83\x44\x66\x9f\x4e\xef\x30\x93\x74\x71\x8a\x87\x71\x52\x77\x3e\xbb\x90\x68\x53\x5c\x76\x1b\xb9\x6d\x25\xce\xb9\x85\x5a\x96\xf3\xfc\x05\x07\x17\xcd\x61\xdc\x34\x06\xf3\xd2\xeb\x26\x3c\x95\xc0\x4e\xf8\xfc\xcd\xf5\x26\xc2\xc4\xee\x6a\x2b\xf1\xc7\x3f\xc4\xbb\x66\xa5\xed\x88\x07\x61\x47\x92\x22\x90\x10\xce\x82\x6f\xe3\x47\xd6\x56\x00\x00\xe8\x0a\x0c\xda\x75\xd8\xc4\xc1\xd3\xaf\xb7\xf0\x0f\x78\x19\x2b\x13\x5f\xf3\x1f\x61\x18\xda\x1c\xe7\x21\x60\x0d\xaf\xfa\xed\x71\x17\x1a\xc2\xa7\xb6\x9f\xf5\x2d\xe6\xcd\x59\xda\x6b\x15\xe8\x4a\x88\x7e\x6b\xe5\x9d\x0d\xb5\xa3\xf0\x4d\x72\x83\xea\xa6\x8c\xe0\x80\xbf\xa1\x99\xe5\x5c\xdb\xca\xc5\xfe\x7a\xde\x48\xee\x95\xee\xde\x06\x0e\x6c\x2e\x2e\x22\x66\xe0\xf9\xeb\x10\xea\x24\xc1\xe0\xad\xd2\xd4\x18\xb9\x07\xa5\xa5\x71\xeb\xc1\xf1\xd4\x95\x75\x30\x08\x67\x9d\x1e\xce\xd2\xa2\x2e\x63\xe2\xdb\x88\x1d\x57\x36\x5a\x29\xb4\x20\x2d\xed\xd0\x83\xc2\xaa\xfb\xe4\x8b\x8f\x67\x67\x62\xe0\xe2\x13\x33\x48\x91\x43\xf3\x48\xad\x09\x43\x5a\xd8\x75\xc1\x3f\x7c\x6b\x45\x56\xe9\x78\x9d\xfd\x3f\x00\x00\xff\xff\xcd\x29\x77\x60\x0b\x11\x00\x00")

func vaulted1Bytes() ([]byte, error) {
	return bindataRead(
		_vaulted1,
		"vaulted.1",
	)
}

func vaulted1() (*asset, error) {
	bytes, err := vaulted1Bytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vaulted.1", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"vaulted-add.1":     vaultedAdd1,
	"vaulted-cp.1":      vaultedCp1,
	"vaulted-dump.1":    vaultedDump1,
	"vaulted-edit.1":    vaultedEdit1,
	"vaulted-env.1":     vaultedEnv1,
	"vaulted-exec.1":    vaultedExec1,
	"vaulted-load.1":    vaultedLoad1,
	"vaulted-ls.1":      vaultedLs1,
	"vaulted-passwd.1":  vaultedPasswd1,
	"vaulted-rm.1":      vaultedRm1,
	"vaulted-shell.1":   vaultedShell1,
	"vaulted-upgrade.1": vaultedUpgrade1,
	"vaulted.1":         vaulted1,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"vaulted-add.1":     &bintree{vaultedAdd1, map[string]*bintree{}},
	"vaulted-cp.1":      &bintree{vaultedCp1, map[string]*bintree{}},
	"vaulted-dump.1":    &bintree{vaultedDump1, map[string]*bintree{}},
	"vaulted-edit.1":    &bintree{vaultedEdit1, map[string]*bintree{}},
	"vaulted-env.1":     &bintree{vaultedEnv1, map[string]*bintree{}},
	"vaulted-exec.1":    &bintree{vaultedExec1, map[string]*bintree{}},
	"vaulted-load.1":    &bintree{vaultedLoad1, map[string]*bintree{}},
	"vaulted-ls.1":      &bintree{vaultedLs1, map[string]*bintree{}},
	"vaulted-passwd.1":  &bintree{vaultedPasswd1, map[string]*bintree{}},
	"vaulted-rm.1":      &bintree{vaultedRm1, map[string]*bintree{}},
	"vaulted-shell.1":   &bintree{vaultedShell1, map[string]*bintree{}},
	"vaulted-upgrade.1": &bintree{vaultedUpgrade1, map[string]*bintree{}},
	"vaulted.1":         &bintree{vaulted1, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
