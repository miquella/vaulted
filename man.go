// Code generated by go-bindata.
// sources:
// doc/man/vaulted-add.1
// doc/man/vaulted-cp.1
// doc/man/vaulted-dump.1
// doc/man/vaulted-edit.1
// doc/man/vaulted-env.1
// doc/man/vaulted-exec.1
// doc/man/vaulted-load.1
// doc/man/vaulted-ls.1
// doc/man/vaulted-passwd.1
// doc/man/vaulted-rm.1
// doc/man/vaulted-shell.1
// doc/man/vaulted-upgrade.1
// doc/man/vaulted.1
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _vaultedAdd1 = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\x41\x4e\xc3\x30\x10\x45\xf7\x39\xc5\x3f\x00\x8d\xc4\x11\xa0\x54\x4a\x16\xa4\x56\x5d\x16\x48\xde\x0c\xf1\x18\x2c\xb5\xe3\x92\x4c\x1d\x71\x7b\x14\xb7\x20\x14\xa1\xae\xdf\x9b\x37\xfa\xf5\xbe\x41\xa6\xf3\x41\xd9\xbb\x15\x79\x8f\xfb\xaa\xb6\x0d\xba\x87\xe7\x4d\x55\x1b\x53\x5d\x19\x66\xe4\x56\x88\xa2\x3c\x50\xaf\x31\xf3\xe1\x0b\xfd\xc0\xa4\x3c\x42\x3f\x18\x7d\x12\x65\x51\xa4\x00\x82\xf0\x74\xa9\x96\x98\x7d\xed\xb6\xc6\xb6\xb6\x04\x5d\x78\x74\x61\xfd\x27\xeb\xc2\x0e\x2e\xb4\x42\x47\x76\xc1\xfc\xe3\x5c\xbe\x2c\xb5\xb7\x61\xa1\x09\x4f\x4b\xc7\x36\x78\xda\xd8\xf5\xae\x35\xfb\x76\xdb\x95\xb4\x3d\xd1\x24\x23\x48\x7e\xa7\x64\xc6\x31\x79\x46\x48\x03\xd8\x47\x8d\xf2\x7e\x63\x50\x5d\x2a\x2f\xa7\x24\xf8\x3c\x47\x9d\xed\xbb\xa2\xcf\xc6\xcf\x49\x1c\x31\x52\x66\x0f\x4d\x85\x5d\x2f\xbf\x03\x00\x00\xff\xff\xb4\x37\x77\xb9\x6c\x01\x00\x00")

func vaultedAdd1Bytes() ([]byte, error) {
	return bindataRead(
		_vaultedAdd1,
		"vaulted-add.1",
	)
}

func vaultedAdd1() (*asset, error) {
	bytes, err := vaultedAdd1Bytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vaulted-add.1", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vaultedCp1 = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x90\xc1\x6a\xeb\x30\x10\x45\xf7\xfe\x8a\xbb\x7a\xab\xc4\xf0\x3e\x21\x4d\x0c\x31\xb4\x8e\x89\xd2\x86\x82\xa0\x28\xf6\x08\x0b\x1c\xc9\x95\x14\x9b\xfc\x7d\x91\xa2\x24\x14\xda\x2e\xda\x9d\xf1\x5c\xdd\x73\x66\xf2\xdd\x1a\xa3\x38\xf5\x9e\x5a\x3e\x6f\x06\xfc\xcf\x72\xb6\x46\xb5\x78\x2a\xb2\xbc\xae\xb3\x34\x42\x33\x80\xcf\xd1\x98\x41\x91\x83\xef\x08\x8d\xd1\x9e\xb4\x87\x91\x10\x97\x02\x08\xdd\xc2\x89\x91\x1c\x94\x87\x70\x10\xd0\x34\xa5\xd9\xa4\x7c\x97\x7e\x0c\xc2\xb9\xc9\xd8\x36\x82\xd8\x6b\xb5\xa9\x59\xc9\x22\x8c\xcb\x07\x2e\x97\x77\x24\x97\x5b\x70\x59\x9a\xbe\xe5\xb2\x0e\x5f\x9a\x26\x2e\xeb\xaf\xb2\x66\x38\x7f\x9b\x66\x6b\xac\x0a\xb6\xdc\x96\xf5\xae\xdc\x54\xf1\xf5\x32\xd9\x2b\x1d\x97\xb9\x85\x93\xad\x72\x68\x2c\x89\xd0\x6c\x2c\x2c\x0d\xbd\x68\xa8\xc5\xe1\x7c\x5b\x5b\x5a\x73\xbc\xd3\xf8\xbf\x3c\xd6\x96\x32\xd5\x05\xb7\x97\xc5\xf3\xe3\xae\x58\xbd\xd5\x0b\xc6\xf6\x9b\xed\x2a\xf8\x91\x1e\x95\x35\xfa\x18\x2a\x46\x61\x95\x38\xf4\x14\x68\x8e\xfc\x2c\x5c\x6d\x52\x7d\x8f\x03\xe1\xe4\xa8\x0d\x27\xf4\x1d\x65\xd7\x7b\x41\x1a\x7b\x47\xce\x60\x7c\x47\x76\x52\x8e\x22\xf3\x96\xba\x56\x58\x7a\x3f\x91\x0b\x2b\x8c\x4a\xc4\x88\xf7\xe7\x1f\x34\xab\x62\xff\x17\xd5\xec\x93\x44\x52\xbd\x1c\xf5\xb7\xaa\x1f\x01\x00\x00\xff\xff\xac\xf1\xb5\x97\x9b\x02\x00\x00")

func vaultedCp1Bytes() ([]byte, error) {
	return bindataRead(
		_vaultedCp1,
		"vaulted-cp.1",
	)
}

func vaultedCp1() (*asset, error) {
	bytes, err := vaultedCp1Bytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vaulted-cp.1", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vaultedDump1 = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\xcd\x41\x8a\x83\x30\x14\xc6\xf1\x7d\x4e\xf1\x5d\xc0\xc0\x1c\x61\x46\x05\x33\x30\x1a\x8c\x9b\x81\x6c\x42\xcd\xa3\x42\x93\x88\xbe\xb4\xd7\x2f\xa6\x5d\x94\x76\xf9\xf8\x78\xbf\xbf\x9c\x3a\x5c\x5d\xbe\xb0\x9f\x6d\x35\xe7\xb0\xe2\x4b\x48\xd3\xa1\xff\xfe\x6b\x85\xd4\x5a\x3c\x47\x94\xcd\x56\xb8\x6d\x0b\xfb\x1d\x7c\xf6\x38\xa5\xc8\x3e\x32\x12\xc1\x3d\x10\x70\xc2\xce\x73\xca\x0c\xb7\xe3\xd7\x0c\x7d\xc1\xcc\x7f\x3f\x68\xa3\x4c\x01\x2d\xfd\x58\xaa\x5f\x59\x4b\x23\x2c\xa9\xe8\x82\xb7\xa4\xcb\x47\xd3\x9a\x7a\x54\x7a\x52\x87\xa0\xb5\x68\x72\x58\x3f\xa2\xc7\xf9\x9e\x5d\x62\xc9\x82\xd2\x16\x1c\x4b\x71\x0f\x00\x00\xff\xff\xbe\x1d\xa8\x5d\xe0\x00\x00\x00")

func vaultedDump1Bytes() ([]byte, error) {
	return bindataRead(
		_vaultedDump1,
		"vaulted-dump.1",
	)
}

func vaultedDump1() (*asset, error) {
	bytes, err := vaultedDump1Bytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vaulted-dump.1", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vaultedEdit1 = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x54\xdb\x6e\xdb\x46\x10\x7d\xdf\xaf\x98\xa7\xc6\x01\x64\x16\xe9\x1f\x28\xb1\x5c\x0b\x89\x6c\x41\x54\x11\x04\xe0\xcb\x90\x3b\x14\xb7\xd9\x8b\xba\x17\x31\xfa\xfb\x62\x86\x94\x2c\x1b\x05\xfa\xba\x33\x73\xf6\x5c\x66\xb7\xda\x3f\xc1\x09\x8b\xcd\xa4\x9b\x7b\xd2\x26\xc3\x27\x55\xd5\x4f\xf0\xbc\xdc\xac\x54\xb5\xdd\xaa\xb9\x08\x52\x6b\xee\xc1\xf8\x4c\x11\xbb\x6c\x4e\x64\xcf\x72\x9a\x20\x0f\x04\x5d\xf0\x99\x7c\x86\xd0\x03\x7a\xa0\x5f\x26\x65\xe3\x0f\x13\xb6\x20\xd6\x3f\x9e\x5f\xb6\xf5\xba\x16\xd4\xa6\xff\xdc\xf4\x5f\x6e\xb1\x9b\x7e\x07\x4d\xbf\xf6\xe8\xa8\xe9\xb7\x32\xf1\xb0\xaa\xbf\xec\xd6\xdb\xfd\xfa\xe5\x59\x86\xea\x23\x8e\x3e\x31\xfc\x85\xc4\x89\xc0\x05\x4d\xd0\x87\x28\x20\x7c\xe3\xff\x91\xa9\x04\xeb\xaf\x63\xf0\xf0\x4f\x31\x99\x0b\x0b\x19\xf2\x34\x5e\x07\x4d\x82\x84\x27\xd2\x90\x83\xd4\x2e\x93\xf5\x13\xfc\xf9\xed\xe5\xf3\xf2\x9b\xaa\x76\xb5\xaa\xd6\x5b\x68\xee\xda\x02\x7f\xa8\x9a\xbd\xa9\x87\x30\xfe\xfe\x64\x34\x41\x4d\x5d\xa4\x9c\x54\xd5\x46\xb5\x0f\x87\x83\xa5\x04\xe3\x40\x79\xa0\x08\x49\x6a\x70\x42\x5b\x28\x01\x46\x02\x6d\xd2\xd1\xe2\x99\x34\xf7\x78\x38\x19\x1a\xaf\x74\x41\x53\x46\x63\x93\x32\x5e\x98\x48\x0e\x8e\x7c\xa9\x60\x3f\x30\x4d\x12\x09\xcc\xf8\x60\x43\x8b\x16\xd0\x6b\xc0\xbe\xa7\x6e\x4e\x86\x7c\x36\x91\x2e\xfe\xa8\x44\x29\x99\xe0\xa5\xcd\x24\x88\x94\x28\xb3\xcc\xc1\x68\x4d\x1e\x08\xbb\x01\xb2\x71\xf4\xaa\x7b\x6a\x0b\x47\xf2\xa4\xd9\x6a\x35\x43\x55\xaa\xda\xad\xc4\x93\xe5\xf7\x1a\xbe\xae\x7e\xbc\x37\xe5\x27\x9b\xf2\x95\xce\x62\xc3\x06\x3d\x1e\x28\xc1\xb2\xeb\x28\x25\x3e\x86\xf5\x83\xb0\x98\xcc\xba\x2d\x74\x91\x34\xd3\x46\x9b\xaa\x5b\x40\xc7\x80\x9b\xc7\xe5\x1b\xc0\xcd\xe3\x12\xee\x5c\xb1\xd9\x34\xf7\x3d\x76\x39\x44\xc0\x92\x07\x9e\xef\x30\x9b\xe0\x3f\xc2\x72\xf7\x0c\x81\x9d\x8f\x06\x2d\xf8\xe2\x5a\x8a\x15\xac\x7b\x20\x8f\xad\x25\xbd\x50\x25\x51\x84\xd1\x58\x0b\x2d\xc1\x31\x06\x77\xcc\x53\xfa\xc4\xab\x26\x77\x74\xbc\x69\x12\x10\x0a\xd3\xd7\x8d\x92\x32\x0f\xab\x48\x0e\x0d\x37\xf0\xfb\x90\xb5\x7c\x75\x51\x97\x28\x74\x2a\x61\xbf\xee\xe1\x1c\x8a\xc4\x5f\x04\xaa\xde\xd7\xb7\xba\x17\x30\x0e\xa6\x1b\x20\x74\x5d\x89\x09\xda\x33\x68\xea\x05\xe7\x2e\xd1\x14\xce\x87\xfc\x41\x85\x23\x43\x42\x4b\x36\x8c\x72\xdf\xbc\x2e\x1f\x17\x02\xef\x4a\xca\x30\xe0\x89\x84\xe2\xac\x96\x65\x19\x7f\x0a\x3f\x09\xd0\x9f\x61\xbd\xdc\x40\x87\xf6\x9d\xd5\x91\xad\xde\x05\x4b\xc2\x56\x0c\xec\x21\x06\x4b\x3c\xdd\x12\x60\x4a\xc5\x5d\x36\xf6\xbd\x21\xea\xbb\x9c\x72\x0b\x1f\xa2\x0c\x4e\xaf\xcc\xe1\x2f\xe3\x8a\xbb\xba\x01\x68\x6d\x18\x49\xb3\x42\x5e\x23\x93\xe0\x13\x0c\xa1\x4c\xf9\x9c\x43\x89\xea\xda\xca\x3b\x1e\x09\x39\x90\x3c\xa0\x9f\x1b\x27\x0a\x97\x77\x70\x7b\xd7\x75\x70\x0e\x56\xa1\xfe\xbb\xa4\x39\xd8\xf9\x96\x5b\xcd\xf2\xc1\xd5\xa5\x4d\xd9\xe4\x92\x09\x46\x93\x07\xc8\xe4\x8e\x21\x62\x7c\xb3\x95\xff\xf9\xb0\x99\xac\x68\xb8\x69\x94\x80\xd3\x15\x52\x4f\x98\xc8\x74\xd9\xd0\x2b\xb8\xba\x5d\x79\x78\x0c\x11\x5c\xe0\x9f\x61\x4a\x13\x02\x3f\x7e\x93\x78\x33\xd9\xe9\x05\x5c\x76\x40\x87\xae\x38\xf2\x79\xd2\xc9\x8f\xf3\xed\xd7\x9a\x06\xb2\xb6\xe9\x77\xcd\x6f\x6f\x94\x3e\xb0\xd2\x07\xb2\x94\xa7\x7c\x77\xe4\xc2\x89\x7f\x23\x6b\x45\xc1\xe5\xde\x94\x43\x24\x0d\xf3\xdf\x73\xf9\x05\x77\x2b\xf5\x6f\x00\x00\x00\xff\xff\xf3\x29\xcb\x6c\x38\x06\x00\x00")

func vaultedEdit1Bytes() ([]byte, error) {
	return bindataRead(
		_vaultedEdit1,
		"vaulted-edit.1",
	)
}

func vaultedEdit1() (*asset, error) {
	bytes, err := vaultedEdit1Bytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vaulted-edit.1", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vaultedEnv1 = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x59\x6d\x6f\xdb\xb8\xb2\xfe\x1c\xfe\x8a\x01\x2e\x70\x9b\x00\x8e\x8a\x74\xf7\x53\xee\xed\x05\x7c\x13\xb7\xf1\x69\x6b\x1b\x96\xb3\x45\x51\x2f\x0a\x5a\x1a\x59\xdc\x50\xa4\x96\xa4\xec\x18\x45\xff\xfb\xc1\x90\xd4\x8b\x13\x67\x5f\x0e\x70\x0e\x50\x14\x88\x24\x3e\x33\x9c\x79\x66\xe6\x21\x9d\xac\xee\x60\xc7\x1b\xe9\x30\x5f\x5f\xa2\xda\xc1\x15\x4b\xd2\x3b\x98\x8d\x3f\x4d\x58\xb2\x58\xb0\xf8\x0e\xe8\xd5\xfa\x12\x74\xe3\xea\xc6\x59\xb0\x25\x4a\x09\x99\xae\x2a\xae\x72\x0b\xae\xe4\x0e\xa4\xe6\x39\x58\xcc\x0c\x3a\x0b\x85\x36\xc0\x03\x32\x08\xe5\x34\xb8\x12\xc3\x2a\x8f\x9f\x7e\x99\xcd\x17\xe9\x34\xf5\x36\xd6\xc5\xff\xaf\x8b\x9b\x81\xa5\x75\xb1\x84\x75\x31\x55\xbc\xc2\x75\xb1\x80\xaf\xeb\x62\x3a\x5f\xac\xa6\xf3\x59\xba\x2e\x16\xbf\xb2\x64\x63\x9e\xaf\x81\xf5\xe5\xfa\x92\x5b\xdb\xd0\x1a\xbf\x9c\x1b\x75\x72\x75\x7a\x07\xb7\x93\xf4\x66\x39\xf5\x0f\xbd\x07\x37\x06\xb9\x43\x0b\x1c\x2c\x5a\x2b\xb4\x82\xc6\x0a\xb5\x85\x1d\x37\x82\x6f\x24\xbd\x51\xb9\xdf\xc2\xf8\x73\x0a\x0f\x78\x00\xeb\xb4\xc1\x1c\x84\xf2\x4f\xbd\x1f\x09\xac\x4a\x64\x06\x6d\x23\x1d\x2d\x46\xb5\x13\x46\xab\x0a\x95\x1b\x02\x19\x84\xc6\x62\x0e\x4e\xc3\x16\x15\x1a\xee\xf0\x64\x38\xf7\x42\x4a\xe6\x63\xea\x43\x17\xe3\xea\x63\xc9\xc3\x82\xc4\xfb\xbe\x6a\x03\x0b\xc2\x02\x6f\x9c\xce\xd1\x61\x46\x51\x29\x8c\xae\xfc\xe2\x10\xac\xf4\x6e\xf2\xf1\x23\xc5\xe6\x94\x63\x23\x10\xc5\x20\x47\xc2\x42\xa3\x1e\x94\xde\x2b\xd0\x06\x1a\x65\x6b\xcc\x44\x21\x30\x1f\x45\x30\x5b\x12\x52\xa6\xab\x9a\x3b\xb1\x91\xd8\x3b\x4f\x1b\xc4\x4a\x38\x87\x79\x12\xd3\x3b\x9d\x69\x87\xd7\x94\x8c\x34\xbd\xa3\xf0\x85\xaf\xc4\x56\xf9\x20\xee\x4b\x54\x6d\x2c\x28\x70\x31\x07\x14\x07\x61\x61\xcf\x0f\x14\x59\x61\x69\x7f\x79\x83\xe0\x34\x23\x47\x85\xe2\x1b\x21\x85\x3b\x50\x24\x9d\xe1\xd9\x83\xf7\x5f\x8a\x02\x9d\xa8\x10\x74\xdc\x4f\x00\x1b\xc1\xbe\x14\x59\x09\x15\x72\x0f\x8c\xde\x15\xbe\x45\xe5\xd8\x5e\x37\x32\x07\x7c\x14\x96\xb8\x9a\x63\x21\x94\x70\x28\x0f\x89\xe7\x4a\xe4\x0e\x4b\x56\x2d\x53\x5f\x60\x1a\x4b\x63\x90\x02\x7e\xd1\x48\x09\xe3\xe5\x8c\x02\x68\x4b\x6d\x1c\x10\x9f\x5b\xb7\x8c\x96\xb4\x13\x08\x38\x09\xa4\x88\x84\x3e\x4e\xd3\xfb\x4f\xd3\xd9\x7b\x18\xc3\x72\xfe\x71\x42\x21\xdb\xa0\xd4\x7b\x5f\x4f\x39\x3a\x2e\xa4\x05\xad\xa0\xd4\x7b\xf8\x25\x92\x3f\x40\x58\x0f\x69\x13\x96\x4c\x17\x6c\x49\xe8\xfe\x79\xed\x88\xcd\x15\x3f\xc0\x06\xa1\x46\x53\x68\x53\x51\xc8\x85\x2b\x75\xe3\x20\xe4\xf5\x40\x51\x6f\xab\xd5\x69\xb0\x35\xdf\x2b\x4f\x9f\x84\x7d\xa6\xe4\x08\xb5\xd3\x0f\xc4\xd9\x98\x90\x11\x64\x06\x73\x54\x4e\x70\x19\x72\x69\x75\x63\xb2\x96\x73\x39\x16\x1e\x4a\xea\x8c\x3b\x9f\xc9\x73\x4c\xb6\x09\x1b\x10\x6f\x04\x99\x56\x85\xd8\x36\xc6\x7f\x01\x85\x90\x68\x47\x20\x94\x75\x5c\x65\x08\xb5\xd1\xf4\x68\x04\xe8\xb2\xe4\x22\x79\x12\x7d\xda\x05\x77\x14\xfd\xff\xf5\x7c\x1d\x15\xc2\x96\x23\x5b\x8e\x7e\xb3\x5a\x8d\xd6\xc5\x34\x6b\xac\xd3\xd5\xba\x58\xfc\x5f\xcc\xca\x01\xf6\x54\x54\x61\x21\xed\xb1\xb1\x38\x6a\x1d\xb5\xf4\xa0\xe5\x35\x4a\x49\xc0\x81\x2e\x54\x84\x83\xa2\x0a\x4f\x59\x28\xb7\x1e\x8b\xe8\x1e\x02\x1f\x40\xc8\x9b\x75\xb1\x1c\xf9\xae\x31\xac\x17\x0f\x47\x5f\xc7\x46\x0a\xb6\x11\x8e\xca\xcf\xe7\x17\x77\x5c\x36\x21\x1c\x7d\xcb\x6c\x0b\x2f\x18\x4d\x22\x1c\xed\xf3\x18\x90\x3e\xae\x78\x4d\xfc\x22\x18\xf4\x7b\xda\x10\xff\x89\xd4\xc0\x5b\x77\x1b\x8b\x45\x23\x41\x28\xa6\x5d\x89\x86\x02\xbd\x35\xbc\xaa\x9e\x74\x2c\x3b\x8a\xc9\x26\x03\x4a\x13\x46\x26\x9b\x1c\xbd\x1d\x6e\x0c\x3f\x04\x4b\xb1\xad\xb1\x60\xcc\x60\xa5\x77\xbe\xee\xa7\x0b\x36\x0d\x4c\x8f\x76\xad\x33\xbe\xb6\x9b\xba\x96\x02\x73\xc8\x35\x5a\x0f\x5c\x71\x97\x95\xa0\x55\x57\x1a\xb5\xc1\xf5\xa5\xaf\x42\xe2\x93\x5f\x6d\x99\x08\x0d\x91\x8c\x08\xe5\xd0\xd4\x06\x03\xf7\x81\x83\xc3\x47\x07\x0e\xab\x5a\x52\x2f\x0d\x9d\x7b\xab\x25\x57\xdb\x57\x16\x36\x8d\x90\x6e\x7d\x29\x54\xcc\x0d\x7d\xfc\xba\xfd\x98\x42\x58\xf3\xec\x81\x6f\xd1\x77\x6f\x8a\x8e\xe9\xa1\x5a\x8b\x9d\xd3\x9c\xb6\xd1\x10\x0f\x84\x2b\xc9\x59\x56\x08\x94\xb9\xa5\x74\x4a\xef\xaf\xaf\xd6\x04\xc6\xd2\x6a\xe0\x3b\x2e\xa4\xcf\x2e\x55\x08\x8f\xa9\x33\x58\x4b\x9e\x79\xd3\x45\xa3\xb2\xc0\x7e\x6d\x60\x6b\x9b\x0d\x48\xf1\x80\x6c\x83\x25\xdf\x09\x1a\xa0\x2a\xef\x96\xb5\x19\xef\xd6\x04\x82\xf2\x2c\xc3\xda\x59\x5f\xbd\xb2\x41\xbf\x84\xf8\x40\x4f\x28\x46\xee\xc0\x6a\x43\x11\xcb\xe1\x1f\xe9\x7c\x16\xd3\x10\x12\x34\xa6\xb1\x06\xf8\xc8\xab\x9a\x2a\xcd\xe9\x96\x95\xbf\x35\xd6\x75\xd3\x6e\x58\xe9\x9e\x48\x1e\x27\xe4\x65\x44\x01\xf3\x71\x08\x05\xd7\x85\xee\x1a\x9e\x16\x2b\xbc\xfa\xfe\x1d\x68\x13\x90\x8c\x3f\xa7\x37\x06\x73\x0b\x3f\x7e\xbc\x5a\x17\x4b\x96\xac\x52\xc6\xa5\xdc\xe8\xc7\xff\x61\xd9\x06\xfc\x3f\x26\x41\x82\xfc\x4b\xff\x27\xec\x1d\x25\x01\x66\xbc\xc2\xb3\xd5\xa1\xc6\x33\x1a\x37\x96\xdd\x84\x89\x74\x16\xb6\x7c\xb6\x6a\x7b\x72\x9c\x54\x40\x09\xeb\x46\x71\xe8\x70\xad\x14\x8a\x6c\x27\x22\x69\xdf\x41\x2d\x6b\x9d\x3e\x0b\x0c\xf0\x70\x14\x1e\x4a\x80\xb5\x5e\x13\x50\x16\xe3\xc8\x11\x5a\x75\x2b\x92\xe9\x6d\xeb\xc3\xf4\xb6\xfb\xe8\x78\x6d\xff\x71\xea\x07\x7d\xbb\x20\xfc\xf5\xa7\x8b\x56\xfa\x01\x55\xbf\x26\x48\x18\x47\x0f\x5f\x58\x0a\xe7\x7e\xe3\x81\xc6\x58\xd5\xda\x70\x73\x18\xa6\xfa\x82\xa5\xe8\xce\x2a\x5e\x7f\x0d\xa8\xbf\x46\xf0\x71\xdb\x64\x4e\xab\x9b\xbe\xe7\x70\xa9\xd5\xb6\xab\x13\x61\x62\x57\x62\xf7\xca\xa2\x3b\xfb\xda\xe3\x59\x29\x32\x3c\x6a\x26\x70\xd4\x4c\x7a\x19\x33\x34\xb9\xc1\x42\x1b\x6f\xc9\x4b\x06\x85\xfb\xd6\x40\xb2\x9a\x3c\x99\x16\x4a\xaf\x2f\xa3\x0c\x20\xba\xdd\x0a\x1b\xcd\x94\xd8\xc9\x0e\xad\x7c\xfb\x39\x15\x0a\x5f\x53\xe6\x78\xa2\x06\xad\x57\xa3\xa9\xb8\x22\x77\x86\x9f\x9f\x90\x86\xbd\xea\xa3\x01\x87\x3c\x3f\x3d\xa6\x33\xae\x8e\xc7\x34\x2f\x1c\x9a\x30\x8e\xc3\x88\x0e\x93\x27\xb4\xb8\x5e\xd9\x1d\x09\x12\xd6\xf2\xbb\x8d\x7d\x10\x21\x03\xd9\x71\xd0\x0d\xec\x85\x2d\x07\xfa\xe3\x49\xc4\x0c\x16\x06\xfd\xc8\x62\xa9\xe3\xc6\x01\xf7\x11\x6e\xc5\xb1\x47\xa6\x07\x2f\xc7\x8b\x43\xc4\x20\x75\xfe\x58\x8b\x10\xe3\xe7\x76\xb6\x21\x29\xa4\xa2\xda\x3f\x16\x6c\xbe\x43\x63\x44\x1c\x36\xe1\x71\xe4\x84\x8f\x21\x51\x7a\xfc\x39\x8d\xaa\xd0\x92\x2c\x1e\x7c\x18\x88\x5d\xa2\x62\x03\x49\x79\xd2\xd1\x90\x04\x2f\x70\x78\xbb\x9a\x84\x2f\x01\x9c\xef\x04\x87\x13\x8e\x8e\x06\x49\x15\xce\xa2\x2c\x46\x10\x2b\x0c\x55\x26\x35\x65\x66\xa8\x73\x5e\xd9\x88\x32\xfe\x9c\x7e\x5b\x4e\xde\x4f\xe7\x33\xda\xae\x36\x83\xc7\xb7\x93\x77\xe3\xfb\x8f\xab\xc1\xeb\xae\x14\x2e\x46\x21\xfb\x98\x0f\x41\xe3\x58\x1e\x8e\xe4\x53\x46\x7a\xf5\x71\xd2\x0a\x7b\xb1\x84\x85\xca\x45\x46\x03\xd0\x0f\xfb\xcc\x89\x5d\x1b\xdd\x20\x89\xa9\x97\x7c\x98\x7c\xf1\xea\xfe\x2b\xd1\x0d\x95\xfb\xf5\x1a\xfe\x0b\xce\x3f\xdf\x4d\x66\xf0\x69\x7e\x3b\x7d\xf7\x85\x54\xec\xea\x6e\x92\x4e\xe0\x76\x7e\x93\x8e\x60\xfc\x31\x9d\xc3\xfd\xe2\x76\xbc\x9a\x5c\xf7\x47\xce\xa0\x6a\xae\x92\x2a\x27\x77\x59\x7f\x14\x7d\xc4\xcc\x3f\xbe\xf0\x56\x5a\xad\xdb\x58\xb4\xf0\xd7\xcb\x6e\x78\xc6\xea\x28\xc0\x86\xab\x42\x29\xd1\x86\xd2\x55\x1a\x34\x40\x7f\x82\x7b\x2a\x72\x5b\xc9\x1a\x46\x86\xe4\xd6\x77\x66\x7f\x1a\xc9\x9b\x41\x17\xe9\xec\xb7\x05\x73\x3e\x58\xd9\x13\xab\x3b\xbd\xe6\x82\xb4\xec\x45\x3c\xcf\x9d\xac\xa9\x8a\x46\xf2\xa6\x6b\x22\xa0\x4d\x4e\x4a\xa5\x2d\x60\x22\xb0\x96\xf8\xfc\xc0\xb5\xc1\x8c\xd3\x8c\x6e\x03\x38\x54\xbc\xb6\xd9\x58\x27\x5c\xe3\xf7\x7a\x3a\xa8\x54\xe9\xec\x64\xf1\x84\x42\x18\x7e\x4b\x6d\xa5\x36\x7a\xe7\x0b\x57\x77\x16\xe9\xec\xd1\xe9\x3c\xe6\x4a\x6d\x31\xe8\x88\x48\xec\x36\x48\xc9\xf3\x44\x53\x5a\xe8\x3c\x90\x73\x93\xbf\x30\x70\xa8\x17\x0c\x9c\xb8\x66\xc9\x32\xa5\xb2\x86\xf5\xf9\xa6\x81\x37\xac\xe7\xff\xf8\xe6\x66\x92\xa6\xdf\x3e\x4c\xbe\x7c\x9b\xde\x7a\xd9\xb1\x31\x6c\xac\x40\xf8\xb5\x85\x40\xd3\xcd\xca\x7e\x4e\x26\x70\xaf\xc4\xef\xfe\xd0\x09\xc8\xb3\xd2\x8f\x36\x5d\x0c\xa2\x45\xf9\x7f\xb1\xb9\x3c\xf7\x22\x9d\xdc\x2c\x27\xab\x81\x33\xad\x27\xab\xee\x90\xdf\x69\x12\x2b\xb6\x0a\x0c\xfe\xde\xa0\x75\xf6\xdf\xe0\x49\x9a\x4e\xe7\xb3\x6f\xab\xf9\x87\x89\x6f\x17\xaf\xe1\xc8\xcd\xfb\xe5\x74\xf5\xa5\x7b\xeb\x7d\x5c\x84\xec\xc6\x13\x7b\x9c\x42\x27\x4d\xfe\x11\x14\xf5\xd8\xc8\x93\x9c\x79\x1a\xd6\x35\x1d\x8f\x25\x6e\x79\x76\x80\xf4\xf6\x03\xb9\xbc\x9c\x84\x56\x73\x7c\x20\xfe\x0f\xb6\x9c\xf1\x93\x33\x7a\x3b\x9d\xbb\x13\x19\xa0\xf0\x27\x28\x4f\x66\x8f\xf2\xca\x3e\x39\xd5\xd2\x14\x79\x7a\x55\x15\x8b\xdd\x5f\x0b\x74\x50\xd4\x14\x5e\x98\xe7\x51\x81\x1e\x97\x47\x21\x8c\x75\x5d\x6f\x0b\x23\x37\xe3\x59\x79\x74\x87\xd5\xd2\x39\xf4\xa2\x73\x8f\x38\x38\xe9\xb3\xc1\x15\xdb\x9e\xdb\xde\x9b\x0b\x0f\xe7\x2b\xd0\x1d\xf5\x43\xdb\x29\xcb\x56\xa3\x84\x72\x09\xf1\xa1\x70\xb1\x8c\xd3\x21\xd5\x0f\x66\x2e\xa5\xde\xdb\xe1\x25\x4c\x1c\xe2\xde\xd1\x3c\x5e\x11\x92\x4c\x44\xd3\xf7\x4f\x57\x72\x35\x40\x65\x46\x93\x64\xe7\x52\xc6\xb3\x38\x81\xc2\x79\xc5\x1f\x45\xd5\x54\x54\x00\x57\x50\xea\xc6\x5c\x74\x46\xad\xee\x2e\x79\xb8\x3b\xe9\x9f\x27\x60\xa7\xb1\x7c\x31\xf9\x1b\xa3\x20\x72\x86\x7d\x86\xe4\x45\xec\x52\x9d\x0a\x3d\x6a\x57\x5f\x74\xe3\x79\xe1\xcd\xc6\xcb\x94\xd8\x8b\xc3\x75\x0f\x45\xb2\x4d\x5a\xd8\x80\xa3\x8a\xf1\xa3\x29\xf3\xb7\x8e\x47\x97\x45\xcc\x9b\x11\x6e\xe4\x4f\x82\x60\xf5\xb5\x37\xe3\x9b\x9a\x2a\xd8\xe9\xfb\x4e\x48\x9b\x1a\x0d\x89\x49\x96\x14\x22\x94\xce\x62\xc1\xe2\x0d\x86\xbf\xdc\x32\x68\xb5\xdc\x79\x36\x77\xe6\xb8\x51\x91\x6f\xdc\xa8\x6b\xbe\xb7\xd7\x82\x57\xd7\xd7\x57\x57\x57\x6f\xde\xbc\xf9\xe9\xa7\x9f\x7e\xfe\xf9\xe7\x6b\xda\xc8\xeb\x0e\x7e\x5d\x2c\xd7\xff\x1d\x36\x1e\x54\x53\xcf\x28\xfa\x70\x14\x2f\x21\x42\x6a\x9e\x4e\xc4\xd3\x63\x55\x58\xb8\x62\x94\xc0\x11\x29\x0c\x6e\x72\x49\x9d\x37\x2e\xe9\x20\xfa\x42\x19\x8e\xf7\xa7\xe5\x16\x3c\x9b\x2a\xe0\x79\x2e\x5c\xe4\x5b\xf8\xba\x1d\x17\x3d\x10\xdf\xe8\x1d\x8e\xba\xdc\xc4\x86\x64\xbb\xb5\x5c\xbe\xa0\x8f\xbc\xf8\x15\x2a\x9c\x6a\xc9\x08\xdf\xe8\xc6\x75\xea\xfa\x85\x09\xf4\x0b\x69\xaf\xc9\xed\xb7\xc9\xec\x97\x6f\xd4\xc8\x68\x02\xcc\xef\x67\xab\xc1\x2c\x5a\x85\xc9\xa3\x1b\xe5\x60\x7a\x7b\xa4\xd8\x43\x9e\xf3\x13\x9d\xfc\x39\xee\x72\x36\x04\xec\x6f\x21\xff\x35\xb8\xd9\xf8\xd3\x64\x88\xf7\xec\x0e\xf3\x6f\x60\x2d\xc6\xcb\xd5\x74\x15\xc5\x67\x0b\x48\x33\xbe\xe6\xc6\x89\x23\xae\xfc\x6d\xe4\xd5\xdd\x10\xb4\xe6\xae\x7c\x01\x2b\x16\xc7\x3b\x6d\xda\x9b\x8f\xbf\x54\x62\x7f\x52\x22\x64\xf0\xf5\x0b\x65\xd8\x16\x60\xf8\x29\x24\xde\x89\x51\x1b\x3b\xfe\x85\x61\x83\xbe\x92\xba\x3b\x23\xa1\xe0\xfb\xf7\x24\x45\xf7\xe3\xc7\xb1\x87\x7f\x40\xa5\xb7\x43\xcf\x4e\x7c\xb8\x9c\xbd\xfd\x7b\x1b\x39\xc9\x87\xb7\x7f\xf0\xbe\xcb\xf1\x5b\xbe\xb7\xa7\x5e\xaf\xee\xde\x06\x23\x7d\x90\xd2\x3b\x78\x7f\x3f\x85\x05\xb7\x76\xaf\x4d\x0e\x0b\xa3\xab\xda\x59\xbf\xe9\xf7\xf7\xd3\xf5\xe5\x86\x93\x22\xaa\xdb\xf7\x75\x78\xdf\x0e\x64\x2f\x97\x36\x87\xee\x2e\xa0\x9f\xa3\xad\xf9\x71\xfa\x61\x31\x4e\x53\x62\x48\x1b\x6f\x7f\xe3\x7e\xac\xc3\xcf\xaf\x2e\xfc\x05\x9b\x36\x50\x69\x83\xed\x75\x7b\xc2\xfe\x19\x00\x00\xff\xff\x5e\x84\x9c\x6a\x24\x1b\x00\x00")

func vaultedEnv1Bytes() ([]byte, error) {
	return bindataRead(
		_vaultedEnv1,
		"vaulted-env.1",
	)
}

func vaultedEnv1() (*asset, error) {
	bytes, err := vaultedEnv1Bytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vaulted-env.1", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vaultedExec1 = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x58\x51\x6f\xdb\xb8\xd2\x7d\xd7\xaf\x18\xe0\x03\xbe\x4d\x00\x5b\x45\xda\x3e\x19\xc8\x83\xaf\xad\xad\x8d\xb4\xb6\x60\x39\x2d\x82\xd5\x22\xa0\xa5\x91\x45\x44\x22\xb5\x24\x65\xc7\xff\xfe\x62\x48\x49\x96\x5d\xa5\xdb\xee\xc5\xbd\x4f\x49\x28\xf2\xcc\x70\xe6\xcc\x99\x61\xfc\xed\x02\x0e\xac\x2e\x0c\xa6\xf1\x18\x5f\x31\x81\x3b\xcf\x8f\x16\xb0\x9a\x7e\x09\x3c\x3f\x0c\xbd\xe6\x23\xd8\x6f\xf1\xd8\xfe\xac\x0d\x6a\xd0\x39\x16\x05\x24\xb2\x2c\x99\x48\x35\x1c\xb9\xc9\x81\xc1\x9e\x1f\x50\x38\x44\x90\x0a\x94\x2c\xd0\xe2\x45\x4f\xab\x75\x18\x2d\x23\x8b\x19\x67\xff\x8a\xb3\x59\x1f\x39\xce\x36\xf0\x47\x9c\x2d\xd7\xe1\x76\xb9\x5e\x45\x71\x16\xfe\x09\x71\xb6\x14\xac\xc4\x38\x0b\xe9\xd7\xd6\x50\x9c\x85\x9e\xbf\x53\xff\x04\x83\x0e\xc4\xe3\x78\x4c\x1b\xff\x03\xc4\x16\x86\x69\x5d\x13\xb4\x05\x63\x4a\xfc\xbd\x91\x68\x01\xf3\x20\x9a\x6d\x96\x16\xcf\x86\x22\xf8\xe5\x70\xfa\x40\x67\x68\xe7\x8e\x0b\xd4\x60\x72\x84\x0c\x99\xa9\x15\x6a\x2f\x53\xb2\x84\xcb\x8b\x58\x60\xf2\xc6\x42\xd2\xee\xc6\x48\x93\x4a\x2e\x05\xc8\xec\xea\x50\x3c\x16\x71\xb6\x89\xff\xdf\xb7\x4e\x37\xf7\xf7\xfc\x6d\x9b\xbb\x37\xee\xef\x45\x15\x26\x3c\xe3\xad\x5b\x75\x51\xc0\x74\xb3\x22\xd7\xe9\x6f\x72\x1f\x28\x1f\x64\xb0\x5b\x30\x12\x1c\x94\x0f\x11\x22\x19\x98\x46\xd1\xe3\x97\xe5\xea\x13\x4c\x61\xb3\xfe\x1c\x50\x60\x77\x58\xc8\x23\x64\x52\x41\x8a\x86\xf1\x42\x83\x14\x90\xcb\x23\x7c\x6d\x3c\x76\x10\xda\x42\x6a\xdf\xf3\x97\xa1\xb7\x21\x74\xbb\x5e\xd9\x5b\x96\xec\x04\x3b\x84\x0a\x55\x26\x55\x89\xa9\x8d\x88\xac\x0d\x68\xeb\xf5\x89\x8b\x3d\xb0\x26\xd8\x46\x82\xae\xd8\x51\x00\x45\xd4\xf7\xbe\xe5\x28\x80\x8b\x83\x7c\xc1\x14\x4c\xce\x35\x1c\xd9\x69\x04\x89\xc2\x14\x85\xe1\xac\xd0\xc0\x14\x82\x96\xb5\x4a\x30\xb5\x87\x20\xc5\xcc\x42\x15\x32\x61\x64\x5f\xc3\x0d\xfa\x7b\xdf\x43\x71\xe0\x4a\x8a\x12\x85\x19\x41\x22\x45\xc6\xf7\xb5\xb2\x3b\x20\xe3\x05\xea\x11\x70\xa1\x0d\x13\x09\x42\xa5\x24\x2d\x8d\x00\x4d\xe2\xdf\xfa\x57\x09\x10\x32\x1e\x6b\xd4\x9a\x4b\x4a\x96\x37\xe7\x9a\xed\x8a\x26\xf4\x7b\x14\xd8\x80\x52\xac\xb1\xac\xa4\x62\xea\x74\xe9\xb1\x48\x5d\x06\xce\x31\xf2\x61\x9b\xa3\x57\xa1\x2a\x99\x40\x61\x2e\xb6\x6b\x23\x15\xa6\xc0\x85\x35\xe0\xc2\x44\x97\xae\xb5\x5d\xd5\x06\x59\x3a\x1c\xf8\x84\x89\xcb\xc0\xb3\xcc\xa0\x72\x01\x76\x41\x77\xec\xaf\x35\xfd\x45\xe8\x03\x2c\xf3\x5a\xda\x76\x3c\xb6\xcc\xea\x11\xe9\x24\x6b\x38\x72\x9d\xf7\x18\x75\x15\x31\x85\x99\x42\x9d\x13\x5a\x64\x98\x32\xc0\x40\xe0\x11\x9a\x20\x3a\x64\x5a\x78\x3b\x5e\x0c\x1a\x0c\x2b\x11\x15\x77\x31\xbe\xb6\xa3\x75\x1e\x8f\x9b\x14\x60\x3c\x7e\xc1\x13\x99\xfc\xd4\x2c\x58\xa0\x42\xb2\x14\x98\x80\x4d\x34\x85\x17\x3c\x01\x17\x46\xda\xab\xd8\xa8\x50\xdd\x3a\xa7\x7e\xd3\x10\x45\x0b\x60\x7b\x14\x66\xd0\x4c\xa5\xe4\xeb\x29\x1e\xdb\x0d\x64\x25\x78\xad\xa4\x6e\x58\x80\xaf\x06\x95\x60\xc5\x19\x02\x86\xad\x0c\x22\x6b\xbe\xa7\xf4\xc4\xe3\x5a\x91\x80\x78\xb3\x86\xab\x2d\xb8\x48\x2b\xc9\x1d\x64\xad\xd1\x16\x27\xd9\xa1\xdb\x34\x47\x7d\x98\xd5\x4a\xa1\x30\xc5\x09\xa4\x28\x4e\x1d\xdd\x31\xf5\x8c\x84\xa3\x54\x2f\x2e\xe8\x0b\xa6\x73\x3e\x93\xaa\x72\xf5\xdc\x61\x6b\x27\x40\xd3\x6f\x11\x3c\x04\x4f\x56\x31\xff\x20\x1e\xa0\x30\x7f\x4e\xe0\xff\xe0\xe6\xdb\x22\x58\xc1\x97\xf5\x7c\xf9\xfb\x13\x09\xc6\x76\x11\x44\x01\xcc\xd7\xb3\x68\x04\xd3\xcf\xd1\x1a\x1e\xc3\xf9\x74\x1b\x4c\x7a\x3d\x4e\x1c\xfc\x3b\xbf\xa4\xd8\xa7\x5e\xb7\x6a\xf9\x67\xd7\x6f\xad\x91\x56\x55\x6a\x8a\xe4\xcf\x97\x83\x91\x6d\xe1\xe1\x99\x43\x5e\xff\x94\xa3\x38\xdd\x27\xda\x46\xb6\xda\x40\xa1\xae\x0b\x43\xcb\xd7\x72\x72\x8e\x16\x21\x17\x4c\x1b\x0a\xb2\x47\xf6\xd2\xba\x57\xdd\x9d\xfd\x96\xc8\x37\xbd\x93\x07\xce\xae\xc4\x1d\x53\x4e\x4c\x21\x3d\x09\x43\x6f\x3b\xc8\xf5\xb2\xd6\x86\x6a\xb6\x29\x6e\x90\x2a\x45\x75\x2e\x2c\xaa\x03\xea\x45\x4d\x3b\x5f\xae\xa4\xc1\x89\xd3\xe9\x84\x11\x19\xda\x00\x36\x22\xa8\xad\xa0\xd6\x3b\x6d\xb8\xa9\xed\x5d\x87\x83\x4a\x64\xf0\x06\xab\x6f\xe4\x5a\x57\x6f\x2f\x95\x7b\xa5\xe4\x81\xa7\xb6\x87\xb4\x16\x49\xe5\x85\x34\x50\x32\x93\xe4\x9e\xc9\xa5\x46\xba\x00\x1b\xa0\xfc\x75\xa2\x29\x2d\xa4\xbc\x29\x53\x29\xf4\x64\x1a\x0e\x4c\x71\xa7\xad\x44\xf2\x9e\x13\x13\xcf\xdf\x44\xa4\x79\x10\xdf\xec\x6a\x78\xdf\x94\xd0\xf4\x5b\xf4\x3c\x9d\xcd\x82\x28\x7a\x7e\x08\x9e\x9e\x97\x73\x2a\x1f\x9a\x31\xa6\x02\xb8\x3d\x9b\x71\x54\x16\x8c\x6e\xc5\x92\x04\xb5\xa6\xc2\xf1\xe1\x51\xf0\xbf\x6a\x7b\x21\x64\x49\x0e\x1a\x0d\xa5\xf8\x1c\x2d\xca\xff\x50\x7c\xfc\x61\x2f\xa2\x60\xb6\x09\xb6\x3d\x67\x5a\x4f\x88\x79\x1a\x13\x85\xc6\xe5\x98\xf2\xc3\xf7\x02\x14\xfe\x55\xa3\x36\xfa\xbf\xe0\x49\x14\x2d\xd7\xab\xe7\xed\xfa\x21\x58\xd1\xd4\xf0\x0e\x2e\xdc\x7c\xdc\x2c\xb7\x4f\xdd\x57\xeb\x63\xe8\xb2\x9b\xc2\x91\xda\x6f\xd3\x1d\x06\x4d\xfe\x08\x0a\xb8\x6e\x79\x62\x55\x47\xd7\x55\x25\x95\x81\x02\xf7\x2c\x39\x41\x34\x7f\x20\x97\x37\x81\x53\x9a\xcb\xd1\xe3\x7f\xa7\x38\xd3\xab\x61\xa8\x6d\x9a\xba\x99\xa8\x52\x40\x6e\x72\x54\x8e\xcb\x16\xe6\x37\x7d\x35\x3e\xdc\x1c\x38\xbb\x1e\x63\x9b\x5a\xa7\x11\xec\x0c\x45\x9a\xf0\x46\x9b\x05\x59\x99\xef\xaa\x23\xe3\x4a\x9b\x4e\xda\x5c\x27\x4c\x58\x92\xd3\xaf\x9d\xe8\xb4\x6c\x76\x52\x74\x63\x11\x7b\x23\x95\xd7\x9b\xc5\x8f\x4c\x9f\xbd\xb9\xb5\x70\x75\xdb\xb3\xce\x72\xd8\x02\x1b\xd9\x8e\x0e\xae\x5a\x5c\x7c\xec\xd3\x22\x61\x45\x41\x2a\xca\x35\xb0\xa2\x90\x47\x07\xd1\x3b\xb8\x43\xe7\x68\x6a\xdd\x63\x50\x48\xb1\x47\x75\x96\x4f\x93\x33\xd1\x43\xf5\x94\xa4\x29\x9c\x15\x05\x1c\x79\x51\x38\x50\xb8\x29\xd9\x2b\x2f\xeb\x92\xf8\x7f\x07\xb9\xac\xd5\x6d\x67\x54\x4b\x28\x91\x09\x32\xcc\xcc\xa0\x7f\x96\x7f\xdd\xe8\x63\x6b\xc9\x70\x2b\xa1\x34\x6a\xf4\x65\x86\xeb\x4e\xa4\xec\x04\xd9\xbb\x8b\xcb\xc7\x93\xac\x2d\x2f\xac\xd9\x66\x6a\x6d\xa4\xd8\xcd\xd5\x14\xc9\x36\x69\xee\x02\x86\x0a\xc6\x10\xef\x13\x85\xb6\x2f\xf5\x07\x73\x6b\x86\x9b\x11\x14\xfc\x85\xc6\xd7\x89\x35\x63\x35\x4d\x64\xd7\x6f\xbf\x96\x25\x10\xd5\x15\x2a\x3b\xe4\xd1\x62\xfb\x9e\xf0\xfc\x8c\xbb\x3a\x0a\x43\xef\x98\xf3\x24\x87\xa3\xac\x8b\x94\x32\x2a\x8b\x03\xb6\xa3\x87\x35\xce\x94\x68\xd8\xc7\x94\x98\xb0\xa3\x9e\x70\x56\x4e\x26\x77\x77\x77\xef\xdf\xbf\xff\xf0\xe1\xc3\xc7\x8f\x1f\x27\x74\xad\x77\x9d\xad\xf6\x3d\x12\x86\x6e\x1a\xef\xf1\x8b\x36\xba\xfe\xd0\x26\xea\xba\x3d\x0e\xf7\x58\xae\xe1\xce\xa3\x74\x8e\x40\xe1\x9e\xa9\xb4\x20\x19\x6e\x8e\x74\x10\xe7\xb2\xe9\xf7\xfa\xeb\xe2\x73\x9e\x2d\x05\xb0\x34\xe5\xa6\x61\x9f\xdb\xdd\xf6\x8e\x33\x10\xdb\xc9\x03\x8e\xba\x4c\x35\xea\xa4\xbb\xb3\xac\xf0\x86\xdb\x8f\x1d\x96\xb8\x20\x2e\x39\xe7\xd8\x8e\x1e\x30\xed\x08\xfc\x46\x3b\xfa\x3a\x7d\xfc\xbc\x0d\xe6\xcf\xc1\xea\xeb\x33\xa9\x1a\xb5\x83\xf5\xe3\x6a\xdb\x6b\x4c\x5b\xd7\x86\x64\x2d\x0c\x2c\xe7\x17\x63\xb5\x4b\x7a\x3a\x20\xeb\xdf\xe3\x6e\x56\x7d\xc0\xf3\xfb\xef\x9f\xc1\xad\xa6\x5f\x82\x3e\xde\x77\x4f\xc7\x5f\xc0\x0a\xa7\x9b\xed\x92\x9e\xb1\x7d\x40\x6a\xf8\x15\x53\x86\x5f\x70\xe5\x97\x91\xb7\x8b\x3e\x68\xc5\x4c\xfe\x06\x56\x53\x1c\xbf\x4b\x05\xf8\xca\xca\xca\x66\xec\x27\x0a\xee\x6f\x6a\x84\x2c\xbe\xfb\x99\xa2\x6c\xcb\x91\x04\xba\x21\x73\x26\x49\xe2\xa8\x32\xce\x2c\xdb\xa1\x93\x5f\x73\xe9\xdd\x0f\x68\x74\xdf\x77\x6a\x60\xe3\x66\x75\xff\x4b\x77\xf8\x1e\x82\xb8\x70\xff\x83\xef\x5d\x7e\xef\xd9\x51\x0f\x7d\xde\x2e\xee\x9d\x91\x73\x48\xa2\x05\x7c\x7a\x5c\x42\xc8\xb4\x3e\x4a\x95\x42\xa8\x64\x59\x19\x6d\x2f\xfd\xe9\x71\x19\x8f\x77\x8c\x46\xa3\xaa\xfd\x5e\xb9\xef\x6d\x6b\xb6\x73\xd3\xee\x44\x81\x32\x97\x0f\xd7\xd6\xfc\x34\x7a\x08\xa7\x51\x44\xec\x68\xa3\x6b\xff\xc9\x71\x39\x90\xdf\xdc\xdd\x52\xe3\xa5\x06\x55\x4a\x85\xed\x7f\x38\x7c\xef\xdf\x01\x00\x00\xff\xff\x5e\x98\xa2\x60\x9d\x13\x00\x00")

func vaultedExec1Bytes() ([]byte, error) {
	return bindataRead(
		_vaultedExec1,
		"vaulted-exec.1",
	)
}

func vaultedExec1() (*asset, error) {
	bytes, err := vaultedExec1Bytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vaulted-exec.1", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vaultedLoad1 = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xce\x5f\x6a\x03\x21\x18\x04\xf0\x77\x4f\x31\x17\x88\xd0\x23\xb4\x69\x20\x16\xea\xca\x9a\x97\x82\x2f\xb2\x7e\x12\x61\xab\x41\xbf\xdd\x5e\xbf\x54\xfb\x8f\xbc\x0d\x0c\xc3\x6f\xe4\xe5\x8c\xdd\x6f\x2b\x53\x70\x87\xb5\xf8\x80\x07\x21\xed\x19\xfa\xf1\xf5\x24\xa4\x31\xe2\xbb\x44\xef\xdc\x01\x5b\xa3\x86\x17\x3b\x69\xdc\x6a\xd9\x53\xa0\x00\x2e\x68\x1c\x52\xfe\x0a\x4b\x25\xcf\x84\x52\x51\xe9\xb6\xfa\x85\xc0\x57\xc2\x52\x32\x53\x66\x94\x08\x3f\xb8\x8e\xd8\x37\x3d\x19\xab\x6c\x87\x5c\x7c\x72\xf1\xf8\x9f\x73\x71\x86\x8b\x2a\xfb\x77\x72\xd1\xf4\xc5\xf3\xc9\x1e\x67\x65\x2e\x6a\xd2\x7d\x34\x0f\xa4\xdd\x2b\x7f\x33\x7c\x24\xbe\x8e\xc3\x3f\xfd\xef\xf1\x3d\xf9\xf1\x5c\x8a\xcf\x00\x00\x00\xff\xff\x29\xac\xab\x44\x08\x01\x00\x00")

func vaultedLoad1Bytes() ([]byte, error) {
	return bindataRead(
		_vaultedLoad1,
		"vaulted-load.1",
	)
}

func vaultedLoad1() (*asset, error) {
	bytes, err := vaultedLoad1Bytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vaulted-load.1", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vaultedLs1 = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8d\x41\x0a\xc2\x30\x10\x45\xf7\x39\xc5\x3f\x40\x1b\xf0\x08\x5a\x0b\x2d\x68\x1b\x3a\xdd\x08\xd9\x14\x9a\x40\x60\x68\xc4\x99\x7a\x7e\x21\x0a\x82\xb8\xfd\xef\x3d\xbe\x9d\x3b\x3c\x97\x9d\x35\xac\xbe\x66\xc1\xc1\x58\xea\x30\x1c\xaf\xad\xb1\xce\x99\x0f\x02\x0b\x7c\x0d\x4e\xa2\x82\x85\xf9\x9d\x48\x71\xe9\x36\x8c\x8e\x7a\x2a\xbe\x8f\x27\x1f\x9b\x6f\xe5\xe3\xf4\x6f\x4f\xa2\x85\x50\x87\x73\x4b\xcd\xd4\xbb\xb9\x1f\x87\x62\x5e\x7e\x3e\x2a\xe4\x2d\xe0\x1e\x1e\xe0\xb4\x85\x0a\x9a\x21\xba\xe6\x5d\xad\x79\x05\x00\x00\xff\xff\x8d\xa8\x1b\x0a\xbc\x00\x00\x00")

func vaultedLs1Bytes() ([]byte, error) {
	return bindataRead(
		_vaultedLs1,
		"vaulted-ls.1",
	)
}

func vaultedLs1() (*asset, error) {
	bytes, err := vaultedLs1Bytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vaulted-ls.1", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vaultedPasswd1 = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x90\x5d\x6a\xeb\x30\x10\x85\xdf\xbd\x8a\x59\x40\x62\xb8\x4b\xc8\x4d\x0c\x31\xb4\x8e\xb0\xdc\x86\x82\xa0\x28\xd6\xa8\x16\xd8\x92\xd1\x8f\x4d\x77\x5f\x24\xbb\x69\x43\x69\x5f\xda\x57\xcd\x99\xef\x7c\x9a\xbc\x39\xc2\xc4\x43\xef\x51\xb0\xed\xc8\x9d\x9b\x05\xfc\xcb\x72\x7a\x84\x6a\x77\x5f\x64\x39\x21\xd9\x3a\x86\x75\xca\xb6\xd0\x76\x5c\xbf\xa0\x03\xdf\xe1\xf2\x6a\xac\x00\x23\x81\x2f\xa8\xb4\x4e\x9f\xaa\x13\xa1\x25\x4d\x08\x26\xff\x33\xb9\xbf\x05\x31\x59\x03\x93\xa5\xe6\x03\x32\x49\xbe\x8b\x19\xfb\x25\x48\x8f\x70\x28\xe8\xbe\x2e\x49\x53\x9e\xaa\xb4\xb8\x37\xda\xa3\xf6\xa0\x74\x72\xfa\x48\x2f\x42\xa0\x1c\x04\xed\x4d\x68\x3b\x14\x1b\x30\xba\x7f\xbd\x75\x57\x6e\xfd\x93\xc8\x13\xaf\x94\x2b\x27\xfa\x3c\xee\x1e\xee\x9a\xe2\xf0\x4c\x76\x94\x9e\x4f\xf5\x21\xfa\xa0\x9e\x94\x35\x7a\x88\xa5\x13\xb7\x8a\x5f\x7a\x8c\x14\x87\x7e\x03\xca\xc3\xac\xfa\x1e\x2e\x08\xc1\xa1\x00\x9e\x2e\x95\xb5\xc1\xda\x98\xbf\xb6\x4a\x63\x3f\xa9\x6e\xc0\xf8\x0e\xed\xac\x1c\xa6\xf2\xe0\xd0\x5e\x39\xa3\x35\xc3\x18\x8f\x12\x77\x22\xec\x1d\xf2\x83\x6f\x55\x9c\x7f\xe3\x9c\x45\xa2\xc6\xf9\xaf\x7d\xdf\x02\x00\x00\xff\xff\xf1\x83\xc8\xb9\x72\x02\x00\x00")

func vaultedPasswd1Bytes() ([]byte, error) {
	return bindataRead(
		_vaultedPasswd1,
		"vaulted-passwd.1",
	)
}

func vaultedPasswd1() (*asset, error) {
	bytes, err := vaultedPasswd1Bytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vaulted-passwd.1", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vaultedRm1 = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\xcd\x6a\xc4\x20\x14\x85\xf7\x79\x8a\xb3\x9a\x55\x47\xe8\x23\xb4\xd3\x81\x64\xd1\x8c\xc4\x6c\x0a\x6e\x4c\xbc\x36\x42\xa2\x53\x35\x43\xe7\xed\x4b\x1c\xa1\x3f\x94\xd9\x09\x9e\xef\x7c\xf7\xb0\xbe\xc6\x45\xad\x73\x22\x2d\xf7\x61\xc1\x63\xc5\x44\x8d\xf6\xe9\xf5\x58\x31\xce\xab\xf2\x85\xb0\x40\xee\x11\x68\xf1\x17\x8a\xa0\x4f\x1b\x93\x75\xef\x37\x32\x66\x44\xbc\xb5\x27\x2e\x1a\x91\x31\x69\x9e\xa5\x39\x7c\xc3\xd2\x74\x90\xa6\x71\x6a\x21\x69\xf8\xf6\x94\x3b\xc6\x98\x34\xfc\x9f\xb8\xa6\x99\x12\xdd\x43\x86\xf0\xd7\x90\x0f\xbb\x87\x88\x1a\x2f\x47\x71\xe8\x1a\xde\x37\xa7\x36\x5b\xbb\xb2\x26\x4d\x54\x86\x20\x9e\x69\xb4\xc6\x92\xc6\x70\xfd\x51\x25\x77\x0c\xfd\x44\xdb\xee\x84\xd1\x6b\x82\x8d\xa0\x8f\x55\xcd\x48\x3e\xf3\x6e\x5d\x06\x0a\xf0\xa6\x2a\x4d\x69\x52\x5b\x74\x9d\x35\x9c\x4f\x18\xa8\xdc\xa8\x59\x76\x37\x06\xea\x26\xc5\xa8\xdc\xef\xc4\x43\x6e\xa4\x10\x7c\xd8\x3c\xda\xc6\xf3\xac\xae\xa4\xe1\x1d\x62\xd2\x7e\x4d\xac\xfa\x0a\x00\x00\xff\xff\xe6\x20\x08\x4c\xb7\x01\x00\x00")

func vaultedRm1Bytes() ([]byte, error) {
	return bindataRead(
		_vaultedRm1,
		"vaulted-rm.1",
	)
}

func vaultedRm1() (*asset, error) {
	bytes, err := vaultedRm1Bytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vaulted-rm.1", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vaultedShell1 = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x58\x5d\x6f\xdb\x3a\xd2\xbe\xd7\xaf\x18\xe0\x05\xde\x26\x80\xad\x22\x6d\xaf\xbc\xe8\x85\x37\x56\x63\x23\xa9\x6d\x58\x4e\x83\xe0\xe8\x20\xa0\xa5\x91\x45\x44\x22\x75\x48\xca\x8e\xff\xfd\x62\x48\x7d\x39\x51\xb2\xa7\x0b\xec\xde\x25\x14\xf9\xcc\x70\x3e\x9e\x79\x68\x7f\x3b\x87\x03\xab\x72\x83\x49\x34\xd6\x19\xe6\x39\x5c\x79\x7e\x38\x87\xe5\xf4\x67\xe0\xf9\xeb\xb5\x57\x7f\x05\xf7\x31\x1a\x83\x36\x4c\x19\x0d\x4c\x00\x17\x06\x15\x8b\x0d\x3f\x60\xfd\xf9\xc8\x4d\x06\x26\x43\xd0\x18\x2b\x34\x1a\x52\xa9\xec\xff\x16\x05\x72\xc9\x12\x4c\xe8\x9c\x74\xbb\xe8\x90\x35\x17\x3e\x2e\x57\xeb\x70\x11\x5a\x93\x51\xfa\xcf\x28\xbd\x3e\x33\x1c\xa5\x1b\x88\xd2\x85\x60\x05\x46\xe9\x1a\xfe\x88\xd2\xc5\x6a\xbd\x5d\xac\x96\x61\x94\xae\xff\xf4\xfc\x9d\x1a\x3a\x05\xd1\x38\x1a\x33\xad\x2b\x3a\x65\x01\x98\x12\x83\xe7\xc3\x39\xcc\x82\xf0\x7a\xb3\xb0\x8b\xd6\x8b\xf0\x83\x7b\x5e\x54\x1a\xb5\xbd\x82\xb3\x1a\xce\x83\xbb\x3b\x32\x81\xe2\xc0\x95\x14\x05\x0a\x03\x07\xa6\x38\xdb\xe5\x38\x02\x9e\x82\x46\xf3\x0f\x4f\x9a\x0c\xd5\x91\x6b\x84\x04\x53\x72\x54\x83\x91\x35\xc4\xe7\x1d\x17\x9f\x75\x16\xa5\x9b\x4b\xdf\xfa\x53\xfb\xe7\xf9\xdb\x26\x22\xef\xdc\xc6\x0b\x4b\x8c\x79\xca\x6b\x8f\xd2\x2a\xcf\x61\xba\x59\x42\x1d\x7a\x25\x73\x04\x0a\x1c\xc8\xb4\x5b\x30\x12\x1c\x94\x0f\x21\x22\x19\x98\x86\xe1\xfd\xcf\xc5\xf2\x06\xa6\xb0\x59\xdd\x05\x14\xa6\x1d\xe6\xf2\x68\x73\x98\xa0\x61\x3c\xd7\x20\x05\x64\xf2\x08\xbf\xea\x28\x3b\x08\x6d\x21\xb5\xef\xf9\x8b\xb5\xb7\x21\x74\xbb\x5e\x1a\x2e\x05\x14\xec\x04\x3b\x84\x12\x55\x2a\x55\x81\x89\xad\x11\x59\x19\xd0\xd6\xeb\x13\x17\x7b\x60\x75\x7d\x18\x09\xba\x64\x47\x01\xa9\x92\x85\xef\x3d\x64\x48\xc1\x3f\xc8\x67\x4c\xc0\x64\x5c\xc3\x91\x9d\x46\x10\x2b\x4c\x50\x18\xce\x72\x0d\x4c\x21\x68\x59\xa9\x18\x13\x7b\xa8\x09\x2c\xe4\x32\x66\x64\x5f\xc3\x05\xfa\x7b\xdf\xeb\x25\x66\x04\xb1\x14\x29\xdf\x57\xca\xee\x80\x94\xe7\xa8\x47\xc0\x85\x36\x4c\xc4\x08\xa5\x92\xb4\x34\x02\x34\xb1\x4f\xc9\x38\x4b\x80\x90\xd1\x58\xa3\xd6\x5c\x8a\x28\xdd\x78\x33\xae\x29\xc7\x2e\xf4\x7b\x14\x58\x83\x52\xac\xb1\x28\xa5\x62\xea\x74\xee\xb1\x48\x5c\x06\xba\x18\xf9\xb0\xcd\xd0\x2b\x51\x15\x4c\x50\xe1\xf4\xb7\x6b\x23\x95\x6d\x99\x5e\x1b\xd1\xa5\x2b\x6d\x57\xb5\x41\x96\x0c\x07\x3e\x66\xe2\x3c\xf0\x2c\x35\xa8\x5c\x80\x5d\xd0\x5d\x2d\x57\x9a\xfe\xeb\x6a\xf9\xac\xca\xbc\x58\x16\x05\xb9\xdc\x76\xb6\xad\xac\x5e\x21\x9d\x64\x05\x47\xae\xb3\x5e\x45\xbd\x8a\x98\xc2\x54\xa1\xad\x6c\xd7\x53\xc0\x40\xe0\x11\xea\x20\x3a\x64\x5a\x78\x3f\x5e\x0c\x6a\x0c\x4c\x00\x5f\x4a\xee\x62\xfc\xd6\xce\xde\x25\x85\x5a\xa3\xf9\x67\xed\xad\x0e\xa8\x14\x4f\xd0\xb9\x6c\x97\xc9\xd7\x5d\x1d\x43\xaa\xee\xe9\x43\x48\x39\xe0\x9a\xda\x54\xf7\x37\xda\x2d\xc7\x0c\x85\xd7\xe4\x96\x62\x35\xe4\xa8\x4b\x82\x2d\x59\xd6\x9c\xe6\xda\x01\x5c\x1c\x38\x83\x01\x47\x47\xbd\xa4\x72\xa3\x31\x4f\x47\x4d\xd7\xa2\x88\x73\x49\x99\xe9\x57\xee\x27\x5d\xa3\x4c\x1f\xc2\xa7\x4d\x70\xb3\x58\x2d\xe9\xba\x52\xf5\x96\x67\xc1\x8f\xe9\xfd\xdd\xb6\xf7\xb9\xe1\x21\x7d\x39\x72\xd9\xc7\xa4\x0f\xaa\xe1\xc8\xf3\x1c\xb8\x88\xf3\xaa\x8e\xd2\x90\x11\xca\xc3\x07\x56\xbc\x21\xe6\xb3\xf4\xc6\x45\xc2\x63\x66\x1c\x72\xcd\xa2\x2e\x02\xaf\x13\xa8\x75\x16\x8d\xeb\x38\x63\x34\x7e\xc6\x13\x01\xdf\xd4\x0b\xd6\x03\x9a\x20\x44\xc9\x9b\x70\x0a\xcf\x78\xea\x8d\x12\x77\xb1\xa6\xaa\x3e\x69\x08\xc3\x39\xb0\x3d\x0a\x33\x68\xa6\x54\xf2\xe5\x14\x8d\xed\x06\xb2\x12\xbc\x94\xb2\xe1\x74\x7c\x31\xa8\x04\xcb\x3b\x08\x18\xb6\x32\x88\xac\xf9\x9e\xfa\x2b\x1a\x57\x8a\xc6\x96\x77\x5d\x93\x4d\x03\x2e\x92\x52\x72\x07\x59\x69\xb4\xf5\x47\x76\xe8\x36\xf5\x51\x1f\xae\x2b\xa5\x50\x98\xfc\x04\x52\xe4\xa7\x96\xaf\x30\xf1\x8c\x84\xa3\x54\xcf\xae\x6b\xe6\x4c\x67\xfc\x5a\xaa\xd2\x11\x72\x8b\xad\xdd\x04\x99\x3e\x84\x70\x1b\x3c\xda\x69\xf6\x07\x35\x32\x0a\xf3\xe7\x04\xfe\x0f\x2e\x1e\xe6\xc1\x12\x7e\xae\x66\x8b\x1f\x8f\xc4\xf8\xdb\x79\x10\x06\x30\x5b\x5d\x87\x23\x98\xde\x85\x2b\xb8\x5f\xcf\xa6\xdb\x60\xd2\x49\x03\x14\x07\xff\xca\x2f\x28\xf6\x89\xd7\xad\xbe\x60\x6c\x97\x2f\xad\x8d\x66\x2a\xd8\xe1\xf8\xf7\xe9\xcc\xc8\x86\x38\xb1\x6b\x2d\xaf\x7f\xca\x51\x14\x5d\x27\xdc\xda\x4e\xa5\x0a\xd2\x55\x6e\xbb\xf1\xf5\x38\xe8\x82\x45\xc8\x39\xd3\x86\x62\xec\x91\xbd\xa4\xea\xb1\x73\x6b\xbf\x21\xa2\x8b\xde\xc9\xae\x61\x1b\x41\x81\x09\x37\xf5\x70\x5e\xaf\xbd\xed\x20\x57\x15\x95\x36\x2d\xb1\x70\x01\x52\x25\xa8\x3a\x62\x24\x62\x90\x39\xfa\xb5\xc8\x59\x2c\xa5\xc1\x89\x9b\xb3\x31\xa3\x5a\x68\x02\xd8\x57\x07\xba\xda\x69\xc3\x4d\x65\xef\x3a\x1c\x54\xaa\x05\x6f\x90\x94\x1c\xc1\xf4\xf7\x12\x5d\x97\x4a\x1e\x2c\x21\xca\xd6\x22\x4d\x69\x21\x0d\x14\xcc\xc4\x99\x67\x32\xa9\x91\x2e\xc0\x06\x2a\xfe\x75\xa2\x29\x2d\x34\x39\x13\xa6\x92\x41\xfd\xe3\x54\x60\xcf\x89\x89\xe7\x6f\x42\xa2\x4b\x88\x2e\x76\x15\x7c\xf1\x3a\x5e\x99\x5e\x5f\x07\x61\xf8\x74\x1b\x3c\x3e\x2d\x66\xd4\x3d\xa4\xec\xa6\x02\xb8\x3d\x9b\x72\x54\xad\xa4\x64\x71\x8c\x5a\x53\xdf\xf8\x70\x2f\xf8\x5f\x95\xbd\x10\xb2\x38\x23\x16\xa7\x14\x77\xd1\xa2\xfc\xbf\x4b\xda\x6f\xbd\x08\x83\xeb\x4d\xb0\xed\x39\xd3\x78\xb2\x6d\xa5\xad\xcb\x31\xe5\x87\xef\x05\x28\xfc\xab\x42\x6d\xf4\x7f\xc1\x93\x30\x5c\xac\x96\x4f\xdb\xd5\x6d\x60\x69\xf8\x33\x9c\xb9\x79\xbf\x59\x6c\x1f\xdb\xaf\xd6\xc7\xb5\xcb\xae\x1b\x5b\xcd\x74\x1f\x34\xf9\x11\x14\xcd\xae\xba\x4e\x2c\xe9\xe8\xaa\x2c\xa5\x32\x90\xe3\x9e\xc5\x27\x08\x67\xb7\xe4\xf2\x26\x70\x44\x73\x2e\x1d\xff\x67\x84\x33\x7d\xa5\x65\x1b\xcd\xa3\x6b\x41\x9c\x00\x72\x92\xdc\xae\x94\x2d\xca\x27\xfd\x4a\xfd\xd1\x6c\xf6\x86\x5b\x9d\x06\x6b\x07\x45\x94\xf0\x8e\x4a\x02\x59\x9a\x37\xcd\x91\x72\xa5\x4d\xcb\x6c\x4e\xc8\xc4\x2c\xce\xe8\xcf\x96\x73\xce\xdf\x47\x17\x16\xb1\xa7\x88\xbd\xde\x9b\xe7\xc8\x74\xe7\xcd\xa5\x85\x6b\x5f\x21\x1d\x1b\x36\xc0\x46\x36\xca\xcf\x35\x8b\x8b\x0f\x85\xcb\x8b\x59\x9e\xd7\x72\x87\xe5\xb9\x3c\xea\xfa\xc5\xd6\x1e\xdc\xa1\x73\xd4\x89\x23\x06\xb9\x14\x7b\x54\x1d\x7b\x9a\x8c\x89\x1e\xaa\xa7\x64\x9e\x03\xa1\x3a\x25\x61\x41\xe1\xa2\x60\x2f\xbc\xa8\x0a\x2a\xff\x2b\xc8\x64\xa5\x2e\x5b\xa3\x5a\x42\x81\x4c\x90\x61\x66\x06\xfd\xb3\xe5\xd7\x2a\x57\xdb\x4a\x86\x5b\x06\x25\xa5\xd8\x67\x19\x12\x6d\x35\x47\xd9\x07\x40\xef\x2e\x2e\x1f\x8f\xb2\xb2\x75\x61\xcd\xd6\x8f\x8e\x9a\x89\xdd\xb3\x88\x22\xd9\x24\xcd\x5d\xc0\x50\xbf\x18\x2a\xfb\x58\x61\x23\x5d\xda\x77\x95\x35\xc3\xcd\x08\x72\xfe\x4c\xaf\x8f\x89\x35\x63\x29\x4d\xa4\x6f\xde\xcb\x4d\x99\x40\x58\x95\xa8\x48\xa4\x7b\x7e\xca\x5d\xeb\xac\xd7\xde\x31\xe3\x71\x06\x47\x59\xe5\x09\x65\x51\xe6\x07\x6c\xc4\x86\x35\xc8\x94\xa8\x2b\x8e\x29\x31\x61\x47\x3d\xe1\xac\x98\x4c\xae\xae\xae\xbe\x7c\xf9\xf2\xf5\xeb\xd7\x6f\xdf\xbe\x4d\xe8\x2a\x9f\x5b\xf8\x28\xdd\x44\xff\xef\xae\xee\xd4\x68\x57\x53\xb4\xd1\x8d\x84\x26\x39\xaf\x27\xe2\xf0\x58\xe5\x1a\xae\x3c\x4a\xe1\x88\x94\x1b\x53\x49\x4e\xcc\x5b\x1f\x69\x21\xba\x56\xe9\x8f\xf7\xd7\x0d\xe7\x3c\x5b\x08\x60\x49\xc2\x4d\x5d\x71\x6e\x77\x33\x2e\x3a\x20\xb6\x93\x07\x1c\xb5\xd9\xa9\x09\x49\xb7\x67\x59\xfe\x8e\xee\xb4\xf2\x88\x0b\xaa\x1f\xe7\x1c\xdb\xd1\x9b\xb3\x79\xb5\xbc\x33\x81\x7e\x91\xa6\x0d\x66\x4f\xc1\xf2\xd7\x13\x11\x19\x4d\x80\xd5\xfd\x72\xdb\x9b\x45\x5b\x37\x79\x64\x25\x0c\x2c\x66\x67\x2f\x21\x97\xe7\x64\x80\xc9\xdf\xe2\x6e\x96\x7d\xc0\xee\xc9\xfe\x9f\xc1\x2d\xa7\x3f\x83\x3e\xde\x9b\xd7\xfe\x6f\x60\xad\xa7\x9b\xed\x62\x5b\x8b\xfa\x06\x90\x66\x7c\xc9\x94\xe1\x67\xb5\xf2\xdb\xc8\xdb\x79\x1f\xb4\x64\x26\x7b\x07\xab\x6e\x8e\x1f\x52\x01\xbe\xb0\xa2\xb4\x19\xfb\x3b\x4d\xf6\x6f\x9a\x84\x4c\x7e\x7e\xa7\x11\x9b\x16\xb4\x8f\x31\x57\xc0\xa9\x24\x2a\xa3\x6e\xe8\x2a\x6b\x87\x8e\x66\xcd\xb9\x47\x1f\x94\xce\xf7\xbe\x1f\x03\x1b\x37\xcb\xef\xbf\xe7\xf6\x60\xfe\xbf\x7f\xf0\xbd\xcd\xe9\x77\x76\xd4\x43\x9f\xb7\xf3\xef\xce\x48\x17\x92\x70\x0e\x37\xf7\x0b\x58\x33\xad\x8f\x52\x25\xb0\x56\xb2\x28\x8d\xb6\x97\xbe\xb9\x5f\x44\xe3\x1d\x23\x05\x54\x36\xdf\x4b\xf7\xbd\x19\xc1\x56\x1e\xed\x4e\x14\x28\x73\xfe\xfb\x42\x63\x7e\x1a\xde\xae\xa7\x61\x48\x15\xd1\x44\xd7\xfe\x16\x75\xae\xbb\x2f\xae\x2e\x69\xc0\xd2\x20\x2a\xa4\xc2\xe6\x87\x28\xdf\xfb\x57\x00\x00\x00\xff\xff\xab\x8a\x17\x9d\xba\x14\x00\x00")

func vaultedShell1Bytes() ([]byte, error) {
	return bindataRead(
		_vaultedShell1,
		"vaulted-shell.1",
	)
}

func vaultedShell1() (*asset, error) {
	bytes, err := vaultedShell1Bytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vaulted-shell.1", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vaultedUpgrade1 = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\x4d\x6e\xc3\x20\x10\x85\xf7\x9c\x62\x2e\x10\xa4\x1e\xa1\x4d\x23\xc5\x8b\x3a\x96\xf1\xa6\x12\x9b\x89\x67\x88\x23\xd9\x90\xf2\x93\xb6\xb7\xaf\xc0\xa1\x0b\x2f\xb2\x43\xbc\xf7\xbe\x4f\x20\x87\x23\xdc\x31\xcd\x91\x49\xef\xd2\xed\xe2\x91\x18\x5e\x84\x54\x47\x68\x5f\x3f\x0e\x42\x76\x9d\x78\xe4\x50\x63\xbd\xab\xc7\x00\x33\x5f\x70\xfc\x5d\x11\x01\xa2\x83\x38\x31\x8c\xc9\x7b\xb6\x71\xbd\x05\xe3\xfc\x82\xb1\x20\xd5\x67\x7b\xea\x54\xa3\x0a\x56\x9b\x37\x6d\xf6\x1b\xb8\x36\x7d\x69\xbe\x1f\xd4\xbe\x6f\xba\xa1\x39\xb5\xa5\xdc\x33\xd2\xd6\x86\x96\x60\x74\xf6\xce\x3e\xab\x27\x5e\x9e\xf9\x25\x0c\x13\x43\xc0\x85\xc5\x0d\x43\xf8\x76\x9e\xe0\x1a\x20\x05\xa6\xdc\x58\x77\x2b\x8c\xe9\x61\x90\x45\x9d\x77\xfc\x73\x8d\x30\x3a\xe2\xbc\xe1\xaf\x84\x73\x75\xd9\xb4\x9c\xd9\x83\x33\xff\x7f\x30\x61\xae\xa6\x99\xc0\xba\x08\x67\xae\x4f\x23\x29\xfe\x02\x00\x00\xff\xff\x93\xa5\x62\x52\x6e\x01\x00\x00")

func vaultedUpgrade1Bytes() ([]byte, error) {
	return bindataRead(
		_vaultedUpgrade1,
		"vaulted-upgrade.1",
	)
}

func vaultedUpgrade1() (*asset, error) {
	bytes, err := vaultedUpgrade1Bytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vaulted-upgrade.1", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vaulted1 = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x57\x7f\x6f\xdb\xbc\x11\xfe\xbb\xfc\x14\xb7\x6c\xe8\x9b\x00\x8d\xdc\x0e\x5b\x87\xb7\x03\x06\xb8\xb1\xdf\xc6\x5b\x53\x1b\x91\xdb\x75\xa8\x8a\x82\x16\x4f\x36\x51\x8a\xd4\x78\x94\x1d\xff\xb3\xcf\x3e\x1c\x29\x29\x8e\xe3\xa0\xc5\x1b\x20\x80\x45\xf1\x9e\xe7\x7e\x3c\x3c\x9e\xb2\xe5\x35\x6c\x65\x6b\x02\x2a\x78\x25\xb2\xfc\x1a\x3e\x8c\x6f\xa6\x22\x5b\x2c\x44\xbf\x5c\x5c\x02\x35\x72\x67\x81\x90\x48\x3b\x4b\x50\x79\x57\x03\x61\xd9\x7a\x34\x7b\xa0\xe0\x3c\x2a\x7e\xf6\x18\x28\x62\xe4\xff\xf9\x30\x5f\xe4\xb3\x3c\xe2\x14\xd5\xdb\xa2\xba\xea\xd0\x8a\xea\x16\xd2\x42\x71\x69\xd3\xc3\xcc\xca\x1a\x8b\x6a\x01\x5f\xfa\x17\xba\xa8\x6e\xbf\x8a\x6c\xe5\x7f\x87\x6d\x71\xc9\xc6\xfc\xea\xea\x66\x52\x54\x8b\xa7\x5c\x98\x5d\xcd\x6f\x6e\xc6\x1f\x26\x9d\xf1\x4c\xfa\x35\x65\x59\x56\x54\x8b\xaf\x31\x84\xc9\x34\xbf\xba\x9d\x2d\x96\xb3\xf9\x87\x08\x31\xab\xc0\xba\x23\x3b\x4d\xd0\x78\xb7\xd5\x0a\xd5\x0b\x78\xc4\x81\x3a\x6c\xd0\xa7\xdc\xd1\xbd\x43\x70\xae\xab\xc1\xec\x02\x9c\x17\xdd\x0e\x69\x41\xdb\x80\x5e\x96\x41\x6f\x11\x68\x83\xc6\x64\x07\xee\x77\xb1\x41\x2d\xf7\xb0\x42\x68\x09\x15\x04\x07\x4a\x57\x15\x7a\xb4\x41\xcb\x80\x10\x36\x78\x40\x15\x0b\x75\xec\x58\xf1\xfc\x17\x02\xb7\xb3\x20\xfd\xba\xad\xd1\x06\xca\x62\xc4\x5d\x60\xb9\xc8\x96\x3d\xa5\x54\x31\x92\x51\x87\x51\x7a\x94\x01\x0f\x57\x2c\xee\x8a\xea\x56\xcc\xee\xfd\x36\x7b\x48\xdb\x28\xfa\x52\x3a\x1b\xd0\x06\x70\x15\x48\xb0\xb8\x4b\x62\xcb\x20\x47\x04\x91\xbd\xbd\xed\xc5\x77\x29\x95\x82\xf3\x57\x17\xd9\x01\x7b\xd9\x3c\x20\x77\xcd\x9e\xb9\xae\x5c\xa3\x4f\x81\x47\x20\x90\x56\x01\xc9\x2d\x12\xe8\x00\x92\x0e\x49\x61\xa7\xc3\xa6\x5b\x68\x24\xd1\xce\x79\x75\xc2\x91\xb2\x39\xf6\x43\xb5\x35\x7b\x22\xfe\xed\xf5\xc9\xb0\x12\x7a\x70\x40\x41\xb9\x36\xd2\xfe\x33\x9f\x7f\x38\x81\xcd\x48\xc7\xe8\xa8\x74\x78\x9c\x43\x5e\x7d\x4c\x65\x01\xef\x34\x05\x6d\xd7\x4f\xe6\x91\x0d\x1f\x51\xd8\x2d\x33\xcc\xdb\xd0\xb4\x81\x92\xb2\xa0\x74\x75\x2d\xad\x62\x12\x19\xc0\x38\x39\x1c\x61\xa8\x9c\x1f\xc2\xd2\x36\xb8\xe8\x47\xd2\xe3\x09\x42\xbb\x7d\xc4\x77\x87\x25\x13\x4e\xef\xb0\x6c\x39\x65\x47\x8c\x5d\x21\xd6\x7a\x8b\xb6\xa3\x71\x1e\xbc\x33\x78\x0a\xff\x0e\xcb\x63\x02\xf6\x96\x09\x3e\x12\xa6\x5c\x0f\x07\xaa\x2b\x83\xb6\xfc\x23\x09\x31\x62\x63\x63\x64\x89\x4f\xd4\xee\x04\x6b\xcc\xc7\x31\x2b\x1d\xea\xd1\x68\x8a\x75\x7b\xaf\x29\x10\x48\x63\x92\x2d\x9d\x02\xa3\x63\xa8\xa8\xbf\x07\x67\xab\x57\x64\x94\xf8\x46\xda\x75\xa7\xb4\x7e\x3d\x15\xe5\x27\x04\x90\xa0\x8f\x09\x7d\x7d\x48\xa6\xd0\xe0\xc3\x83\xec\xb1\x76\x5b\x5e\x11\xb7\xf1\x17\x1d\x11\x9d\x0a\xcb\xd7\xc7\x2c\xb1\xce\x0c\x92\x07\xe9\xc3\xe9\x96\x96\xaa\x1f\x15\x75\x20\x37\x7e\x4e\x4a\xe0\xcc\xa3\xfa\xb1\xee\x12\xd8\x91\x03\x6d\xb3\xf6\x52\xc5\x38\x3e\xa6\x9f\x04\x06\xd7\xb2\xdc\x77\x61\x40\x87\x5a\xb6\x9e\x7b\x66\xc7\x59\x39\x5f\xcb\x53\xc9\xec\xf0\x3a\x9a\xfc\x1a\x7e\x9b\xbd\x9f\xc2\xfb\xf9\xd5\x98\x2f\x86\x74\xbf\x7d\x4a\xc0\xdc\x79\x4a\x59\x6e\xe2\x55\xd8\x5d\x94\xd2\x63\x7f\x3d\xca\xb2\x74\x5e\x71\x3e\x3b\x0f\x3e\x4f\xde\xc1\x5b\x49\x08\x13\xed\xb1\x0c\xce\xef\x21\x6f\xb0\xd4\x95\x2e\x65\xd0\xce\x42\xf1\xc5\xc8\xaf\x9b\x10\x1a\x7a\x33\x1a\x51\x90\x56\x49\xaf\x28\xab\x3c\xa2\x42\xfa\x1e\x5c\x93\x39\xbf\x1e\xad\x24\xa1\xd2\xfe\x92\x1a\x2c\x1f\x3c\x5c\x1a\xee\xc2\x21\xdb\x84\xda\x14\x5f\xbc\xfc\x5a\x3c\x1f\xae\x93\xe8\x73\xbc\x21\xb4\xc1\x07\x7e\x6a\xfb\x46\x64\xb7\xb9\xc8\x66\x0b\x28\xce\x57\x2d\xfc\xb9\x4b\xed\x9f\x3e\x4f\xde\x7d\x9b\x8c\x97\xe3\x6f\xd7\xf3\x9b\xe9\xa8\xcb\xd0\xa8\xbb\x4d\xcf\xc3\xbe\xd1\xa5\x34\x66\xdf\x09\xea\x7f\xa3\xcc\xb8\x52\x9a\x11\x6d\xa4\xc7\xc3\xed\x17\xf1\x56\x7e\x1a\x7e\x32\xbb\xcd\x7f\x08\x3f\x6a\xc9\x8f\x0e\x08\x78\x1f\x57\xe0\xe0\x6d\xbf\x9e\xf8\x6e\xa7\xf7\xc5\x3a\x88\x7a\xe7\x75\x08\x18\xbb\xc5\x8f\xc2\x2c\x9e\x67\xb0\x74\xb0\x92\xe5\xf7\xb6\x81\xbd\x6b\x3d\x7c\xea\x46\x24\x25\x83\x7c\x11\x7b\x40\x42\xd6\x56\x84\x8d\x26\x50\x43\x69\x69\xe3\x5a\xa3\xf8\xde\x66\x7b\x54\xd0\x36\x2c\xb7\xa8\x93\x24\x9b\xce\x54\x39\xb0\x2e\x80\xc5\xd4\xcb\x56\x08\x1e\x83\xd4\x16\xd5\x50\xbc\xce\x8c\xcb\x77\x68\xf9\xd3\x45\xbc\x1a\x5f\x5d\x4f\x7f\xba\x8a\x91\xe2\x71\xfd\x38\x9f\xf9\x35\x4c\x3f\xcf\x96\x70\x35\x9f\x4c\x79\x6c\xc8\x85\x34\x66\xe5\xee\xfe\x2e\xca\x15\x94\x2b\x51\x82\x79\xf4\x9f\x89\xe9\x9d\x0e\x50\x3a\x85\xcf\x6e\x50\x5a\x6d\xd7\xe2\xe5\xb3\xbc\x2d\x4b\x24\xca\xc4\xeb\xbf\x3c\x9b\xd9\xad\x34\x5a\xc1\xd5\xfb\x19\xb4\x24\xd7\x08\xe7\x84\x08\x35\x52\x7c\xe0\x6e\x51\x3b\x8f\xa0\x38\x2f\x86\x2e\x32\xf1\xfa\xaf\xcf\x96\x1b\xe4\x6a\xca\xd8\x73\x5a\xeb\xb1\x74\x5b\xf4\x72\x65\x90\xaf\x86\x95\xc1\xfa\xbe\xef\x6c\x07\x0d\x64\xe2\xf5\xaf\xcf\xc6\xe0\xf1\xbf\xad\x4e\x33\xac\xdf\xea\x12\xd3\x60\x87\x84\x36\x98\x3d\xb4\x56\x6e\xa5\x36\x11\xeb\x1c\xb3\x75\x06\x92\xbe\x73\x97\xbd\xc8\xc4\xdf\x7e\x1d\xdc\x1d\x1a\x35\xb5\x4d\x63\x74\xac\xd7\x32\x25\xe9\xdd\xc7\x19\x2c\xfa\xd7\x0b\xef\xea\x86\xe7\xe4\xc5\x42\x8c\x4d\xd8\xb8\x76\xbd\x19\x84\x14\x7c\x9c\x6d\x1c\xd4\xf2\x3b\x02\xb5\x1e\x59\x68\x50\x4a\x0b\x1e\x93\x9a\xba\xca\xc4\x4b\xae\x57\x7d\xe5\x35\x5a\x45\x2f\x04\xb9\x1a\x83\xae\xd3\xf8\xa3\x09\x28\x68\x63\x38\x96\xaa\x4b\x46\x70\x3c\x38\x82\x64\x9f\x8a\xcb\xd8\x2e\xee\x3d\x6f\xa2\x6b\x19\xfc\x16\x1b\xb2\x26\xe1\x51\x92\xb3\x2f\x06\xf7\xd8\x8f\x55\xbc\x41\x2b\xbd\x6e\x7d\x92\x68\xc4\xb3\x7d\x52\x40\xd7\x8d\x41\x1e\x2b\x63\x17\xcb\x7a\xdb\x5f\x48\x0c\x3b\x6c\xc0\xb5\x4f\x4d\x4e\x13\xc7\xbc\x5e\x23\x83\xed\x36\x7c\x12\xe3\x04\xcb\x21\x7e\x1a\x7f\x7c\xbf\x9c\x4e\xbe\x8d\xf3\x7f\x2d\xc6\x79\xce\xc1\x6e\xa5\xd7\x31\x0e\x8e\x0d\x43\x3a\x12\x0b\xa7\x6d\xbc\xa9\x9e\x34\x0b\x2e\x5d\x9d\x3c\x8e\x44\x73\x2e\x7e\x1a\x7c\x06\x77\x69\x88\x60\xa7\x8d\x11\xa5\xe4\xb8\x86\xba\xa4\x30\x13\x42\x1a\x23\x22\x04\xa5\x8e\x9d\x76\xa4\xf4\xc5\x97\x2d\xa1\x67\xa5\x8a\x3e\xb7\x94\xc1\x32\x1a\x79\x0a\xd0\x48\x2f\x6b\x0c\xe8\x1f\x8c\x2d\x6c\x77\xe0\x62\xfa\xb8\x88\x80\x78\x17\x04\x27\xcd\xaa\xa1\x29\xd0\x86\x27\xf8\xce\x8a\xd9\x12\xfe\xe9\x22\xf0\x26\x1b\x5b\x5d\x1a\x2a\x06\xaf\xee\xdb\x5e\x1a\x5d\x7b\x3d\x79\x0c\xad\xe7\xfb\x0b\x28\x1d\xcc\x78\x5e\xe1\xfc\xe5\x45\x06\x33\x1e\x9b\x2a\xa9\x0d\x8b\x33\x2d\x5b\x67\x8b\xcb\x97\x17\x42\x53\x67\xc9\xdf\x43\x0f\x86\x17\x6d\x9b\x36\x0a\x52\xae\x9c\x0f\x7d\x2f\xeb\xb3\xab\x93\x26\xfa\xf0\x7a\x7d\xf0\x84\x20\x6b\x83\x44\x66\x9f\x4e\xef\x30\x93\x74\x71\x8a\x87\x71\x52\x77\x3e\xbb\x90\x68\x53\x5c\x76\x1b\xb9\x6d\x25\xce\xb9\x85\x5a\x96\xf3\xfc\x05\x07\x17\xcd\x61\xdc\x34\x06\xf3\xd2\xeb\x26\x3c\x95\xc0\x4e\xf8\xfc\xcd\xf5\x26\xc2\xc4\xee\x6a\x2b\xf1\xc7\x3f\xc4\xbb\x66\xa5\xed\x88\x07\x61\x47\x92\x22\x90\x10\xce\x82\x6f\xe3\x47\xd6\x56\x00\x00\xe8\x0a\x0c\xda\x75\xd8\xc4\xc1\xd3\xaf\xb7\xf0\x0f\x78\x19\x2b\x13\x5f\xf3\x1f\x61\x18\xda\x1c\xe7\x21\x60\x0d\xaf\xfa\xed\x71\x17\x1a\xc2\xa7\xb6\x9f\xf5\x2d\xe6\xcd\x59\xda\x6b\x15\xe8\x4a\x88\x7e\x6b\xe5\x9d\x0d\xb5\xa3\xf0\x4d\x72\x83\xea\xa6\x8c\xe0\x80\xbf\xa1\x99\xe5\x5c\xdb\xca\xc5\xfe\x7a\xde\x48\xee\x95\xee\xde\x06\x0e\x6c\x2e\x2e\x22\x66\xe0\xf9\xeb\x10\xea\x24\xc1\xe0\xad\xd2\xd4\x18\xb9\x07\xa5\xa5\x71\xeb\xc1\xf1\xd4\x95\x75\x30\x08\x67\x9d\x1e\xce\xd2\xa2\x2e\x63\xe2\xdb\x88\x1d\x57\x36\x5a\x29\xb4\x20\x2d\xed\xd0\x83\xc2\xaa\xfb\xe4\x8b\x8f\x67\x67\x62\xe0\xe2\x13\x33\x48\x91\x43\xf3\x48\xad\x09\x43\x5a\xd8\x75\xc1\x3f\x7c\x6b\x45\x56\xe9\x78\x9d\xfd\x3f\x00\x00\xff\xff\xcd\x29\x77\x60\x0b\x11\x00\x00")

func vaulted1Bytes() ([]byte, error) {
	return bindataRead(
		_vaulted1,
		"vaulted.1",
	)
}

func vaulted1() (*asset, error) {
	bytes, err := vaulted1Bytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vaulted.1", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"vaulted-add.1":     vaultedAdd1,
	"vaulted-cp.1":      vaultedCp1,
	"vaulted-dump.1":    vaultedDump1,
	"vaulted-edit.1":    vaultedEdit1,
	"vaulted-env.1":     vaultedEnv1,
	"vaulted-exec.1":    vaultedExec1,
	"vaulted-load.1":    vaultedLoad1,
	"vaulted-ls.1":      vaultedLs1,
	"vaulted-passwd.1":  vaultedPasswd1,
	"vaulted-rm.1":      vaultedRm1,
	"vaulted-shell.1":   vaultedShell1,
	"vaulted-upgrade.1": vaultedUpgrade1,
	"vaulted.1":         vaulted1,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"vaulted-add.1":     &bintree{vaultedAdd1, map[string]*bintree{}},
	"vaulted-cp.1":      &bintree{vaultedCp1, map[string]*bintree{}},
	"vaulted-dump.1":    &bintree{vaultedDump1, map[string]*bintree{}},
	"vaulted-edit.1":    &bintree{vaultedEdit1, map[string]*bintree{}},
	"vaulted-env.1":     &bintree{vaultedEnv1, map[string]*bintree{}},
	"vaulted-exec.1":    &bintree{vaultedExec1, map[string]*bintree{}},
	"vaulted-load.1":    &bintree{vaultedLoad1, map[string]*bintree{}},
	"vaulted-ls.1":      &bintree{vaultedLs1, map[string]*bintree{}},
	"vaulted-passwd.1":  &bintree{vaultedPasswd1, map[string]*bintree{}},
	"vaulted-rm.1":      &bintree{vaultedRm1, map[string]*bintree{}},
	"vaulted-shell.1":   &bintree{vaultedShell1, map[string]*bintree{}},
	"vaulted-upgrade.1": &bintree{vaultedUpgrade1, map[string]*bintree{}},
	"vaulted.1":         &bintree{vaulted1, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
