// Code generated by go-bindata.
// sources:
// doc/man/vaulted-add.1
// doc/man/vaulted-cp.1
// doc/man/vaulted-dump.1
// doc/man/vaulted-edit.1
// doc/man/vaulted-env.1
// doc/man/vaulted-exec.1
// doc/man/vaulted-load.1
// doc/man/vaulted-ls.1
// doc/man/vaulted-passwd.1
// doc/man/vaulted-rm.1
// doc/man/vaulted-shell.1
// doc/man/vaulted-upgrade.1
// doc/man/vaulted.1
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _vaultedAdd1 = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\x41\x4e\xc3\x30\x10\x45\xf7\x39\xc5\x3f\x00\x8d\xc4\x11\xa0\x54\x4a\x16\xa4\x56\x5d\x16\x48\xde\x0c\xf1\x18\x2c\xb5\xe3\x92\x4c\x1d\x71\x7b\x14\xb7\x20\x14\xa1\xae\xdf\x9b\x37\xfa\xf5\xbe\x41\xa6\xf3\x41\xd9\xbb\x15\x79\x8f\xfb\xaa\xb6\x0d\xba\x87\xe7\x4d\x55\x1b\x53\x5d\x19\x66\xe4\x56\x88\xa2\x3c\x50\xaf\x31\xf3\xe1\x0b\xfd\xc0\xa4\x3c\x42\x3f\x18\x7d\x12\x65\x51\xa4\x00\x82\xf0\x74\xa9\x96\x98\x7d\xed\xb6\xc6\xb6\xb6\x04\x5d\x78\x74\x61\xfd\x27\xeb\xc2\x0e\x2e\xb4\x42\x47\x76\xc1\xfc\xe3\x5c\xbe\x2c\xb5\xb7\x61\xa1\x09\x4f\x4b\xc7\x36\x78\xda\xd8\xf5\xae\x35\xfb\x76\xdb\x95\xb4\x3d\xd1\x24\x23\x48\x7e\xa7\x64\xc6\x31\x79\x46\x48\x03\xd8\x47\x8d\xf2\x7e\x63\x50\x5d\x2a\x2f\xa7\x24\xf8\x3c\x47\x9d\xed\xbb\xa2\xcf\xc6\xcf\x49\x1c\x31\x52\x66\x0f\x4d\x85\x5d\x2f\xbf\x03\x00\x00\xff\xff\xb4\x37\x77\xb9\x6c\x01\x00\x00")

func vaultedAdd1Bytes() ([]byte, error) {
	return bindataRead(
		_vaultedAdd1,
		"vaulted-add.1",
	)
}

func vaultedAdd1() (*asset, error) {
	bytes, err := vaultedAdd1Bytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vaulted-add.1", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vaultedCp1 = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x90\xc1\x6a\xeb\x30\x10\x45\xf7\xfe\x8a\xbb\x7a\xab\xc4\xf0\x3e\x21\x4d\x0c\x31\xb4\x8e\x89\xd2\x86\x82\xa0\x28\xf6\x08\x0b\x1c\xc9\x95\x14\x9b\xfc\x7d\x91\xa2\x24\x14\xda\x2e\xda\x9d\xf1\x5c\xdd\x73\x66\xf2\xdd\x1a\xa3\x38\xf5\x9e\x5a\x3e\x6f\x06\xfc\xcf\x72\xb6\x46\xb5\x78\x2a\xb2\xbc\xae\xb3\x34\x42\x33\x80\xcf\xd1\x98\x41\x91\x83\xef\x08\x8d\xd1\x9e\xb4\x87\x91\x10\x97\x02\x08\xdd\xc2\x89\x91\x1c\x94\x87\x70\x10\xd0\x34\xa5\xd9\xa4\x7c\x97\x7e\x0c\xc2\xb9\xc9\xd8\x36\x82\xd8\x6b\xb5\xa9\x59\xc9\x22\x8c\xcb\x07\x2e\x97\x77\x24\x97\x5b\x70\x59\x9a\xbe\xe5\xb2\x0e\x5f\x9a\x26\x2e\xeb\xaf\xb2\x66\x38\x7f\x9b\x66\x6b\xac\x0a\xb6\xdc\x96\xf5\xae\xdc\x54\xf1\xf5\x32\xd9\x2b\x1d\x97\xb9\x85\x93\xad\x72\x68\x2c\x89\xd0\x6c\x2c\x2c\x0d\xbd\x68\xa8\xc5\xe1\x7c\x5b\x5b\x5a\x73\xbc\xd3\xf8\xbf\x3c\xd6\x96\x32\xd5\x05\xb7\x97\xc5\xf3\xe3\xae\x58\xbd\xd5\x0b\xc6\xf6\x9b\xed\x2a\xf8\x91\x1e\x95\x35\xfa\x18\x2a\x46\x61\x95\x38\xf4\x14\x68\x8e\xfc\x2c\x5c\x6d\x52\x7d\x8f\x03\xe1\xe4\xa8\x0d\x27\xf4\x1d\x65\xd7\x7b\x41\x1a\x7b\x47\xce\x60\x7c\x47\x76\x52\x8e\x22\xf3\x96\xba\x56\x58\x7a\x3f\x91\x0b\x2b\x8c\x4a\xc4\x88\xf7\xe7\x1f\x34\xab\x62\xff\x17\xd5\xec\x93\x44\x52\xbd\x1c\xf5\xb7\xaa\x1f\x01\x00\x00\xff\xff\xac\xf1\xb5\x97\x9b\x02\x00\x00")

func vaultedCp1Bytes() ([]byte, error) {
	return bindataRead(
		_vaultedCp1,
		"vaulted-cp.1",
	)
}

func vaultedCp1() (*asset, error) {
	bytes, err := vaultedCp1Bytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vaulted-cp.1", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vaultedDump1 = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\xcd\x41\x8a\x83\x30\x14\xc6\xf1\x7d\x4e\xf1\x5d\xc0\xc0\x1c\x61\x46\x05\x33\x30\x1a\x8c\x9b\x81\x6c\x42\xcd\xa3\x42\x93\x88\xbe\xb4\xd7\x2f\xa6\x5d\x94\x76\xf9\xf8\x78\xbf\xbf\x9c\x3a\x5c\x5d\xbe\xb0\x9f\x6d\x35\xe7\xb0\xe2\x4b\x48\xd3\xa1\xff\xfe\x6b\x85\xd4\x5a\x3c\x47\x94\xcd\x56\xb8\x6d\x0b\xfb\x1d\x7c\xf6\x38\xa5\xc8\x3e\x32\x12\xc1\x3d\x10\x70\xc2\xce\x73\xca\x0c\xb7\xe3\xd7\x0c\x7d\xc1\xcc\x7f\x3f\x68\xa3\x4c\x01\x2d\xfd\x58\xaa\x5f\x59\x4b\x23\x2c\xa9\xe8\x82\xb7\xa4\xcb\x47\xd3\x9a\x7a\x54\x7a\x52\x87\xa0\xb5\x68\x72\x58\x3f\xa2\xc7\xf9\x9e\x5d\x62\xc9\x82\xd2\x16\x1c\x4b\x71\x0f\x00\x00\xff\xff\xbe\x1d\xa8\x5d\xe0\x00\x00\x00")

func vaultedDump1Bytes() ([]byte, error) {
	return bindataRead(
		_vaultedDump1,
		"vaulted-dump.1",
	)
}

func vaultedDump1() (*asset, error) {
	bytes, err := vaultedDump1Bytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vaulted-dump.1", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vaultedEdit1 = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x56\xdb\x6e\xdb\x48\x0c\x7d\xd7\x57\xf0\x69\xdb\x02\x8e\x16\xdd\x3f\x70\x93\xb4\x36\x9a\x8b\x61\x39\x2d\x0a\x08\x58\xd0\x1a\xca\x9a\x76\x34\xa3\x9d\x8b\x1c\xff\xfd\x82\xd4\x25\x76\x1a\x60\xf7\x55\x43\x9e\x39\x3c\x3c\xe4\x28\xdf\xad\xa0\xc7\x64\x22\xa9\xf2\x8a\x94\x8e\xf0\x31\xcb\x8b\x15\x3c\x2c\xef\x6f\xb3\x7c\xb3\xc9\xc6\x43\x90\xb3\xf2\x0a\xb4\x8d\xe4\xb1\x8a\xba\x27\x73\x92\xaf\x01\x62\x43\x50\x39\x1b\xc9\x46\x70\x35\xa0\x05\x7a\xd6\x21\x6a\x7b\x18\xb0\x05\xb1\xf8\xf1\xf0\xb8\x29\xd6\x85\xa0\x96\xf5\xa7\xb2\xbe\x3e\xc7\x2e\xeb\x2d\x94\xf5\xda\x62\x4b\x65\xbd\x91\x8c\x9b\xdb\xe2\x7a\xbb\xde\xec\xd6\x8f\x0f\x92\x54\x74\x78\xb4\x81\xe1\x27\x12\x3d\x41\xeb\x14\x41\xed\xbc\x80\xf0\x8d\xff\x45\x26\x17\xac\xa7\xce\x59\xf8\x27\xe9\xc8\x07\x0b\x49\xb2\x74\x9c\x13\x75\x80\x80\x3d\x29\x88\x4e\xce\xa6\xcc\x62\x05\x5f\xee\x1e\x3f\x2d\xef\xb2\x7c\x5b\x64\xf9\x7a\x03\xe5\xfb\x7d\x82\xbf\xb2\x82\xb5\x29\x1a\x77\xfc\x73\xa5\x15\x41\x41\x95\xa7\x18\xb2\x7c\xef\xb3\x9d\x3b\x1c\x0c\x05\x38\x36\x14\x1b\xf2\x10\xe4\x0c\x7a\x34\x89\x02\xa0\x27\x50\x3a\x74\x06\x4f\xa4\x38\xc6\x42\xaf\xe9\x38\xd3\x05\x45\x11\xb5\x09\x99\xb6\xc2\x44\xfa\xd0\x92\x4d\x39\xec\x1a\xa6\x49\x52\x02\x33\x3e\x18\xb7\x47\x03\x68\x15\x60\x5d\x53\x35\x76\x86\x6c\xd4\x9e\x26\x7d\xb2\x40\x21\x68\x67\x25\x4c\x07\xf0\x14\x28\x72\x99\x8d\x56\x8a\x2c\x10\x56\x0d\x44\xdd\xd2\x4b\xdd\x43\x98\xeb\xc8\x92\x62\xa9\xb3\x11\x2a\xcf\xf2\xed\xad\x68\xb2\xfc\x5e\xc0\xd7\xdb\x1f\xaf\x45\xf9\xc5\xa2\x7c\xa5\x93\xc8\x70\x8f\x16\x0f\x14\x60\x59\x55\x14\x02\x7f\x86\xf5\x8d\xb0\x18\xc4\x3a\x3f\xa8\x3c\x29\xa6\x8d\x26\xe4\xe7\x80\x2d\x03\xde\x7f\x5e\x5e\x00\xde\x7f\x5e\xc2\xfb\x36\x99\xa8\xcb\xab\x1a\xab\xe8\x3c\x60\x8a\x0d\xe7\x57\x18\xb5\xb3\x1f\x60\xb9\x7d\x00\xc7\xca\x7b\x8d\x06\x6c\x6a\xf7\xe4\x73\x58\xd7\x40\x16\xf7\x86\xd4\x22\x4b\x81\x3c\x1c\xb5\x31\xb0\x27\xe8\xbc\x6b\xbb\x38\x74\x9f\xd8\x6a\x72\x47\xc5\x4e\x93\x06\xa1\x30\x7d\x71\x94\x1c\x73\x72\xe6\xa9\x45\xcd\x01\x3c\x1f\x62\xcb\x17\x15\x55\xf2\x42\x27\x17\xf6\xeb\x1a\x4e\x2e\x49\xfb\x93\x40\x15\xbb\xe2\xbc\xee\x05\x1c\x1b\x5d\x35\xe0\xaa\x2a\xf9\x00\xfb\x13\x28\xaa\x05\xe7\x7d\xa0\xa1\x39\xef\xe2\xbb\xcc\x75\x0c\x09\x7b\x32\xee\x28\xf7\x8d\x76\xf9\xb0\x10\xf8\x36\x85\x08\x0d\xf6\x24\x14\xc7\x6a\xb9\x2c\x6d\x7b\xf7\x8b\x00\xed\x09\xd6\xcb\x7b\xa8\xd0\xbc\x92\xda\xb3\xd4\x5b\x67\x48\xd8\x8a\x80\x35\x78\x67\x88\xb3\xf7\x04\x18\x42\x6a\x27\xc7\xbe\x16\x24\xfb\x2e\x5f\x39\x84\x3f\xa2\x24\x0e\x53\xd6\xe2\xb3\x6e\x53\x3b\xab\x01\x68\x8c\x3b\x92\xe2\x0a\xd9\x46\x3a\xc0\x47\x68\x5c\x1a\xfa\x73\x72\xc9\x67\x73\x28\x7b\xdc\x13\x72\x43\x62\x83\x76\x0c\x1c\x28\x4c\x73\x70\x7e\xd7\x9c\x38\x36\x36\x43\xf5\x33\x85\xb1\xb1\xe3\x2d\xe7\x35\xcb\x82\x2b\xd2\x3e\x44\x1d\x53\x24\x38\xea\xd8\x40\xa4\xb6\x73\x1e\xfd\x85\x2b\xdf\x1c\x6c\x26\x2b\x35\x9c\x05\x4a\x83\xc3\x0c\xa9\x06\x4c\x64\xba\x2c\xe8\x0c\x9e\x9d\x5b\x1e\x3e\x3b\x0f\xad\xe3\xcd\x30\x74\x13\x1c\x0f\xbf\x0e\xec\x4c\x56\x7a\x01\x93\x07\x94\xab\x52\x4b\x36\x0e\x75\xf2\x70\x5e\xae\xd6\xd0\x90\x31\x65\xbd\x2d\xff\xb8\xa8\xf4\x86\x2b\xbd\x21\x43\x71\xe8\xef\x96\x5a\xd7\xf3\x36\x32\x46\x2a\x98\xee\x0d\xd1\x79\x52\x30\xee\x9e\x69\x0b\x8e\x53\x5f\x14\x2b\x9e\xfa\xe2\xf5\xd8\x23\x83\x2f\x95\xba\x98\x52\x0e\xfe\x45\xa7\x00\xc6\xa1\x12\xc8\x71\xb5\xe2\x81\x17\xee\x60\x23\x98\x96\x53\x88\xe8\xe3\xa5\x21\x0f\x8c\xfa\x85\x2c\x79\x8c\x34\x6f\x95\xe9\x43\x00\x04\x75\xb2\xd8\xea\x6a\x01\xda\x96\x57\x2d\xb5\xce\x9f\xa6\x6b\xd9\x2f\x71\x9e\xef\xb1\xaa\x8b\xf1\x9c\x5d\x36\xee\x55\x16\x1b\x7d\xd4\x55\x32\xe8\xcd\x09\x52\xa0\x3a\x99\x81\x67\xe5\x52\x67\xa6\x5e\x4e\x37\x04\x7d\xb0\xc3\x52\x7c\xe1\xdc\x33\xe7\x15\x86\x46\x5f\x3b\xdf\xc1\x37\x99\xdf\x62\x08\x84\xa7\xed\xdd\x60\xa3\x86\x7e\x8b\x79\xda\xde\xb1\x47\x2b\x67\x6b\x7d\x48\x9e\x7e\xbb\x65\x20\xc9\x61\x15\x5a\x99\x47\x9b\xe1\x3e\x38\xc3\xbe\xed\x30\x36\x0b\x5e\x78\xba\x96\x02\xbf\x2d\x9f\xee\x76\x7f\x2f\x6f\x6e\xb6\x40\xb6\xd7\xde\x59\xb6\x0c\xf4\xe8\x35\x2f\x04\x18\x9e\x91\x61\x61\xe0\x29\xeb\xbc\xeb\xf9\x11\x13\xc7\x21\x2b\xeb\xc9\xa0\x6c\x34\x46\x66\x62\x3f\xdd\x68\x89\x78\x74\x17\x15\xa7\xb7\x2a\x7e\xe2\xe5\xba\xf1\xda\x56\xba\x9b\x86\xe7\x7a\x2a\x6d\x78\xa4\x64\xff\x76\x73\xc8\xd0\x2f\xf1\xcb\xdc\x34\x7d\x18\xdf\x9f\xa1\x09\xa3\x22\xd9\xa8\x08\x17\x31\xef\xb7\xc6\xbb\x74\x68\x5e\xf3\xb8\x20\x7a\xcb\x44\x6f\x9f\x3b\x17\x08\xe8\x39\x92\xb7\x68\x04\x53\xfc\xf8\xe6\x7c\x3b\x0f\xd6\xc9\x5b\x49\x43\x9e\xfc\x5b\xbc\x4e\x7d\x69\x9a\x82\x5e\x63\xc6\xd5\x15\xc5\xaa\xac\xd7\xcb\xa7\xdd\xaa\xac\x37\xc5\xe3\xf5\xd7\xb7\xfb\x30\x4e\x44\xe0\xff\x1c\xce\x16\xf1\xc6\x91\xf8\x7f\xe3\x0b\xa1\xa3\x4a\xd7\x9a\xd4\xec\x98\xda\xbb\x56\x60\x8d\x0e\xe3\xf0\xfe\x1b\x00\x00\xff\xff\xca\x47\x6c\x4e\xf5\x09\x00\x00")

func vaultedEdit1Bytes() ([]byte, error) {
	return bindataRead(
		_vaultedEdit1,
		"vaulted-edit.1",
	)
}

func vaultedEdit1() (*asset, error) {
	bytes, err := vaultedEdit1Bytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vaulted-edit.1", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vaultedEnv1 = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x59\x6d\x6f\xdb\xb8\xb2\xfe\x1c\xfe\x8a\x01\x2e\x70\x9b\x00\x8e\x8a\x74\xf7\x53\xee\xed\x05\x7c\x13\xb7\xf1\x69\x6b\x1b\x96\xb3\x45\x51\x2f\x0a\x5a\x1a\x59\xdc\x50\xa4\x96\xa4\xec\x18\x45\xff\xfb\xc1\x90\xd4\x8b\x13\x67\x5f\x0e\x70\x0e\x50\x14\x88\x24\x3e\x33\x9c\x79\x66\xe6\x21\x9d\xac\xee\x60\xc7\x1b\xe9\x30\x5f\x5f\xa2\xda\xc1\x15\x4b\xd2\x3b\x98\x8d\x3f\x4d\x58\xb2\x58\xb0\xf8\x0e\xe8\xd5\xfa\x12\x74\xe3\xea\xc6\x59\xb0\x25\x4a\x09\x99\xae\x2a\xae\x72\x0b\xae\xe4\x0e\xa4\xe6\x39\x58\xcc\x0c\x3a\x0b\x85\x36\xc0\x03\x32\x08\xe5\x34\xb8\x12\xc3\x2a\x8f\x9f\x7e\x99\xcd\x17\xe9\x34\xf5\x36\xd6\xc5\xff\xaf\x8b\x9b\x81\xa5\x75\xb1\x84\x75\x31\x55\xbc\xc2\x75\xb1\x80\xaf\xeb\x62\x3a\x5f\xac\xa6\xf3\x59\xba\x2e\x16\xbf\xb2\x64\x63\x9e\xaf\x81\xf5\xe5\xfa\x92\x5b\xdb\xd0\x1a\xbf\x9c\x1b\x75\x72\x75\x7a\x07\xb7\x93\xf4\x66\x39\xf5\x0f\xbd\x07\x37\x06\xb9\x43\x0b\x1c\x2c\x5a\x2b\xb4\x82\xc6\x0a\xb5\x85\x1d\x37\x82\x6f\x24\xbd\x51\xb9\xdf\xc2\xf8\x73\x0a\x0f\x78\x00\xeb\xb4\xc1\x1c\x84\xf2\x4f\xbd\x1f\x09\xac\x4a\x64\x06\x6d\x23\x1d\x2d\x46\xb5\x13\x46\xab\x0a\x95\x1b\x02\x19\x84\xc6\x62\x0e\x4e\xc3\x16\x15\x1a\xee\xf0\x64\x38\xf7\x42\x4a\xe6\x63\xea\x43\x17\xe3\xea\x63\xc9\xc3\x82\xc4\xfb\xbe\x6a\x03\x0b\xc2\x02\x6f\x9c\xce\xd1\x61\x46\x51\x29\x8c\xae\xfc\xe2\x10\xac\xf4\x6e\xf2\xf1\x23\xc5\xe6\x94\x63\x23\x10\xc5\x20\x47\xc2\x42\xa3\x1e\x94\xde\x2b\xd0\x06\x1a\x65\x6b\xcc\x44\x21\x30\x1f\x45\x30\x5b\x12\x52\xa6\xab\x9a\x3b\xb1\x91\xd8\x3b\x4f\x1b\xc4\x4a\x38\x87\x79\x12\xd3\x3b\x9d\x69\x87\xd7\x94\x8c\x34\xbd\xa3\xf0\x85\xaf\xc4\x56\xf9\x20\xee\x4b\x54\x6d\x2c\x28\x70\x31\x07\x14\x07\x61\x61\xcf\x0f\x14\x59\x61\x69\x7f\x79\x83\xe0\x34\x23\x47\x85\xe2\x1b\x21\x85\x3b\x50\x24\x9d\xe1\xd9\x83\xf7\x5f\x8a\x02\x9d\xa8\x10\x74\xdc\x4f\x00\x1b\xc1\xbe\x14\x59\x09\x15\x72\x0f\x8c\xde\x15\xbe\x45\xe5\xd8\x5e\x37\x32\x07\x7c\x14\x96\xb8\x9a\x63\x21\x94\x70\x28\x0f\x89\xe7\x4a\xe4\x0e\x4b\x56\x2d\x53\x5f\x60\x1a\x4b\x63\x90\x02\x7e\xd1\x48\x09\xe3\xe5\x8c\x02\x68\x4b\x6d\x1c\x10\x9f\x5b\xb7\x8c\x96\xb4\x13\x08\x38\x09\xa4\x88\x84\x3e\x4e\xd3\xfb\x4f\xd3\xd9\x7b\x18\xc3\x72\xfe\x71\x42\x21\xdb\xa0\xd4\x7b\x5f\x4f\x39\x3a\x2e\xa4\x05\xad\xa0\xd4\x7b\xf8\x25\x92\x3f\x40\x58\x0f\x69\x13\x96\x4c\x17\x6c\x49\xe8\xfe\x79\xed\x88\xcd\x15\x3f\xc0\x06\xa1\x46\x53\x68\x53\x51\xc8\x85\x2b\x75\xe3\x20\xe4\xf5\x40\x51\x6f\xab\xd5\x69\xb0\x35\xdf\x2b\x4f\x9f\x84\x7d\xa6\xe4\x08\xb5\xd3\x0f\xc4\xd9\x98\x90\x11\x64\x06\x73\x54\x4e\x70\x19\x72\x69\x75\x63\xb2\x96\x73\x39\x16\x1e\x4a\xea\x8c\x3b\x9f\xc9\x73\x4c\xb6\x09\x1b\x10\x6f\x04\x99\x56\x85\xd8\x36\xc6\x7f\x01\x85\x90\x68\x47\x20\x94\x75\x5c\x65\x08\xb5\xd1\xf4\x68\x04\xe8\xb2\xe4\x22\x79\x12\x7d\xda\x05\x77\x14\xfd\xff\xf5\x7c\x1d\x15\xc2\x96\x23\x5b\x8e\x7e\xb3\x5a\x8d\xd6\xc5\x34\x6b\xac\xd3\xd5\xba\x58\xfc\x5f\xcc\xca\x01\xf6\x54\x54\x61\x21\xed\xb1\xb1\x38\x6a\x1d\xb5\xf4\xa0\xe5\x35\x4a\x49\xc0\x81\x2e\x54\x84\x83\xa2\x0a\x4f\x59\x28\xb7\x1e\x8b\xe8\x1e\x02\x1f\x40\xc8\x9b\x75\xb1\x1c\xf9\xae\x31\xac\x17\x0f\x47\x5f\xc7\x46\x0a\xb6\x11\x8e\xca\xcf\xe7\x17\x77\x5c\x36\x21\x1c\x7d\xcb\x6c\x0b\x2f\x18\x4d\x22\x1c\xed\xf3\x18\x90\x3e\xae\x78\x4d\xfc\x22\x18\xf4\x7b\xda\x10\xff\x89\xd4\xc0\x5b\x77\x1b\x8b\x45\x23\x41\x28\xa6\x5d\x89\x86\x02\xbd\x35\xbc\xaa\x9e\x74\x2c\x3b\x8a\xc9\x26\x03\x4a\x13\x46\x26\x9b\x1c\xbd\x1d\x6e\x0c\x3f\x04\x4b\xb1\xad\xb1\x60\xcc\x60\xa5\x77\xbe\xee\xa7\x0b\x36\x0d\x4c\x8f\x76\xad\x33\xbe\xb6\x9b\xba\x96\x02\x73\xc8\x35\x5a\x0f\x5c\x71\x97\x95\xa0\x55\x57\x1a\xb5\xc1\xf5\xa5\xaf\x42\xe2\x93\x5f\x6d\x99\x08\x0d\x91\x8c\x08\xe5\xd0\xd4\x06\x03\xf7\x81\x83\xc3\x47\x07\x0e\xab\x5a\x52\x2f\x0d\x9d\x7b\xab\x25\x57\xdb\x57\x16\x36\x8d\x90\x6e\x7d\x29\x54\xcc\x0d\x7d\xfc\xba\xfd\x98\x42\x58\xf3\xec\x81\x6f\xd1\x77\x6f\x8a\x8e\xe9\xa1\x5a\x8b\x9d\xd3\x9c\xb6\xd1\x10\x0f\x84\x2b\xc9\x59\x56\x08\x94\xb9\xa5\x74\x4a\xef\xaf\xaf\xd6\x04\xc6\xd2\x6a\xe0\x3b\x2e\xa4\xcf\x2e\x55\x08\x8f\xa9\x33\x58\x4b\x9e\x79\xd3\x45\xa3\xb2\xc0\x7e\x6d\x60\x6b\x9b\x0d\x48\xf1\x80\x6c\x83\x25\xdf\x09\x1a\xa0\x2a\xef\x96\xb5\x19\xef\xd6\x04\x82\xf2\x2c\xc3\xda\x59\x5f\xbd\xb2\x41\xbf\x84\xf8\x40\x4f\x28\x46\xee\xc0\x6a\x43\x11\xcb\xe1\x1f\xe9\x7c\x16\xd3\x10\x12\x34\xa6\xb1\x06\xf8\xc8\xab\x9a\x2a\xcd\xe9\x96\x95\xbf\x35\xd6\x75\xd3\x6e\x58\xe9\x9e\x48\x1e\x27\xe4\x65\x44\x01\xf3\x71\x08\x05\xd7\x85\xee\x1a\x9e\x16\x2b\xbc\xfa\xfe\x1d\x68\x13\x90\x8c\x3f\xa7\x37\x06\x73\x0b\x3f\x7e\xbc\x5a\x17\x4b\x96\xac\x52\xc6\xa5\xdc\xe8\xc7\xff\x61\xd9\x06\xfc\x3f\x26\x41\x82\xfc\x4b\xff\x27\xec\x1d\x25\x01\x66\xbc\xc2\xb3\xd5\xa1\xc6\x33\x1a\x37\x96\xdd\x84\x89\x74\x16\xb6\x7c\xb6\x6a\x7b\x72\x9c\x54\x40\x09\xeb\x46\x71\xe8\x70\xad\x14\x8a\x6c\x27\x22\x69\xdf\x41\x2d\x6b\x9d\x3e\x0b\x0c\xf0\x70\x14\x1e\x4a\x80\xb5\x5e\x13\x50\x16\xe3\xc8\x11\x5a\x75\x2b\x92\xe9\x6d\xeb\xc3\xf4\xb6\xfb\xe8\x78\x6d\xff\x71\xea\x07\x7d\xbb\x20\xfc\xf5\xa7\x8b\x56\xfa\x01\x55\xbf\x26\x48\x18\x47\x0f\x5f\x58\x0a\xe7\x7e\xe3\x81\xc6\x58\xd5\xda\x70\x73\x18\xa6\xfa\x82\xa5\xe8\xce\x2a\x5e\x7f\x0d\xa8\xbf\x46\xf0\x71\xdb\x64\x4e\xab\x9b\xbe\xe7\x70\xa9\xd5\xb6\xab\x13\x61\x62\x57\x62\xf7\xca\xa2\x3b\xfb\xda\xe3\x59\x29\x32\x3c\x6a\x26\x70\xd4\x4c\x7a\x19\x33\x34\xb9\xc1\x42\x1b\x6f\xc9\x4b\x06\x85\xfb\xd6\x40\xb2\x9a\x3c\x99\x16\x4a\xaf\x2f\xa3\x0c\x20\xba\xdd\x0a\x1b\xcd\x94\xd8\xc9\x0e\xad\x7c\xfb\x39\x15\x0a\x5f\x53\xe6\x78\xa2\x06\xad\x57\xa3\xa9\xb8\x22\x77\x86\x9f\x9f\x90\x86\xbd\xea\xa3\x01\x87\x3c\x3f\x3d\xa6\x33\xae\x8e\xc7\x34\x2f\x1c\x9a\x30\x8e\xc3\x88\x0e\x93\x27\xb4\xb8\x5e\xd9\x1d\x09\x12\xd6\xf2\xbb\x8d\x7d\x10\x21\x03\xd9\x71\xd0\x0d\xec\x85\x2d\x07\xfa\xe3\x49\xc4\x0c\x16\x06\xfd\xc8\x62\xa9\xe3\xc6\x01\xf7\x11\x6e\xc5\xb1\x47\xa6\x07\x2f\xc7\x8b\x43\xc4\x20\x75\xfe\x58\x8b\x10\xe3\xe7\x76\xb6\x21\x29\xa4\xa2\xda\x3f\x16\x6c\xbe\x43\x63\x44\x1c\x36\xe1\x71\xe4\x84\x8f\x21\x51\x7a\xfc\x39\x8d\xaa\xd0\x92\x2c\x1e\x7c\x18\x88\x5d\xa2\x62\x03\x49\x79\xd2\xd1\x90\x04\x2f\x70\x78\xbb\x9a\x84\x2f\x01\x9c\xef\x04\x87\x13\x8e\x8e\x06\x49\x15\xce\xa2\x2c\x46\x10\x2b\x0c\x55\x26\x35\x65\x66\xa8\x73\x5e\xd9\x88\x32\xfe\x9c\x7e\x5b\x4e\xde\x4f\xe7\x33\xda\xae\x36\x83\xc7\xb7\x93\x77\xe3\xfb\x8f\xab\xc1\xeb\xae\x14\x2e\x46\x21\xfb\x98\x0f\x41\xe3\x58\x1e\x8e\xe4\x53\x46\x7a\xf5\x71\xd2\x0a\x7b\xb1\x84\x85\xca\x45\x46\x03\xd0\x0f\xfb\xcc\x89\x5d\x1b\xdd\x20\x89\xa9\x97\x7c\x98\x7c\xf1\xea\xfe\x2b\xd1\x0d\x95\xfb\xf5\x1a\xfe\x0b\xce\x3f\xdf\x4d\x66\xf0\x69\x7e\x3b\x7d\xf7\x85\x54\xec\xea\x6e\x92\x4e\xe0\x76\x7e\x93\x8e\x60\xfc\x31\x9d\xc3\xfd\xe2\x76\xbc\x9a\x5c\xf7\x47\xce\xa0\x6a\xae\x92\x2a\x27\x77\x59\x7f\x14\x7d\xc4\xcc\x3f\xbe\xf0\x56\x5a\xad\xdb\x58\xb4\xf0\xd7\xcb\x6e\x78\xc6\xea\x28\xc0\x86\xab\x42\x29\xd1\x86\xd2\x55\x1a\x34\x40\x7f\x82\x7b\x2a\x72\x5b\xc9\x1a\x46\x86\xe4\xd6\x77\x66\x7f\x1a\xc9\x9b\x41\x17\xe9\xec\xb7\x05\x73\x3e\x58\xd9\x13\xab\x3b\xbd\xe6\x82\xb4\xec\x45\x3c\xcf\x9d\xac\xa9\x8a\x46\xf2\xa6\x6b\x22\xa0\x4d\x4e\x4a\xa5\x2d\x60\x22\xb0\x96\xf8\xfc\xc0\xb5\xc1\x8c\xd3\x8c\x6e\x03\x38\x54\xbc\xb6\xd9\x58\x27\x5c\xe3\xf7\x7a\x3a\xa8\x54\xe9\xec\x64\xf1\x84\x42\x18\x7e\x4b\x6d\xa5\x36\x7a\xe7\x0b\x57\x77\x16\xe9\xec\xd1\xe9\x3c\xe6\x4a\x6d\x31\xe8\x88\x48\xec\x36\x48\xc9\xf3\x44\x53\x5a\xe8\x3c\x90\x73\x93\xbf\x30\x70\xa8\x17\x0c\x9c\xb8\x66\xc9\x32\xa5\xb2\x86\xf5\xf9\xa6\x81\x37\xac\xe7\xff\xf8\xe6\x66\x92\xa6\xdf\x3e\x4c\xbe\x7c\x9b\xde\x7a\xd9\xb1\x31\x6c\xac\x40\xf8\xb5\x85\x40\xd3\xcd\xca\x7e\x4e\x26\x70\xaf\xc4\xef\xfe\xd0\x09\xc8\xb3\xd2\x8f\x36\x5d\x0c\xa2\x45\xf9\x7f\xb1\xb9\x3c\xf7\x22\x9d\xdc\x2c\x27\xab\x81\x33\xad\x27\xab\xee\x90\xdf\x69\x12\x2b\xb6\x0a\x0c\xfe\xde\xa0\x75\xf6\xdf\xe0\x49\x9a\x4e\xe7\xb3\x6f\xab\xf9\x87\x89\x6f\x17\xaf\xe1\xc8\xcd\xfb\xe5\x74\xf5\xa5\x7b\xeb\x7d\x5c\x84\xec\xc6\x13\x7b\x9c\x42\x27\x4d\xfe\x11\x14\xf5\xd8\xc8\x93\x9c\x79\x1a\xd6\x35\x1d\x8f\x25\x6e\x79\x76\x80\xf4\xf6\x03\xb9\xbc\x9c\x84\x56\x73\x7c\x20\xfe\x0f\xb6\x9c\xf1\x93\x33\x7a\x3b\x9d\xbb\x13\x19\xa0\xf0\x27\x28\x4f\x66\x8f\xf2\xca\x3e\x39\xd5\xd2\x14\x79\x7a\x55\x15\x8b\xdd\x5f\x0b\x74\x50\xd4\x14\x5e\x98\xe7\x51\x81\x1e\x97\x47\x21\x8c\x75\x5d\x6f\x0b\x23\x37\xe3\x59\x79\x74\x87\xd5\xd2\x39\xf4\xa2\x73\x8f\x38\x38\xe9\xb3\xc1\x15\xdb\x9e\xdb\xde\x9b\x0b\x0f\xe7\x2b\xd0\x1d\xf5\x43\xdb\x29\xcb\x56\xa3\x84\x72\x09\xf1\xa1\x70\xb1\x8c\xd3\x21\xd5\x0f\x66\x2e\xa5\xde\xdb\xe1\x25\x4c\x1c\xe2\xde\xd1\x3c\x5e\x11\x92\x4c\x44\xd3\xf7\x4f\x57\x72\x35\x40\x65\x46\x93\x64\xe7\x52\xc6\xb3\x38\x81\xc2\x79\xc5\x1f\x45\xd5\x54\x54\x00\x57\x50\xea\xc6\x5c\x74\x46\xad\xee\x2e\x79\xb8\x3b\xe9\x9f\x27\x60\xa7\xb1\x7c\x31\xf9\x1b\xa3\x20\x72\x86\x7d\x86\xe4\x45\xec\x52\x9d\x0a\x3d\x6a\x57\x5f\x74\xe3\x79\xe1\xcd\xc6\xcb\x94\xd8\x8b\xc3\x75\x0f\x45\xb2\x4d\x5a\xd8\x80\xa3\x8a\xf1\xa3\x29\xf3\xb7\x8e\x47\x97\x45\xcc\x9b\x11\x6e\xe4\x4f\x82\x60\xf5\xb5\x37\xe3\x9b\x9a\x2a\xd8\xe9\xfb\x4e\x48\x9b\x1a\x0d\x89\x49\x96\x14\x22\x94\xce\x62\xc1\xe2\x0d\x86\xbf\xdc\x32\x68\xb5\xdc\x79\x36\x77\xe6\xb8\x51\x91\x6f\xdc\xa8\x6b\xbe\xb7\xd7\x82\x57\xd7\xd7\x57\x57\x57\x6f\xde\xbc\xf9\xe9\xa7\x9f\x7e\xfe\xf9\xe7\x6b\xda\xc8\xeb\x0e\x7e\x5d\x2c\xd7\xff\x1d\x36\x1e\x54\x53\xcf\x28\xfa\x70\x14\x2f\x21\x42\x6a\x9e\x4e\xc4\xd3\x63\x55\x58\xb8\x62\x94\xc0\x11\x29\x0c\x6e\x72\x49\x9d\x37\x2e\xe9\x20\xfa\x42\x19\x8e\xf7\xa7\xe5\x16\x3c\x9b\x2a\xe0\x79\x2e\x5c\xe4\x5b\xf8\xba\x1d\x17\x3d\x10\xdf\xe8\x1d\x8e\xba\xdc\xc4\x86\x64\xbb\xb5\x5c\xbe\xa0\x8f\xbc\xf8\x15\x2a\x9c\x6a\xc9\x08\xdf\xe8\xc6\x75\xea\xfa\x85\x09\xf4\x0b\x69\xaf\xc9\xed\xb7\xc9\xec\x97\x6f\xd4\xc8\x68\x02\xcc\xef\x67\xab\xc1\x2c\x5a\x85\xc9\xa3\x1b\xe5\x60\x7a\x7b\xa4\xd8\x43\x9e\xf3\x13\x9d\xfc\x39\xee\x72\x36\x04\xec\x6f\x21\xff\x35\xb8\xd9\xf8\xd3\x64\x88\xf7\xec\x0e\xf3\x6f\x60\x2d\xc6\xcb\xd5\x74\x15\xc5\x67\x0b\x48\x33\xbe\xe6\xc6\x89\x23\xae\xfc\x6d\xe4\xd5\xdd\x10\xb4\xe6\xae\x7c\x01\x2b\x16\xc7\x3b\x6d\xda\x9b\x8f\xbf\x54\x62\x7f\x52\x22\x64\xf0\xf5\x0b\x65\xd8\x16\x60\xf8\x29\x24\xde\x89\x51\x1b\x3b\xfe\x85\x61\x83\xbe\x92\xba\x3b\x23\xa1\xe0\xfb\xf7\x24\x45\xf7\xe3\xc7\xb1\x87\x7f\x40\xa5\xb7\x43\xcf\x4e\x7c\xb8\x9c\xbd\xfd\x7b\x1b\x39\xc9\x87\xb7\x7f\xf0\xbe\xcb\xf1\x5b\xbe\xb7\xa7\x5e\xaf\xee\xde\x06\x23\x7d\x90\xd2\x3b\x78\x7f\x3f\x85\x05\xb7\x76\xaf\x4d\x0e\x0b\xa3\xab\xda\x59\xbf\xe9\xf7\xf7\xd3\xf5\xe5\x86\x93\x22\xaa\xdb\xf7\x75\x78\xdf\x0e\x64\x2f\x97\x36\x87\xee\x2e\xa0\x9f\xa3\xad\xf9\x71\xfa\x61\x31\x4e\x53\x62\x48\x1b\x6f\x7f\xe3\x7e\xac\xc3\xcf\xaf\x2e\xfc\x05\x9b\x36\x50\x69\x83\xed\x75\x7b\xc2\xfe\x19\x00\x00\xff\xff\x5e\x84\x9c\x6a\x24\x1b\x00\x00")

func vaultedEnv1Bytes() ([]byte, error) {
	return bindataRead(
		_vaultedEnv1,
		"vaulted-env.1",
	)
}

func vaultedEnv1() (*asset, error) {
	bytes, err := vaultedEnv1Bytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vaulted-env.1", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vaultedExec1 = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x58\x5f\x6f\xe3\x38\x0e\x7f\xf7\xa7\x20\x70\xc0\x6e\x07\x48\x5c\x74\x76\x9f\x0a\xcc\x43\xae\xc9\xb6\x41\x67\xd2\x20\x4e\x67\x50\xac\x17\x85\x62\xd3\xb1\x50\x5b\xf2\x4a\x72\xd2\x7c\xfb\x03\x29\xdb\x71\x52\xcf\xbf\x3d\xdc\x3d\xb5\x91\xa5\x1f\x29\xfe\xf9\x91\x54\xb8\xbe\x83\x9d\xa8\x0b\x87\x69\x3c\xc6\x57\x4c\xe0\x2a\x08\xa3\x3b\x58\x4c\x3e\xcd\x82\x70\xb9\x0c\x9a\x8f\xc0\xdf\xe2\x31\xff\xad\x1d\x5a\xb0\x39\x16\x05\x24\xba\x2c\x85\x4a\x2d\xec\xa5\xcb\x41\xc0\x56\xee\x50\x79\x44\xd0\x06\x8c\x2e\x90\xf1\xa2\xa7\xc5\xc3\x32\x9a\x47\x8c\x19\x67\xff\x8e\xb3\x9b\x3e\x72\x9c\xad\xe0\xcf\x38\x9b\x3f\x2c\xd7\xf3\x87\x45\x14\x67\xcb\xbf\x20\xce\xe6\x4a\x94\x18\x67\x4b\xfa\xb7\x15\x14\x67\xcb\x20\xdc\x98\x7f\x82\x41\x07\xe2\x71\x3c\xa6\x8d\xff\x05\x62\x0b\x23\xac\xad\x09\x9a\xc1\x84\x51\xdf\x17\x12\xdd\xc1\x74\x16\xdd\xac\xe6\x8c\xc7\xa6\x98\xfd\xb4\x39\x43\xa0\x33\xb4\x73\x23\x15\x5a\x70\x39\x42\x86\xc2\xd5\x06\x6d\x90\x19\x5d\xc2\xe9\x45\x18\x98\xb4\x61\x48\xda\xdd\x08\x69\x5c\x29\xb5\x02\x9d\x9d\x1d\x8a\xc7\x2a\xce\x56\xf1\x2f\x21\x2b\xdd\xdc\x3f\x08\xd7\xad\xef\xbe\x72\xff\x20\xaa\x30\x91\x99\x6c\xd5\xaa\x8b\x02\x26\xab\x05\xa9\x4e\xbf\x49\x7d\x20\x7f\x90\xc0\x6e\xc1\x69\xf0\x50\x21\x44\x88\x24\x60\x12\x45\x8f\x9f\xe6\x8b\x5b\x98\xc0\xea\xe1\xe3\x8c\x0c\xbb\xc1\x42\xef\x21\xd3\x06\x52\x74\x42\x16\x16\xb4\x82\x5c\xef\xe1\x73\xa3\xb1\x87\xb0\x0c\x69\xc3\x20\x9c\x2f\x83\x15\xa1\xf3\x7a\xc5\xb7\x2c\xc5\x01\x36\x08\x15\x9a\x4c\x9b\x12\x53\xb6\x88\xae\x1d\x58\xd6\xfa\x20\xd5\x16\x44\x63\x6c\xa7\xc1\x56\x62\xaf\x80\x2c\x1a\x06\x5f\x72\x54\x20\xd5\x4e\xbf\x60\x0a\x2e\x97\x16\xf6\xe2\x30\x82\xc4\x60\x8a\xca\x49\x51\x58\x10\x06\xc1\xea\xda\x24\x98\xf2\x21\x48\x31\x63\xa8\x42\x27\x82\xe4\x5b\xb8\xc0\x70\x1b\x06\xa8\x76\xd2\x68\x55\xa2\x72\x23\x48\xb4\xca\xe4\xb6\x36\xbc\x03\x32\x59\xa0\x1d\x81\x54\xd6\x09\x95\x20\x54\x46\xd3\xd2\x08\xd0\x25\xe1\xbb\xf0\xcc\x01\x4a\xc7\x63\x8b\xd6\x4a\x4d\xce\x0a\xa6\xd2\x8a\x4d\xd1\x98\x7e\x8b\x0a\x1b\x50\xb2\x35\x96\x95\x36\xc2\x1c\x4e\x35\x56\xa9\xf7\xc0\xd1\x46\x21\xac\x73\x0c\x2a\x34\xa5\x50\xa8\xdc\xc9\x76\xeb\xb4\xc1\x14\xa4\x62\x01\xde\x4c\x74\xe9\xda\xf2\xaa\x75\x28\xd2\x61\xc3\x27\x42\x9d\x1a\x5e\x64\x0e\x8d\x37\xb0\x37\xba\x8f\xfe\xda\xd2\x2f\x42\x1f\x88\xb2\xa0\x0d\xdb\x2e\x8e\x39\xb2\x7a\x81\x74\xd0\x35\xec\xa5\xcd\x7b\x11\x75\x66\x31\x83\x99\x41\x9b\x13\x5a\xe4\x84\x71\x20\x40\xe1\x1e\x1a\x23\x7a\x64\x5a\xf8\xba\xbd\x04\x34\x18\x4c\x11\x95\xf4\x36\x3e\x97\x63\x6d\x1e\x8f\x1b\x17\x60\x3c\x7e\xc1\x03\x89\xbc\x6d\x16\x18\xa8\xd0\x22\x05\xa1\x60\x15\x4d\xe0\x05\x0f\x20\x95\xd3\x7c\x15\xb6\x0a\xe5\xad\x57\xea\x57\x0b\x51\x74\x07\x62\x8b\xca\x0d\x8a\xa9\x8c\x7e\x3d\xc4\x63\xde\x40\x52\x66\xaf\x95\xb6\x4d\x14\xe0\xab\x43\xa3\x44\x71\x84\x80\x61\x29\x83\xc8\x56\x6e\xc9\x3d\xf1\xb8\x36\x44\x20\xc1\x4d\x13\xab\x2d\xb8\x4a\x2b\x2d\x3d\x64\x6d\x91\x93\x93\xe4\xd0\x6d\x9a\xa3\x21\xdc\xd4\xc6\xa0\x72\xc5\x01\xb4\x2a\x0e\x5d\xb8\x63\x1a\x38\x0d\x7b\x6d\x5e\xbc\xd1\xef\x84\xcd\xe5\x8d\x36\x95\xcf\xe7\x0e\xdb\x7e\x47\x31\x8b\xc6\x0e\xa8\xc6\xeb\x9c\xc3\x72\xab\x5a\xa5\x2c\x6b\xb8\xa7\x4c\xee\xa9\x08\xd2\x02\x2a\x4a\x9c\xd4\x93\xdd\xe4\x4b\x04\xf7\xb3\x27\x66\xe7\x3f\x29\xe6\x50\xb9\xbf\xae\xe1\x5f\x70\xf1\xe5\x6e\xb6\x80\x4f\x0f\xd3\xf9\x1f\x4f\x44\x4e\xeb\xbb\x59\x34\x83\xe9\xc3\x4d\x34\x82\xc9\xc7\xe8\x01\x1e\x97\xd3\xc9\x7a\x76\xdd\xab\xa7\x6a\x17\x5e\x85\x25\xf9\x39\x0d\xba\x55\x8e\x75\x5e\x7f\xc7\x42\x5a\x06\xab\xc9\x6b\x3f\x9e\x7a\x4e\xb7\x49\x8e\xc7\x78\x0d\xfa\xa7\x7c\x3a\xd1\x7d\xa2\x75\xc4\x99\x0d\x06\x6d\x5d\x38\x5a\x3e\xa7\xae\xa3\x67\x08\xb9\x10\xd6\x91\xb9\x02\x92\x97\xd6\x3d\x26\xe9\xe4\xb7\x49\x73\xd1\x3b\xb9\x93\xe2\xac\x90\x60\x2a\x29\x2a\x89\xbb\x96\xcb\x60\x3d\x98\x57\x65\x6d\x1d\xf1\x43\x43\x24\xa0\x4d\x8a\xe6\x98\xc4\x94\x73\x54\xf7\x9a\xd6\x61\xbe\xd0\x0e\xaf\x7d\x4d\x48\x04\x05\x5e\x6b\xc0\x86\x70\xbd\xe3\xeb\x8d\x75\xd2\xd5\x7c\xd7\x61\xa3\x52\xe0\x05\x83\x99\x3e\xf2\x65\xb2\xb7\x97\xa8\xa5\x32\x7a\x27\x53\xae\x57\xad\x44\xaa\x28\x4a\x3b\x28\x85\x4b\xf2\xc0\xe5\xda\x22\x5d\x40\x0c\xa4\xd7\xb9\xa3\xc9\x2d\xc4\xf2\xa9\x30\x29\xf4\x4a\x02\xec\x84\x91\x9e\xc7\x29\x5c\x7b\x4a\x5c\x07\xe1\x2a\x22\x7e\x85\xf8\x62\x53\xc3\xfb\x26\x2b\x26\x5f\xa2\xe7\xc9\xcd\xcd\x2c\x8a\x9e\xef\x67\x4f\xcf\xf3\x29\xe5\x03\xf5\x33\x13\x05\x92\xcf\x66\x12\x0d\x83\xd1\xad\x44\x92\xa0\xb5\x94\x01\x21\x3c\x2a\xf9\x77\xcd\x17\x42\x91\xe4\x60\xd1\x91\x8b\x8f\xd6\x22\xff\x0f\xd9\x27\x1c\xd6\x22\x9a\xdd\xac\x66\xeb\x9e\x32\xad\x26\x14\x79\x16\x13\x83\xce\xfb\xb8\x4d\x4c\x83\x7f\xd7\x68\x9d\xfd\x1f\x68\x12\x45\xf3\x87\xc5\xf3\xfa\xe1\x7e\xb6\xa0\x0e\xe5\x12\x4e\xd4\x7c\x5c\xcd\xd7\x4f\xdd\x57\xd6\x71\xe9\xbd\x9b\x7a\x82\x68\x2a\xd1\xa0\xc8\x6f\x41\x11\x9b\x34\x71\xc2\x0c\x67\xeb\xaa\xd2\xc6\x41\x81\x5b\x91\x1c\x20\x9a\xde\x93\xca\xab\x99\x67\x9a\xd3\x36\xe7\xff\xc7\x38\x93\xb3\xc6\xab\x2d\xd0\xb6\xe9\xde\x52\x40\xe9\x72\x34\x3e\x96\x19\xe6\x57\x7b\xd6\xaa\x5c\xec\xa4\x38\x6f\x99\x9b\x5c\xa7\x76\xef\x08\x45\x9c\xf0\x95\x92\x0e\xba\x72\x6f\xb2\x23\x93\xc6\xba\x8e\xda\x7c\xd5\x4d\x44\x92\xd3\xbf\x1d\xe9\xb4\xd1\xec\xa9\xe8\x82\x11\x7b\xed\x5b\xd0\xeb\xfb\xf7\xc2\x1e\xb5\x79\xc7\x70\x75\x5b\x1f\x8f\x74\xd8\x02\x3b\xdd\xb6\x29\x3e\x5b\xbc\x7d\x78\x8c\x49\x44\x51\x10\x8b\x4a\x0b\xa2\x28\xf4\xde\x43\xf4\x0e\x6e\xd0\x2b\x9a\xb2\x7a\x02\x0a\xad\xb6\x68\x8e\xf4\xe9\x72\xa1\x7a\xa8\x81\xd1\xd4\xf1\x8b\xa2\x80\xbd\x2c\x0a\x0f\x0a\x17\xa5\x78\x95\x65\x5d\x52\xfc\x5f\x41\xae\x6b\xf3\xae\x13\x6a\x35\x94\x28\x14\x09\x16\x6e\x50\x3f\x8e\xbf\xae\xcd\xe2\x5c\x72\x92\x29\x94\xda\x9a\x3e\xcd\x48\xdb\x91\x14\x77\xab\xbd\xbb\x78\x7f\x3c\xe9\x9a\xe3\x82\xc5\x36\x1d\x72\x43\xc5\xbe\x87\x27\x4b\xb6\x4e\xf3\x17\x70\x94\x30\x8e\xe2\x3e\x31\xc8\x75\xa9\x3f\x04\xb0\x18\xe9\x46\x50\xc8\x17\x6a\x95\xaf\x59\x0c\x73\x9a\xca\xce\xe7\xcc\x36\x4a\x20\xaa\x2b\x34\xdc\x50\xd2\x62\x3b\xbb\x04\x61\x26\x7d\x1e\x2d\x97\xc1\x3e\x97\x49\x0e\x7b\x5d\x17\x29\x79\x54\x17\x3b\x6c\xdb\x1c\x16\x2e\x8c\x6a\xa2\x4f\x18\x75\x2d\xf6\xf6\x5a\x8a\xf2\xfa\xfa\xea\xea\xea\xfd\xfb\xf7\xbf\xfd\xf6\xdb\xef\xbf\xff\x7e\x4d\xd7\xba\xec\x64\xb5\xb3\xcf\x72\xe9\x3b\xff\x5e\x7c\xd1\x46\x5f\x1f\x5a\x47\x9d\x97\xc7\xe1\x1a\x2b\x2d\x5c\x05\xe4\xce\x11\x18\xdc\x0a\x93\x16\x44\xc3\xcd\x91\x0e\xe2\x98\x36\xfd\x5a\x7f\x9e\x7c\x5e\xb3\xb9\x02\x91\xa6\xd2\x35\xd1\xe7\x77\xb7\xb5\xe3\x08\x24\x36\x7a\x87\xa3\xce\x53\x0d\x3b\xd9\xee\xac\x28\x82\xe1\xf2\xc3\x8d\x99\x54\x14\x4b\x5e\x39\xb1\xa1\x61\xa9\x6d\xb7\xbf\x52\x8e\x3e\x4f\x1e\x3f\xae\x67\xd3\xe7\xd9\xe2\xf3\x33\xb1\x1a\x95\x83\x87\xc7\xc5\xba\x57\x98\xd6\xbe\x0c\xe9\x5a\x39\x98\x4f\x4f\x5a\x78\xef\xf4\x74\x80\xd6\xdf\xe2\xae\x16\x7d\xc0\xe3\xac\xf9\xcf\xe0\x16\x93\x4f\xb3\x3e\xde\x9b\x31\xf5\x27\xb0\x96\x93\xd5\x7a\x4e\x23\x73\x1f\x90\x0a\x7e\x25\x8c\x93\x27\xb1\xf2\xd3\xc8\xeb\xbb\x3e\x68\x25\x5c\xfe\x15\xac\x26\x39\xfe\xd0\x06\xf0\x55\x94\x15\x7b\xec\x07\x12\xee\x3b\x39\x42\x12\x2f\x7f\x24\x29\xdb\x74\x24\x82\x6e\x82\x39\xd3\x44\x71\x94\x19\xc7\x28\xdb\xa0\xa7\x5f\x77\xaa\xdd\x37\xc2\xe8\x43\x5f\xa9\x81\x8d\xab\xc5\x87\x9f\xba\xc3\x5b\x08\x8a\x85\x0f\xdf\xf8\xde\xf9\xf7\x83\xd8\xdb\xa1\xcf\xeb\xbb\x0f\x5e\xc8\xd1\x24\xd1\x1d\xcf\x21\xf7\xb3\x27\x88\xe6\xb7\x8b\xf9\xe2\xd6\x27\x71\xc6\xbd\x65\x2e\x76\x5d\x6b\x46\x65\xf9\xcd\x40\xd4\x3d\x09\x30\xf5\x4b\xdb\xef\xd7\x7b\x83\x57\xd0\x4c\x35\x23\x46\x25\xfa\xee\xf6\xb1\x07\x5a\x16\xe8\x55\x2d\x51\x3b\x4d\x09\x4e\xe5\xc3\x4f\x45\x54\x89\x78\x60\x0a\x44\x9a\xfa\x76\x8d\x6b\x4d\x33\x82\x52\x03\xd1\x6c\x80\xb7\x1b\x7c\x29\xa0\x66\x42\x6e\x55\x57\x0a\xb5\x42\xae\x65\x47\xa6\xf3\x93\x3c\x6f\x0d\x4e\x55\x30\xa8\x70\xcf\x4c\x25\x35\x8f\x01\xc7\x39\x9b\x7f\x29\xeb\x6f\xd3\x94\x40\xaf\x87\x41\x10\xc5\x5e\x1c\x6c\xb0\x13\x85\x4c\xbb\x06\x61\x70\x76\x19\x81\xd5\x5c\x9d\x41\xf8\x22\x7e\x6e\x6d\xa7\x5f\x50\x05\x06\x4b\x21\x95\x05\x46\xf4\x17\xbf\x3f\x1d\x1c\x39\x9f\x93\xba\x10\xa6\x38\x50\x57\x91\xd5\x85\xef\x1f\x9b\xd7\xb9\xe6\xb1\xa2\x9d\x8a\x7b\x8f\x32\x5c\xb3\x02\x36\x40\x37\xc5\x09\x2a\xdd\xdd\x93\xce\x08\xa4\x8a\xc7\x25\x96\xda\x1c\xf8\x34\xb5\x93\xc8\xcf\x4f\xad\xa9\xd9\x06\x6d\xef\xc6\xe6\x0e\xb4\xf2\xb5\xf7\x58\x25\xb2\x5e\xf7\xc5\xa1\xfa\x3c\x99\x4e\x57\xd4\x7d\x0d\xd1\x3e\xf7\x05\xe8\xba\xf0\x69\x87\x1e\x01\x06\x0b\xe1\xe4\xce\x73\x4e\xd0\x15\x1c\x1e\x05\x1b\x8b\x3c\xae\x3e\xb6\x0f\x41\xad\xbd\x7d\x01\x4e\x53\x83\xd6\x1e\xfb\x0a\x9e\xf8\x7c\xcc\x0f\xdb\xfe\x3c\xbc\xfd\x93\x9b\x36\x2f\xa3\xb6\x35\xa5\xb6\xb2\x6d\x40\xe3\x5f\x42\x56\x24\x1e\xf3\x61\xba\x5b\x26\x0b\xf4\x2f\x6f\xbe\x96\x1e\x28\xf8\x72\x5d\x22\xa4\xd2\x60\xe2\xc8\xa8\x1c\x99\x7d\xc3\x74\x03\xc1\x90\x65\x42\x78\xe4\xa1\xa0\xd7\xf3\x42\xa1\xb7\x52\x9d\xbc\xad\x8a\xaa\x32\xba\x32\x92\xfc\xe9\xbb\x5b\xdb\x7a\x48\x04\x56\x12\x0d\xc3\x5e\xb0\x33\x2b\x5d\xd5\x45\xdb\x25\x7d\xf3\x22\x61\xc7\xe4\xa5\x36\xd8\x7f\x01\xa5\xa3\x14\x5d\xfc\x08\xd4\x8f\x8a\x36\xd1\xb1\xac\x0a\x7d\xb0\x23\x0a\x9d\xc6\x5a\xb9\x73\x95\xbd\xbe\xbc\xdc\x4a\x97\xd7\x9b\x30\xd1\xe5\x65\x49\xd3\x57\x51\x88\xcb\xc1\x17\x25\xe2\xae\xdb\xc7\x39\x2c\x85\xb5\x7b\x6d\x52\x58\x1a\x5d\x56\xce\xb2\x56\xb7\x8f\xf3\x78\xbc\x11\x34\xd6\x55\xed\xf7\xca\x7f\x6f\x2f\xce\x33\xdf\xe6\x40\x71\xe5\x4e\x1f\xf8\x5a\xea\x9c\x44\xf7\xcb\x49\x14\x91\xb0\xa3\xb9\x23\xc4\xd3\xc7\x84\x8b\xab\x77\x6c\x91\x33\x3b\x84\xc1\x7f\x02\x00\x00\xff\xff\x0a\x78\xfe\xc0\xc5\x18\x00\x00")

func vaultedExec1Bytes() ([]byte, error) {
	return bindataRead(
		_vaultedExec1,
		"vaulted-exec.1",
	)
}

func vaultedExec1() (*asset, error) {
	bytes, err := vaultedExec1Bytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vaulted-exec.1", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vaultedLoad1 = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xce\x5f\x6a\x03\x21\x18\x04\xf0\x77\x4f\x31\x17\x88\xd0\x23\xb4\x69\x20\x16\xea\xca\x9a\x97\x82\x2f\xb2\x7e\x12\x61\xab\x41\xbf\xdd\x5e\xbf\x54\xfb\x8f\xbc\x0d\x0c\xc3\x6f\xe4\xe5\x8c\xdd\x6f\x2b\x53\x70\x87\xb5\xf8\x80\x07\x21\xed\x19\xfa\xf1\xf5\x24\xa4\x31\xe2\xbb\x44\xef\xdc\x01\x5b\xa3\x86\x17\x3b\x69\xdc\x6a\xd9\x53\xa0\x00\x2e\x68\x1c\x52\xfe\x0a\x4b\x25\xcf\x84\x52\x51\xe9\xb6\xfa\x85\xc0\x57\xc2\x52\x32\x53\x66\x94\x08\x3f\xb8\x8e\xd8\x37\x3d\x19\xab\x6c\x87\x5c\x7c\x72\xf1\xf8\x9f\x73\x71\x86\x8b\x2a\xfb\x77\x72\xd1\xf4\xc5\xf3\xc9\x1e\x67\x65\x2e\x6a\xd2\x7d\x34\x0f\xa4\xdd\x2b\x7f\x33\x7c\x24\xbe\x8e\xc3\x3f\xfd\xef\xf1\x3d\xf9\xf1\x5c\x8a\xcf\x00\x00\x00\xff\xff\x29\xac\xab\x44\x08\x01\x00\x00")

func vaultedLoad1Bytes() ([]byte, error) {
	return bindataRead(
		_vaultedLoad1,
		"vaulted-load.1",
	)
}

func vaultedLoad1() (*asset, error) {
	bytes, err := vaultedLoad1Bytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vaulted-load.1", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vaultedLs1 = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8d\x41\x0a\xc2\x30\x10\x45\xf7\x39\xc5\x3f\x40\x1b\xf0\x08\x5a\x0b\x2d\x68\x1b\x3a\xdd\x08\xd9\x14\x9a\x40\x60\x68\xc4\x99\x7a\x7e\x21\x0a\x82\xb8\xfd\xef\x3d\xbe\x9d\x3b\x3c\x97\x9d\x35\xac\xbe\x66\xc1\xc1\x58\xea\x30\x1c\xaf\xad\xb1\xce\x99\x0f\x02\x0b\x7c\x0d\x4e\xa2\x82\x85\xf9\x9d\x48\x71\xe9\x36\x8c\x8e\x7a\x2a\xbe\x8f\x27\x1f\x9b\x6f\xe5\xe3\xf4\x6f\x4f\xa2\x85\x50\x87\x73\x4b\xcd\xd4\xbb\xb9\x1f\x87\x62\x5e\x7e\x3e\x2a\xe4\x2d\xe0\x1e\x1e\xe0\xb4\x85\x0a\x9a\x21\xba\xe6\x5d\xad\x79\x05\x00\x00\xff\xff\x8d\xa8\x1b\x0a\xbc\x00\x00\x00")

func vaultedLs1Bytes() ([]byte, error) {
	return bindataRead(
		_vaultedLs1,
		"vaulted-ls.1",
	)
}

func vaultedLs1() (*asset, error) {
	bytes, err := vaultedLs1Bytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vaulted-ls.1", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vaultedPasswd1 = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x90\x5d\x6a\xeb\x30\x10\x85\xdf\xbd\x8a\x59\x40\x62\xb8\x4b\xc8\x4d\x0c\x31\xb4\x8e\xb0\xdc\x86\x82\xa0\x28\xd6\xa8\x16\xd8\x92\xd1\x8f\x4d\x77\x5f\x24\xbb\x69\x43\x69\x5f\xda\x57\xcd\x99\xef\x7c\x9a\xbc\x39\xc2\xc4\x43\xef\x51\xb0\xed\xc8\x9d\x9b\x05\xfc\xcb\x72\x7a\x84\x6a\x77\x5f\x64\x39\x21\xd9\x3a\x86\x75\xca\xb6\xd0\x76\x5c\xbf\xa0\x03\xdf\xe1\xf2\x6a\xac\x00\x23\x81\x2f\xa8\xb4\x4e\x9f\xaa\x13\xa1\x25\x4d\x08\x26\xff\x33\xb9\xbf\x05\x31\x59\x03\x93\xa5\xe6\x03\x32\x49\xbe\x8b\x19\xfb\x25\x48\x8f\x70\x28\xe8\xbe\x2e\x49\x53\x9e\xaa\xb4\xb8\x37\xda\xa3\xf6\xa0\x74\x72\xfa\x48\x2f\x42\xa0\x1c\x04\xed\x4d\x68\x3b\x14\x1b\x30\xba\x7f\xbd\x75\x57\x6e\xfd\x93\xc8\x13\xaf\x94\x2b\x27\xfa\x3c\xee\x1e\xee\x9a\xe2\xf0\x4c\x76\x94\x9e\x4f\xf5\x21\xfa\xa0\x9e\x94\x35\x7a\x88\xa5\x13\xb7\x8a\x5f\x7a\x8c\x14\x87\x7e\x03\xca\xc3\xac\xfa\x1e\x2e\x08\xc1\xa1\x00\x9e\x2e\x95\xb5\xc1\xda\x98\xbf\xb6\x4a\x63\x3f\xa9\x6e\xc0\xf8\x0e\xed\xac\x1c\xa6\xf2\xe0\xd0\x5e\x39\xa3\x35\xc3\x18\x8f\x12\x77\x22\xec\x1d\xf2\x83\x6f\x55\x9c\x7f\xe3\x9c\x45\xa2\xc6\xf9\xaf\x7d\xdf\x02\x00\x00\xff\xff\xf1\x83\xc8\xb9\x72\x02\x00\x00")

func vaultedPasswd1Bytes() ([]byte, error) {
	return bindataRead(
		_vaultedPasswd1,
		"vaulted-passwd.1",
	)
}

func vaultedPasswd1() (*asset, error) {
	bytes, err := vaultedPasswd1Bytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vaulted-passwd.1", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vaultedRm1 = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\xcd\x6a\xc4\x20\x14\x85\xf7\x79\x8a\xb3\x9a\x55\x47\xe8\x23\xb4\xd3\x81\x64\xd1\x8c\xc4\x6c\x0a\x6e\x4c\xbc\x36\x42\xa2\x53\x35\x43\xe7\xed\x4b\x1c\xa1\x3f\x94\xd9\x09\x9e\xef\x7c\xf7\xb0\xbe\xc6\x45\xad\x73\x22\x2d\xf7\x61\xc1\x63\xc5\x44\x8d\xf6\xe9\xf5\x58\x31\xce\xab\xf2\x85\xb0\x40\xee\x11\x68\xf1\x17\x8a\xa0\x4f\x1b\x93\x75\xef\x37\x32\x66\x44\xbc\xb5\x27\x2e\x1a\x91\x31\x69\x9e\xa5\x39\x7c\xc3\xd2\x74\x90\xa6\x71\x6a\x21\x69\xf8\xf6\x94\x3b\xc6\x98\x34\xfc\x9f\xb8\xa6\x99\x12\xdd\x43\x86\xf0\xd7\x90\x0f\xbb\x87\x88\x1a\x2f\x47\x71\xe8\x1a\xde\x37\xa7\x36\x5b\xbb\xb2\x26\x4d\x54\x86\x20\x9e\x69\xb4\xc6\x92\xc6\x70\xfd\x51\x25\x77\x0c\xfd\x44\xdb\xee\x84\xd1\x6b\x82\x8d\xa0\x8f\x55\xcd\x48\x3e\xf3\x6e\x5d\x06\x0a\xf0\xa6\x2a\x4d\x69\x52\x5b\x74\x9d\x35\x9c\x4f\x18\xa8\xdc\xa8\x59\x76\x37\x06\xea\x26\xc5\xa8\xdc\xef\xc4\x43\x6e\xa4\x10\x7c\xd8\x3c\xda\xc6\xf3\xac\xae\xa4\xe1\x1d\x62\xd2\x7e\x4d\xac\xfa\x0a\x00\x00\xff\xff\xe6\x20\x08\x4c\xb7\x01\x00\x00")

func vaultedRm1Bytes() ([]byte, error) {
	return bindataRead(
		_vaultedRm1,
		"vaulted-rm.1",
	)
}

func vaultedRm1() (*asset, error) {
	bytes, err := vaultedRm1Bytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vaulted-rm.1", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vaultedShell1 = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x58\x5d\x6f\xdb\xb8\xd2\xbe\xd7\xaf\x18\xe0\x05\x76\x13\xc0\x56\x90\xb6\x57\x79\xd1\x0b\x9f\xd8\x4d\x8c\xa4\xb6\x61\x39\x2d\x82\xd5\x22\xa0\xa5\x91\x45\x84\x22\xb5\x24\x65\xc7\xff\xfe\x60\x48\x7d\x39\x51\xb2\xdb\x03\x9c\x73\x67\x53\xe4\xcc\x70\x3e\x9e\x79\x86\xe1\xe6\x16\xf6\xac\x12\x16\xd3\x78\x6c\x72\x14\x02\x2e\x83\x30\xba\x85\xc5\xe4\xfb\x2c\x08\x57\xab\xa0\xfe\x0a\xfe\x63\x3c\x06\x63\x99\xb6\x06\x98\x04\x2e\x2d\x6a\x96\x58\xbe\xc7\xfa\xf3\x81\xdb\x1c\x6c\x8e\x60\x30\xd1\x68\x0d\x64\x4a\xbb\xff\x4e\x0a\x08\xc5\x52\x4c\xe9\x9c\xf2\xbb\xe8\x90\x53\x17\x3d\x2e\x96\xab\x68\x1e\x39\x95\x71\xf6\xaf\x38\xbb\x3e\x51\x1c\x67\x6b\x88\xb3\xb9\x64\x05\xc6\xd9\x0a\xfe\x88\xb3\xf9\x72\xb5\x99\x2f\x17\x51\x9c\xad\xfe\x0c\xc2\xad\x1e\x3a\x05\xf1\x38\x1e\x33\x63\x2a\x3a\xe5\x04\x30\x2d\x07\xcf\x47\xb7\x30\x9d\x45\xd7\xeb\xb9\x5b\x74\x56\x44\x1f\xdc\xf3\xac\x32\x68\xdc\x15\xbc\xd6\xe8\x76\x76\x7f\x4f\x2a\x50\xee\xb9\x56\xb2\x40\x69\x61\xcf\x34\x67\x5b\x81\x23\xe0\x19\x18\xb4\xff\x1f\x28\x9b\xa3\x3e\x70\x83\x90\x62\x46\x86\x1a\xb0\xaa\x16\x71\xb1\xe5\xf2\xc2\xe4\x71\xb6\x3e\x0f\x9d\x3d\xb5\x7d\x41\xb8\x69\x3c\xf2\xce\x6d\x82\xa8\xc4\x84\x67\xbc\xb6\x28\xab\x84\x80\xc9\x7a\x01\xb5\xeb\xb5\x12\x08\xe4\x38\x50\x59\xb7\x60\x15\x78\x51\x21\x44\x88\xa4\x60\x12\x45\x0f\xdf\xe7\x8b\x1b\x98\xc0\x7a\x79\x3f\x23\x37\x6d\x51\xa8\x83\x8b\x61\x8a\x96\x71\x61\x40\x49\xc8\xd5\x01\x7e\xd4\x5e\xf6\x22\x8c\x13\x69\xc2\x20\x9c\xaf\x82\x35\x49\x77\xeb\xa5\xe5\x4a\x42\xc1\x8e\xb0\x45\x28\x51\x67\x4a\x17\x98\xba\x1c\x51\x95\x05\xe3\xac\x3e\x72\xb9\x03\x56\xe7\x87\x55\x60\x4a\x76\x90\x90\x69\x55\x84\xc1\xcf\x1c\xc9\xf9\x7b\xf5\x8c\x29\xd8\x9c\x1b\x38\xb0\xe3\x08\x12\x8d\x29\x4a\xcb\x99\x30\xc0\x34\x82\x51\x95\x4e\x30\x75\x87\x1a\xc7\x82\x50\x09\x23\xfd\x06\xce\x30\xdc\x85\x41\x2f\x30\x23\x48\x94\xcc\xf8\xae\xd2\x6e\x07\x64\x5c\xa0\x19\x01\x97\xc6\x32\x99\x20\x94\x5a\xd1\xd2\x08\xd0\x26\x21\x05\xe3\x24\x00\x52\xc5\x63\x83\xc6\x70\x25\xe3\x6c\x1d\x4c\xb9\xa1\x18\x7b\xd7\xef\x50\x62\x2d\x94\x7c\x8d\x45\xa9\x34\xd3\xc7\x53\x8b\x65\xea\x23\xd0\xf9\x28\x84\x4d\x8e\x41\x89\xba\x60\x92\x12\xa7\xbf\xdd\x58\xa5\x5d\xc9\xf4\xca\x88\x2e\x5d\x19\xb7\x6a\x2c\xb2\x74\xd8\xf1\x09\x93\xa7\x8e\x67\x99\x45\xed\x1d\xec\x9d\xee\x73\xb9\x32\xf4\xaf\xcb\xe5\x93\x2c\x0b\x12\x55\x14\x64\x72\x5b\xd9\x2e\xb3\x7a\x89\x74\x54\x15\x1c\xb8\xc9\x7b\x19\xf5\xca\x63\x1a\x33\x8d\x2e\xb3\x7d\x4d\x01\x03\x89\x07\xa8\x9d\xe8\x25\xd3\xc2\xfb\xfe\x62\x50\xcb\xc0\x14\xf0\xa5\xe4\xde\xc7\x6f\xf5\xec\x7c\x50\xa8\x34\x9a\x3f\xab\x60\xb9\x47\xad\x79\x8a\xde\x64\xb7\x4c\xb6\x6e\x6b\x1f\x52\x76\x4f\x7e\x46\x14\x03\x6e\xa8\x4c\x4d\x7f\xa3\xdb\x72\xc8\x51\x06\x4d\x6c\xc9\x57\x43\x86\xfa\x20\xb8\x94\x65\xcd\x69\x6e\xbc\x80\xb3\x3d\x67\x30\x60\xe8\xa8\x17\x54\x6e\x0d\x8a\x6c\xd4\x54\x2d\xca\x44\x28\x8a\x4c\x3f\x73\x7f\x37\xb5\x94\xc9\xcf\xe8\x69\x3d\xbb\x99\x2f\x17\x74\x5d\xa5\x7b\xcb\xd3\xd9\xb7\xc9\xc3\xfd\xa6\xf7\xb9\xc1\x21\x73\x3e\xf2\xd1\xc7\xb4\x2f\xd4\xc0\x81\x0b\x01\x5c\x26\xa2\xaa\xbd\x34\xa4\x84\xe2\xf0\x81\x96\x60\x08\xf9\x1c\xbc\x71\x99\xf2\x84\x59\x2f\xb9\x46\x51\xef\x81\xd7\x01\x34\x26\x8f\xc7\xb5\x9f\x31\x1e\x3f\xe3\x91\x04\xdf\xd4\x0b\xce\x02\xea\x20\x04\xc9\xeb\x68\x02\xcf\x78\xec\xb5\x12\x7f\xb1\x26\xab\x7e\x37\x10\x45\xb7\xc0\x76\x28\xed\xa0\x9a\x52\xab\x97\x63\x3c\x76\x1b\x48\xcb\xec\xa5\x54\x0d\xa6\xe3\x8b\x45\x2d\x99\xe8\x44\xc0\xb0\x96\x41\xc9\x86\xef\xa8\xbe\xe2\x71\xa5\xa9\x6d\x05\xd7\x35\xd8\x34\xc2\x65\x5a\x2a\xee\x45\x56\x06\x5d\xfe\x91\x1e\xba\x4d\x7d\x34\x84\xeb\x4a\x6b\x94\x56\x1c\x41\x49\x71\x6c\xf1\x0a\xd3\xc0\x2a\x38\x28\xfd\xec\xab\xe6\x96\x99\x9c\x5f\x2b\x5d\x7a\x40\x6e\x65\x9b\xbf\x31\xcc\xa0\x36\x03\xa6\xb9\x75\x07\xc2\x7c\x27\x1b\xa3\x7c\x0f\xa7\x12\xe8\x9b\x48\xa9\x8d\x92\x62\x9c\xfa\x6e\x35\xf9\x19\xc1\xdd\xec\xd1\x75\xce\x3f\x08\x34\x50\xda\x3f\xaf\xe0\xff\xe0\xec\xe7\xed\x6c\x01\xdf\x97\xd3\xf9\xb7\x47\xea\x2e\x9b\xdb\x59\x34\x83\xe9\xf2\x3a\x1a\xc1\xe4\x3e\x5a\xc2\xc3\x6a\x3a\xd9\xcc\xae\x3a\x1a\x82\x72\x1f\x5e\x86\x05\xc5\x39\x0d\xba\xd5\x17\x4c\xdc\xf2\xb9\xd3\xd1\x74\x20\xd7\x88\xff\x39\x74\x5a\xd5\x80\x34\x76\x65\x1c\xf4\x4f\x79\x38\xa4\xeb\x44\x1b\x87\x0a\x94\xad\xa6\x12\xae\xf2\x5f\xb7\x9e\x2e\x30\x24\x59\x30\x63\xc9\x5b\x01\xe9\x4b\xab\x5e\x27\x68\xf5\x37\xa0\x77\xd6\x3b\xd9\x81\x43\x43\x5e\x30\xe5\xb6\x26\x02\xab\x55\xb0\x19\xc4\xc5\xa2\x32\xb6\x05\x31\x2e\x41\xe9\x14\x75\x07\xc2\x04\x42\x4a\x60\x58\x13\xaa\xf9\x42\x59\xbc\xf2\x3d\x3d\x61\x94\x77\x8d\x03\xfb\x4c\xc4\x54\x5b\x63\xb9\xad\xdc\x5d\x87\x9d\x4a\x79\x17\x0c\x02\xa0\x07\xb3\xfe\x5e\x6a\x0d\xa5\x56\x7b\x07\xbe\xaa\xd5\x48\x8c\x40\x2a\x0b\x05\xb3\x49\x1e\xd8\x5c\x19\xa4\x0b\xb0\x81\xea\x7a\x1d\x68\x0a\x0b\x75\xe9\x94\xe9\x74\x90\x6b\xf9\x6c\xed\x19\x71\x15\x84\xeb\x88\xa0\x19\xe2\xb3\x6d\x05\x9f\x82\x0e\xc3\x26\xd7\xd7\xb3\x28\x7a\xba\x9b\x3d\x3e\xcd\xa7\x54\x0e\xc4\x22\x27\x12\xb8\x3b\x9b\x71\xd4\x2d\x7d\x65\x49\x82\xc6\x50\x01\x84\xf0\x20\xf9\x5f\x95\xbb\x10\xb2\x24\xa7\x8e\x41\x21\xee\xbc\x45\xf1\x7f\xb7\x41\xbc\xb5\x22\x9a\x5d\xaf\x67\x9b\x9e\x31\x8d\x25\x9b\x96\x46\xfb\x18\x37\x75\xa9\xf1\xaf\x0a\x8d\x35\xff\x05\x4b\xa2\x68\xbe\x5c\x3c\x6d\x96\x77\x33\x07\xf9\x17\x70\x62\xe6\xc3\x7a\xbe\x79\x6c\xbf\x3a\x1b\x57\x3e\xba\xbe\x45\x36\x4c\x62\x50\xe5\x47\xa2\x08\x4c\xea\x3c\x71\x00\x67\xaa\xb2\x54\xda\x82\xc0\x1d\x4b\x8e\x10\x4d\xef\xc8\xe4\xf5\xcc\x03\xcd\x29\x4d\xfd\x9f\x01\xce\xe4\x15\x6f\x6e\xf8\x95\xa9\xc9\x77\x0a\xc8\x89\xde\xfb\x54\x76\x52\x7e\x37\xaf\x98\x26\xf1\x80\x60\xb8\xd4\xa9\x89\x77\xa2\x08\x12\xde\x61\x64\xa0\x4a\xfb\xa6\x38\x32\xae\x8d\x6d\x91\xcd\x93\xa6\x84\x25\x39\xfd\x6c\x31\xe7\x74\x16\x3b\x73\x12\x7b\xec\x3b\xe8\xcd\x57\x07\x66\x3a\x6b\xce\x9d\xb8\x76\xe2\xe9\xd0\xb0\x11\x6c\x55\xc3\x32\x7d\xb1\x78\xff\x90\xbb\x82\x84\x09\x51\x53\x2b\x26\x84\x3a\x98\x7a\x3a\x6c\x0f\x6e\xd1\x1b\xea\x89\x18\x03\xa1\xe4\x0e\x75\x87\x9e\x36\x67\xb2\x27\x35\xd0\x4a\x08\x20\xa9\x9e\xb5\x38\xa1\x70\x56\xb0\x17\x5e\x54\x05\xa5\xff\x25\xe4\xaa\xd2\xe7\xad\x52\xa3\xa0\x40\x26\x49\x31\xb3\x83\xf6\xb9\xf4\x6b\x59\xb2\x2b\x25\xcb\x1d\x82\x12\x2b\xed\xa3\x0c\x11\xc4\x1a\xa3\xdc\xb0\xd1\xbb\x8b\x8f\xc7\xa3\xaa\x5c\x5e\x38\xb5\xf5\x80\x53\x23\xb1\x1f\xc1\xc8\x93\x4d\xd0\xfc\x05\x2c\xd5\x8b\xa5\xb4\x4f\x34\x36\x34\xa9\x9d\xe1\x9c\x1a\x6e\x47\x20\xf8\x33\x4d\x3a\x57\x4e\x8d\x83\x34\x99\xbd\x99\xcd\x9b\x34\x81\xa8\x2a\x51\xd3\x40\x10\x84\x19\xf7\xa5\xb3\x5a\x05\x87\x9c\x27\x39\x1c\x54\x25\x52\x8a\xa2\x12\x7b\x6c\x88\x8d\x53\xc8\xb4\xac\x33\x8e\x69\x79\xc5\x0e\xe6\x8a\xb3\xe2\xea\xea\xf2\xf2\xf2\xd3\xa7\x4f\x9f\x3f\x7f\xfe\xf2\xe5\xcb\x15\x5d\xe5\xa2\x15\x1f\x67\xeb\xf8\x37\x7f\x75\xcf\x7c\xbb\x9c\xa2\x8d\xbe\x25\x34\xc1\x79\xdd\x11\x87\xdb\x2a\x37\x70\x19\x50\x08\x47\xc4\x12\x99\x4e\x05\x21\x6f\x7d\xa4\x15\xd1\x95\x4a\xbf\xbd\xbf\x2e\x38\x6f\xd9\x5c\x02\x4b\x53\x6e\xeb\x8c\xf3\xbb\x9b\x76\xd1\x09\x62\x5b\xb5\xc7\x51\x1b\x9d\x1a\x90\x4c\x7b\x96\x89\x77\x38\xae\xa3\x62\x5c\x52\xfe\x78\xe3\xd8\x96\xe6\xdb\x66\x42\x7a\xa7\x03\xfd\x20\xfe\x3c\x9b\x3e\xcd\x16\x3f\x9e\x08\xc8\xa8\x03\x2c\x1f\x16\x9b\x5e\x2f\xda\xf8\xce\xa3\x2a\x69\x61\x3e\x3d\x99\xba\x7c\x9c\xd3\x01\x24\x7f\x2b\x77\xbd\xe8\x0b\xec\x9e\x07\xfe\x33\x71\x8b\xc9\xf7\x59\x5f\xde\x9b\x97\x85\x5f\x90\xb5\x9a\xac\x37\xf3\x4d\x3d\x40\x34\x02\xa9\xc7\x97\x4c\x5b\x7e\x92\x2b\xbf\x2c\x79\x73\xdb\x17\x5a\x32\x9b\xbf\x23\xab\x2e\x8e\x6f\x4a\x03\xbe\xb0\xa2\x74\x11\xfb\x27\x45\xf6\x37\x45\x42\x2a\x2f\xde\x29\xc4\xa6\x04\xdd\xe0\xe7\x13\x38\x53\x04\x65\x54\x0d\x5d\x66\x6d\xd1\xc3\xac\x3d\xb5\xe8\x83\xd4\xf9\xda\xb7\x63\x60\xe3\x7a\xf1\xf5\xd7\xcc\x1e\x8c\xff\xd7\x0f\xbe\xb7\x31\xfd\xca\x0e\x66\xe8\xf3\xe6\xf6\xab\x57\xd2\xb9\x24\xba\x75\xd3\xc6\xdd\xec\x11\xa2\xf9\xcd\x62\xbe\xb8\xf1\x85\x9b\x39\x0a\x99\xb3\x7d\xcb\xc0\xa8\xfd\xbe\x19\x7b\xda\x97\x1b\x07\xf1\xdc\xf4\x69\x79\x6f\xbc\x0a\xea\xd9\x65\xe4\xa4\x12\x4c\xb7\xfb\x5c\x04\x9a\xca\xef\x75\x27\x56\x59\x45\x45\x4d\x6d\xc2\xcf\x3e\xd4\x71\xdc\x58\x14\xb0\x34\xf5\xac\xcc\xf5\x94\x7a\xd0\x24\xa2\x50\x6f\x80\xb7\x1b\x3c\xe4\x13\x69\xe0\x3b\xd9\xb6\x3c\x25\xd1\xf5\xac\x0e\xdd\xfc\x83\x8b\xdb\x1a\x9c\x9a\xa0\x51\xe2\xc1\xa1\x13\x57\x8e\xed\x77\xcf\x21\xee\x9f\x34\xfe\x36\x75\xab\xf3\x76\x68\x04\x26\x0e\xec\x68\x82\x3d\x13\x3c\x6d\x89\xc0\xe0\x88\x32\x02\xa3\x5c\x17\x06\xe6\x9b\xf5\x6b\x6f\x5b\xf5\x8c\x32\xd0\x58\x30\x2e\x0d\x38\x89\xfe\xe2\x77\xa7\xe3\xa1\xab\xe1\xa4\x12\x4c\x8b\x23\xb1\x87\xac\x12\x9e\x26\x26\xaa\xd8\x72\x59\xbf\x04\xb6\xb3\x6f\xef\xed\xcc\xf5\xa9\xc0\x39\xa0\x1d\xd6\x18\xb5\xe8\xf6\xe5\x6d\x04\x5c\xc6\xe3\x02\x0b\xa5\x8f\xee\x34\xb1\x46\x74\xaf\x84\x8d\xab\x9d\x0f\x1a\x8e\xe6\xdc\x1d\x28\xe9\x7b\x6c\xd7\x19\xb2\x1e\xcb\x72\xa9\xfa\x34\x99\x4e\xd7\xef\x3d\xe4\x82\x7f\x20\x6a\xd3\xa7\x99\x6d\x18\x68\x14\xcc\x3d\x6c\x50\x62\x07\x6d\x93\x71\x13\x5f\xed\x91\x87\xf5\x7d\xf3\x5e\xd7\xf8\xdb\x37\xdd\x34\xd5\x68\x4c\xc7\x1f\xdc\x60\xe7\x73\x7e\xd8\xf7\xaf\xd3\xdb\xbf\x8c\x2a\xfd\x3c\x6a\x28\x28\xd1\xc7\x86\x68\xc6\xbf\x85\xce\x90\x78\xec\x0e\xd3\xdd\x32\x2e\xd0\x3f\x90\xfa\xfe\x79\xa4\xe4\xcb\x55\x81\x90\x72\x8d\x89\x25\xa7\xba\xcc\xec\x3b\xa6\xe5\xfd\x43\x9e\x09\xe1\xc1\x71\xff\x1e\xb7\x05\xa1\x76\xdc\xa9\x6b\x9f\x0e\x59\x59\x6a\x55\x6a\x4e\xf1\xf4\x2c\xd6\x34\x11\x62\x81\xe1\x04\xbd\x70\x60\x2e\x98\xa5\x2a\x2b\xd1\xb0\xa1\x0f\x2f\x12\xb6\xe8\x5d\x28\x8d\xfd\x87\x6a\x3a\x4a\xd9\xe5\x9e\x7a\xfa\x59\xd1\x14\x3a\x16\xa5\x50\x47\x33\xa2\xd4\xa9\xbd\x95\x5b\x5b\x9a\xab\x8b\x8b\x1d\xb7\x79\xb5\x0d\x13\x55\x5c\x14\x34\x64\x09\xc1\x2e\x06\xdf\x8d\x08\xbb\x6e\x1e\xe6\xb0\x62\xc6\x1c\x94\x4e\x61\xa5\x55\x51\x5a\xe3\xac\xba\x79\x98\xc7\xe3\x2d\xa3\xe9\xad\x6c\xbe\x97\xfe\x7b\x73\x71\x37\xda\x6d\x8f\x94\x57\xf6\xf4\x1d\xb6\x81\xce\x49\x74\xb7\x9a\x44\x11\x29\xeb\xdc\x1d\x21\x9e\xbe\x19\x9c\x5d\x9e\x3b\x8f\xbc\xf2\x43\x18\xfc\x3b\x00\x00\xff\xff\x6d\x01\xaf\x0a\xe2\x19\x00\x00")

func vaultedShell1Bytes() ([]byte, error) {
	return bindataRead(
		_vaultedShell1,
		"vaulted-shell.1",
	)
}

func vaultedShell1() (*asset, error) {
	bytes, err := vaultedShell1Bytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vaulted-shell.1", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vaultedUpgrade1 = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\x4d\x6e\xc3\x20\x10\x85\xf7\x9c\x62\x2e\x10\xa4\x1e\xa1\x4d\x23\xc5\x8b\x3a\x96\xf1\xa6\x12\x9b\x89\x67\x88\x23\xd9\x90\xf2\x93\xb6\xb7\xaf\xc0\xa1\x0b\x2f\xb2\x43\xbc\xf7\xbe\x4f\x20\x87\x23\xdc\x31\xcd\x91\x49\xef\xd2\xed\xe2\x91\x18\x5e\x84\x54\x47\x68\x5f\x3f\x0e\x42\x76\x9d\x78\xe4\x50\x63\xbd\xab\xc7\x00\x33\x5f\x70\xfc\x5d\x11\x01\xa2\x83\x38\x31\x8c\xc9\x7b\xb6\x71\xbd\x05\xe3\xfc\x82\xb1\x20\xd5\x67\x7b\xea\x54\xa3\x0a\x56\x9b\x37\x6d\xf6\x1b\xb8\x36\x7d\x69\xbe\x1f\xd4\xbe\x6f\xba\xa1\x39\xb5\xa5\xdc\x33\xd2\xd6\x86\x96\x60\x74\xf6\xce\x3e\xab\x27\x5e\x9e\xf9\x25\x0c\x13\x43\xc0\x85\xc5\x0d\x43\xf8\x76\x9e\xe0\x1a\x20\x05\xa6\xdc\x58\x77\x2b\x8c\xe9\x61\x90\x45\x9d\x77\xfc\x73\x8d\x30\x3a\xe2\xbc\xe1\xaf\x84\x73\x75\xd9\xb4\x9c\xd9\x83\x33\xff\x7f\x30\x61\xae\xa6\x99\xc0\xba\x08\x67\xae\x4f\x23\x29\xfe\x02\x00\x00\xff\xff\x93\xa5\x62\x52\x6e\x01\x00\x00")

func vaultedUpgrade1Bytes() ([]byte, error) {
	return bindataRead(
		_vaultedUpgrade1,
		"vaulted-upgrade.1",
	)
}

func vaultedUpgrade1() (*asset, error) {
	bytes, err := vaultedUpgrade1Bytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vaulted-upgrade.1", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vaulted1 = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x57\x7f\x6f\xdb\xbc\x11\xfe\xbb\xfc\x14\xb7\x6c\xe8\x9b\x00\x8d\xdc\x0e\x5b\x87\xb7\x03\x06\xb8\xb1\xdf\xc6\x5b\x53\x1b\x91\xdb\x75\xa8\x8a\x82\x16\x4f\x36\x51\x8a\xd4\x78\x94\x1d\xff\xb3\xcf\x3e\x1c\x29\x29\x8e\xe3\xa0\xc5\x1b\x20\x80\x45\xf1\x9e\xe7\x7e\x3c\x3c\x9e\xb2\xe5\x35\x6c\x65\x6b\x02\x2a\x78\x25\xb2\xfc\x1a\x3e\x8c\x6f\xa6\x22\x5b\x2c\x44\xbf\x5c\x5c\x02\x35\x72\x67\x81\x90\x48\x3b\x4b\x50\x79\x57\x03\x61\xd9\x7a\x34\x7b\xa0\xe0\x3c\x2a\x7e\xf6\x18\x28\x62\xe4\xff\xf9\x30\x5f\xe4\xb3\x3c\xe2\x14\xd5\xdb\xa2\xba\xea\xd0\x8a\xea\x16\xd2\x42\x71\x69\xd3\xc3\xcc\xca\x1a\x8b\x6a\x01\x5f\xfa\x17\xba\xa8\x6e\xbf\x8a\x6c\xe5\x7f\x87\x6d\x71\xc9\xc6\xfc\xea\xea\x66\x52\x54\x8b\xa7\x5c\x98\x5d\xcd\x6f\x6e\xc6\x1f\x26\x9d\xf1\x4c\xfa\x35\x65\x59\x56\x54\x8b\xaf\x31\x84\xc9\x34\xbf\xba\x9d\x2d\x96\xb3\xf9\x87\x08\x31\xab\xc0\xba\x23\x3b\x4d\xd0\x78\xb7\xd5\x0a\xd5\x0b\x78\xc4\x81\x3a\x6c\xd0\xa7\xdc\xd1\xbd\x43\x70\xae\xab\xc1\xec\x02\x9c\x17\xdd\x0e\x69\x41\xdb\x80\x5e\x96\x41\x6f\x11\x68\x83\xc6\x64\x07\xee\x77\xb1\x41\x2d\xf7\xb0\x42\x68\x09\x15\x04\x07\x4a\x57\x15\x7a\xb4\x41\xcb\x80\x10\x36\x78\x40\x15\x0b\x75\xec\x58\xf1\xfc\x17\x02\xb7\xb3\x20\xfd\xba\xad\xd1\x06\xca\x62\xc4\x5d\x60\xb9\xc8\x96\x3d\xa5\x54\x31\x92\x51\x87\x51\x7a\x94\x01\x0f\x57\x2c\xee\x8a\xea\x56\xcc\xee\xfd\x36\x7b\x48\xdb\x28\xfa\x52\x3a\x1b\xd0\x06\x70\x15\x48\xb0\xb8\x4b\x62\xcb\x20\x47\x04\x91\xbd\xbd\xed\xc5\x77\x29\x95\x82\xf3\x57\x17\xd9\x01\x7b\xd9\x3c\x20\x77\xcd\x9e\xb9\xae\x5c\xa3\x4f\x81\x47\x20\x90\x56\x01\xc9\x2d\x12\xe8\x00\x92\x0e\x49\x61\xa7\xc3\xa6\x5b\x68\x24\xd1\xce\x79\x75\xc2\x91\xb2\x39\xf6\x43\xb5\x35\x7b\x22\xfe\xed\xf5\xc9\xb0\x12\x7a\x70\x40\x41\xb9\x36\xd2\xfe\x33\x9f\x7f\x38\x81\xcd\x48\xc7\xe8\xa8\x74\x78\x9c\x43\x5e\x7d\x4c\x65\x01\xef\x34\x05\x6d\xd7\x4f\xe6\x91\x0d\x1f\x51\xd8\x2d\x33\xcc\xdb\xd0\xb4\x81\x92\xb2\xa0\x74\x75\x2d\xad\x62\x12\x19\xc0\x38\x39\x1c\x61\xa8\x9c\x1f\xc2\xd2\x36\xb8\xe8\x47\xd2\xe3\x09\x42\xbb\x7d\xc4\x77\x87\x25\x13\x4e\xef\xb0\x6c\x39\x65\x47\x8c\x5d\x21\xd6\x7a\x8b\xb6\xa3\x71\x1e\xbc\x33\x78\x0a\xff\x0e\xcb\x63\x02\xf6\x96\x09\x3e\x12\xa6\x5c\x0f\x07\xaa\x2b\x83\xb6\xfc\x23\x09\x31\x62\x63\x63\x64\x89\x4f\xd4\xee\x04\x6b\xcc\xc7\x31\x2b\x1d\xea\xd1\x68\x8a\x75\x7b\xaf\x29\x10\x48\x63\x92\x2d\x9d\x02\xa3\x63\xa8\xa8\xbf\x07\x67\xab\x57\x64\x94\xf8\x46\xda\x75\xa7\xb4\x7e\x3d\x15\xe5\x27\x04\x90\xa0\x8f\x09\x7d\x7d\x48\xa6\xd0\xe0\xc3\x83\xec\xb1\x76\x5b\x5e\x11\xb7\xf1\x17\x1d\x11\x9d\x0a\xcb\xd7\xc7\x2c\xb1\xce\x0c\x92\x07\xe9\xc3\xe9\x96\x96\xaa\x1f\x15\x75\x20\x37\x7e\x4e\x4a\xe0\xcc\xa3\xfa\xb1\xee\x12\xd8\x91\x03\x6d\xb3\xf6\x52\xc5\x38\x3e\xa6\x9f\x04\x06\xd7\xb2\xdc\x77\x61\x40\x87\x5a\xb6\x9e\x7b\x66\xc7\x59\x39\x5f\xcb\x53\xc9\xec\xf0\x3a\x9a\xfc\x1a\x7e\x9b\xbd\x9f\xc2\xfb\xf9\xd5\x98\x2f\x86\x74\xbf\x7d\x4a\xc0\xdc\x79\x4a\x59\x6e\xe2\x55\xd8\x5d\x94\xd2\x63\x7f\x3d\xca\xb2\x74\x5e\x71\x3e\x3b\x0f\x3e\x4f\xde\xc1\x5b\x49\x08\x13\xed\xb1\x0c\xce\xef\x21\x6f\xb0\xd4\x95\x2e\x65\xd0\xce\x42\xf1\xc5\xc8\xaf\x9b\x10\x1a\x7a\x33\x1a\x51\x90\x56\x49\xaf\x28\xab\x3c\xa2\x42\xfa\x1e\x5c\x93\x39\xbf\x1e\xad\x24\xa1\xd2\xfe\x92\x1a\x2c\x1f\x3c\x5c\x1a\xee\xc2\x21\xdb\x84\xda\x14\x5f\xbc\xfc\x5a\x3c\x1f\xae\x93\xe8\x73\xbc\x21\xb4\xc1\x07\x7e\x6a\xfb\x46\x64\xb7\xb9\xc8\x66\x0b\x28\xce\x57\x2d\xfc\xb9\x4b\xed\x9f\x3e\x4f\xde\x7d\x9b\x8c\x97\xe3\x6f\xd7\xf3\x9b\xe9\xa8\xcb\xd0\xa8\xbb\x4d\xcf\xc3\xbe\xd1\xa5\x34\x66\xdf\x09\xea\x7f\xa3\xcc\xb8\x52\x9a\x11\x6d\xa4\xc7\xc3\xed\x17\xf1\x56\x7e\x1a\x7e\x32\xbb\xcd\x7f\x08\x3f\x6a\xc9\x8f\x0e\x08\x78\x1f\x57\xe0\xe0\x6d\xbf\x9e\xf8\x6e\xa7\xf7\xc5\x3a\x88\x7a\xe7\x75\x08\x18\xbb\xc5\x8f\xc2\x2c\x9e\x67\xb0\x74\xb0\x92\xe5\xf7\xb6\x81\xbd\x6b\x3d\x7c\xea\x46\x24\x25\x83\x7c\x11\x7b\x40\x42\xd6\x56\x84\x8d\x26\x50\x43\x69\x69\xe3\x5a\xa3\xf8\xde\x66\x7b\x54\xd0\x36\x2c\xb7\xa8\x93\x24\x9b\xce\x54\x39\xb0\x2e\x80\xc5\xd4\xcb\x56\x08\x1e\x83\xd4\x16\xd5\x50\xbc\xce\x8c\xcb\x77\x68\xf9\xd3\x45\xbc\x1a\x5f\x5d\x4f\x7f\xba\x8a\x91\xe2\x71\xfd\x38\x9f\xf9\x35\x4c\x3f\xcf\x96\x70\x35\x9f\x4c\x79\x6c\xc8\x85\x34\x66\xe5\xee\xfe\x2e\xca\x15\x94\x2b\x51\x82\x79\xf4\x9f\x89\xe9\x9d\x0e\x50\x3a\x85\xcf\x6e\x50\x5a\x6d\xd7\xe2\xe5\xb3\xbc\x2d\x4b\x24\xca\xc4\xeb\xbf\x3c\x9b\xd9\xad\x34\x5a\xc1\xd5\xfb\x19\xb4\x24\xd7\x08\xe7\x84\x08\x35\x52\x7c\xe0\x6e\x51\x3b\x8f\xa0\x38\x2f\x86\x2e\x32\xf1\xfa\xaf\xcf\x96\x1b\xe4\x6a\xca\xd8\x73\x5a\xeb\xb1\x74\x5b\xf4\x72\x65\x90\xaf\x86\x95\xc1\xfa\xbe\xef\x6c\x07\x0d\x64\xe2\xf5\xaf\xcf\xc6\xe0\xf1\xbf\xad\x4e\x33\xac\xdf\xea\x12\xd3\x60\x87\x84\x36\x98\x3d\xb4\x56\x6e\xa5\x36\x11\xeb\x1c\xb3\x75\x06\x92\xbe\x73\x97\xbd\xc8\xc4\xdf\x7e\x1d\xdc\x1d\x1a\x35\xb5\x4d\x63\x74\xac\xd7\x32\x25\xe9\xdd\xc7\x19\x2c\xfa\xd7\x0b\xef\xea\x86\xe7\xe4\xc5\x42\x8c\x4d\xd8\xb8\x76\xbd\x19\x84\x14\x7c\x9c\x6d\x1c\xd4\xf2\x3b\x02\xb5\x1e\x59\x68\x50\x4a\x0b\x1e\x93\x9a\xba\xca\xc4\x4b\xae\x57\x7d\xe5\x35\x5a\x45\x2f\x04\xb9\x1a\x83\xae\xd3\xf8\xa3\x09\x28\x68\x63\x38\x96\xaa\x4b\x46\x70\x3c\x38\x82\x64\x9f\x8a\xcb\xd8\x2e\xee\x3d\x6f\xa2\x6b\x19\xfc\x16\x1b\xb2\x26\xe1\x51\x92\xb3\x2f\x06\xf7\xd8\x8f\x55\xbc\x41\x2b\xbd\x6e\x7d\x92\x68\xc4\xb3\x7d\x52\x40\xd7\x8d\x41\x1e\x2b\x63\x17\xcb\x7a\xdb\x5f\x48\x0c\x3b\x6c\xc0\xb5\x4f\x4d\x4e\x13\xc7\xbc\x5e\x23\x83\xed\x36\x7c\x12\xe3\x04\xcb\x21\x7e\x1a\x7f\x7c\xbf\x9c\x4e\xbe\x8d\xf3\x7f\x2d\xc6\x79\xce\xc1\x6e\xa5\xd7\x31\x0e\x8e\x0d\x43\x3a\x12\x0b\xa7\x6d\xbc\xa9\x9e\x34\x0b\x2e\x5d\x9d\x3c\x8e\x44\x73\x2e\x7e\x1a\x7c\x06\x77\x69\x88\x60\xa7\x8d\x11\xa5\xe4\xb8\x86\xba\xa4\x30\x13\x42\x1a\x23\x22\x04\xa5\x8e\x9d\x76\xa4\xf4\xc5\x97\x2d\xa1\x67\xa5\x8a\x3e\xb7\x94\xc1\x32\x1a\x79\x0a\xd0\x48\x2f\x6b\x0c\xe8\x1f\x8c\x2d\x6c\x77\xe0\x62\xfa\xb8\x88\x80\x78\x17\x04\x27\xcd\xaa\xa1\x29\xd0\x86\x27\xf8\xce\x8a\xd9\x12\xfe\xe9\x22\xf0\x26\x1b\x5b\x5d\x1a\x2a\x06\xaf\xee\xdb\x5e\x1a\x5d\x7b\x3d\x79\x0c\xad\xe7\xfb\x0b\x28\x1d\xcc\x78\x5e\xe1\xfc\xe5\x45\x06\x33\x1e\x9b\x2a\xa9\x0d\x8b\x33\x2d\x5b\x67\x8b\xcb\x97\x17\x42\x53\x67\xc9\xdf\x43\x0f\x86\x17\x6d\x9b\x36\x0a\x52\xae\x9c\x0f\x7d\x2f\xeb\xb3\xab\x93\x26\xfa\xf0\x7a\x7d\xf0\x84\x20\x6b\x83\x44\x66\x9f\x4e\xef\x30\x93\x74\x71\x8a\x87\x71\x52\x77\x3e\xbb\x90\x68\x53\x5c\x76\x1b\xb9\x6d\x25\xce\xb9\x85\x5a\x96\xf3\xfc\x05\x07\x17\xcd\x61\xdc\x34\x06\xf3\xd2\xeb\x26\x3c\x95\xc0\x4e\xf8\xfc\xcd\xf5\x26\xc2\xc4\xee\x6a\x2b\xf1\xc7\x3f\xc4\xbb\x66\xa5\xed\x88\x07\x61\x47\x92\x22\x90\x10\xce\x82\x6f\xe3\x47\xd6\x56\x00\x00\xe8\x0a\x0c\xda\x75\xd8\xc4\xc1\xd3\xaf\xb7\xf0\x0f\x78\x19\x2b\x13\x5f\xf3\x1f\x61\x18\xda\x1c\xe7\x21\x60\x0d\xaf\xfa\xed\x71\x17\x1a\xc2\xa7\xb6\x9f\xf5\x2d\xe6\xcd\x59\xda\x6b\x15\xe8\x4a\x88\x7e\x6b\xe5\x9d\x0d\xb5\xa3\xf0\x4d\x72\x83\xea\xa6\x8c\xe0\x80\xbf\xa1\x99\xe5\x5c\xdb\xca\xc5\xfe\x7a\xde\x48\xee\x95\xee\xde\x06\x0e\x6c\x2e\x2e\x22\x66\xe0\xf9\xeb\x10\xea\x24\xc1\xe0\xad\xd2\xd4\x18\xb9\x07\xa5\xa5\x71\xeb\xc1\xf1\xd4\x95\x75\x30\x08\x67\x9d\x1e\xce\xd2\xa2\x2e\x63\xe2\xdb\x88\x1d\x57\x36\x5a\x29\xb4\x20\x2d\xed\xd0\x83\xc2\xaa\xfb\xe4\x8b\x8f\x67\x67\x62\xe0\xe2\x13\x33\x48\x91\x43\xf3\x48\xad\x09\x43\x5a\xd8\x75\xc1\x3f\x7c\x6b\x45\x56\xe9\x78\x9d\xfd\x3f\x00\x00\xff\xff\xcd\x29\x77\x60\x0b\x11\x00\x00")

func vaulted1Bytes() ([]byte, error) {
	return bindataRead(
		_vaulted1,
		"vaulted.1",
	)
}

func vaulted1() (*asset, error) {
	bytes, err := vaulted1Bytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vaulted.1", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"vaulted-add.1":     vaultedAdd1,
	"vaulted-cp.1":      vaultedCp1,
	"vaulted-dump.1":    vaultedDump1,
	"vaulted-edit.1":    vaultedEdit1,
	"vaulted-env.1":     vaultedEnv1,
	"vaulted-exec.1":    vaultedExec1,
	"vaulted-load.1":    vaultedLoad1,
	"vaulted-ls.1":      vaultedLs1,
	"vaulted-passwd.1":  vaultedPasswd1,
	"vaulted-rm.1":      vaultedRm1,
	"vaulted-shell.1":   vaultedShell1,
	"vaulted-upgrade.1": vaultedUpgrade1,
	"vaulted.1":         vaulted1,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"vaulted-add.1":     &bintree{vaultedAdd1, map[string]*bintree{}},
	"vaulted-cp.1":      &bintree{vaultedCp1, map[string]*bintree{}},
	"vaulted-dump.1":    &bintree{vaultedDump1, map[string]*bintree{}},
	"vaulted-edit.1":    &bintree{vaultedEdit1, map[string]*bintree{}},
	"vaulted-env.1":     &bintree{vaultedEnv1, map[string]*bintree{}},
	"vaulted-exec.1":    &bintree{vaultedExec1, map[string]*bintree{}},
	"vaulted-load.1":    &bintree{vaultedLoad1, map[string]*bintree{}},
	"vaulted-ls.1":      &bintree{vaultedLs1, map[string]*bintree{}},
	"vaulted-passwd.1":  &bintree{vaultedPasswd1, map[string]*bintree{}},
	"vaulted-rm.1":      &bintree{vaultedRm1, map[string]*bintree{}},
	"vaulted-shell.1":   &bintree{vaultedShell1, map[string]*bintree{}},
	"vaulted-upgrade.1": &bintree{vaultedUpgrade1, map[string]*bintree{}},
	"vaulted.1":         &bintree{vaulted1, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
